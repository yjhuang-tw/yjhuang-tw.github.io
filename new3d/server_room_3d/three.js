var THREE={REVISION:"76"};"function"==typeof define&&define.amd?define("three",THREE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=THREE),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:0<t?1:+t}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}}),void 0===Object.assign&&Object.defineProperty(Object,"assign",{writable:!0,configurable:!0,value:function(t){"use strict";if(null==t)throw new TypeError("Cannot convert first argument to object");for(var e=Object(t),r=1,i=arguments.length;r!==i;++r)if(null!=(n=arguments[r]))for(var n=Object(n),o=Object.keys(n),a=0,s=o.length;a!==s;++a){var c=o[a],h=Object.getOwnPropertyDescriptor(n,c);void 0!==h&&h.enumerable&&(e[c]=n[c])}return e}}),THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.NeverDepth=0,THREE.AlwaysDepth=1,THREE.LessDepth=2,THREE.LessEqualDepth=3,THREE.EqualDepth=4,THREE.GreaterEqualDepth=5,THREE.GreaterDepth=6,THREE.NotEqualDepth=7,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.NoToneMapping=0,THREE.LinearToneMapping=1,THREE.ReinhardToneMapping=2,THREE.Uncharted2ToneMapping=3,THREE.CineonToneMapping=4,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.CubeUVReflectionMapping=306,THREE.CubeUVRefractionMapping=307,THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.HalfFloatType=1025,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.DepthFormat=1026,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.RGB_ETC1_Format=2151,THREE.LoopOnce=2200,THREE.LoopRepeat=2201,THREE.LoopPingPong=2202,THREE.InterpolateDiscrete=2300,THREE.InterpolateLinear=2301,THREE.InterpolateSmooth=2302,THREE.ZeroCurvatureEnding=2400,THREE.ZeroSlopeEnding=2401,THREE.WrapAroundEnding=2402,THREE.TrianglesDrawMode=0,THREE.TriangleStripDrawMode=1,THREE.TriangleFanDrawMode=2,THREE.LinearEncoding=3e3,THREE.sRGBEncoding=3001,THREE.GammaEncoding=3007,THREE.RGBEEncoding=3002,THREE.LogLuvEncoding=3003,THREE.RGBM7Encoding=3004,THREE.RGBM16Encoding=3005,THREE.RGBDEncoding=3006,THREE.BasicDepthPacking=3200,THREE.RGBADepthPacking=3201,THREE.Color=function(t){return 3===arguments.length?this.fromArray(arguments):this.set(t)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(t){return t instanceof THREE.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){this.r=t,this.g=t,this.b=t},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(){function i(t,e,r){return r<0&&(r+=1),1<r&&--r,r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t}return function(t,e,r){return t=THREE.Math.euclideanModulo(t,1),e=THREE.Math.clamp(e,0,1),r=THREE.Math.clamp(r,0,1),0===e?this.r=this.g=this.b=r:(this.r=i(e=2*r-(r=r<=.5?r*(1+e):r+e-r*e),r,t+1/3),this.g=i(e,r,t),this.b=i(e,r,t-1/3)),this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(h=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,i=h[1],n=h[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n)){var o=parseFloat(r[1])/360,a=parseInt(r[2],10)/100,s=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(o,a,s)}}}else if(h=/^\#([A-Fa-f0-9]+)$/.exec(e)){var c,h=(c=h[1]).length;if(3===h)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===h)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}return e&&0<e.length&&(void 0!==(c=THREE.ColorKeywords[e])?this.setHex(c):console.warn("THREE.Color: Unknown color "+e)),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){e=0<(e=void 0===e?2:e)?1/e:1;return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},convertGammaToLinear:function(){var t=this.r,e=this.g,r=this.b;return this.r=t*t,this.g=e*e,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,r=t||{h:0,s:0,l:0},i=this.r,n=this.g,o=this.b,a=Math.max(i,n,o),s=Math.min(i,n,o),t=(s+a)/2;if(s===a)h=e=0;else{var c=a-s,h=t<=.5?c/(a+s):c/(2-a-s);switch(a){case i:e=(n-o)/c+(n<o?6:0);break;case n:e=(o-i)/c+2;break;case o:e=(i-n)/c+4}e/=6}return r.h=e,r.s=h,r.l=t,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){var i=this.getHSL();return i.h+=t,i.s+=e,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return this.r=t[e=void 0===e?0:e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return(t=void 0===t?[]:t)[e=void 0===e?0:e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(t instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(t._x/2),i=Math.cos(t._y/2),n=Math.cos(t._z/2),o=Math.sin(t._x/2),a=Math.sin(t._y/2),s=Math.sin(t._z/2),t=t.order;return"XYZ"===t?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===t?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===t?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===t?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===t?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===t&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,e=Math.sin(r);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,r=t.elements,i=r[0],n=r[4],o=r[8],a=r[1],s=r[5],c=r[9],h=r[2],l=r[6],t=r[10],r=i+s+t;return 0<r?(e=.5/Math.sqrt(r+1),this._w=.25/e,this._x=(l-c)*e,this._y=(o-h)*e,this._z=(a-n)*e):s<i&&t<i?(e=2*Math.sqrt(1+i-s-t),this._w=(l-c)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(o+h)/e):t<s?(e=2*Math.sqrt(1+s-i-t),this._w=(o-h)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(c+l)/e):(e=2*Math.sqrt(1+t-i-s),this._w=(a-n)/e,this._x=(o+h)/e,this._y=(c+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector3),(i=t.dot(e)+1)<1e-6?(i=0,Math.abs(t.x)>Math.abs(t.z)?r.set(-t.y,t.x,0):r.set(0,-t.z,t.y)):r.crossVectors(t,e),this._x=r.x,this._y=r.y,this._z=r.z,this._w=i,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(t=1/t),this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,o=t._w,a=e._x,s=e._y,t=e._z,e=e._w;return this._x=r*e+o*a+i*t-n*s,this._y=i*e+o*s+n*a-r*t,this._z=n*e+o*t+r*s-i*a,this._w=o*e-r*a-i*s-n*t,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var r=this._x,i=this._y,n=this._z,o=this._w,a=o*t._w+r*t._x+i*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),1<=a)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.sqrt(1-a*a);if(Math.abs(s)<.001)return this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this;t=Math.atan2(s,a),a=Math.sin((1-e)*t)/s,s=Math.sin(e*t)/s;return this._w=o*a+this._w*s,this._x=r*a+this._x*s,this._y=i*a+this._y*s,this._z=n*a+this._z*s,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return this._x=t[e=void 0===e?0:e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return(t=void 0===t?[]:t)[e=void 0===e?0:e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},Object.assign(THREE.Quaternion,{slerp:function(t,e,r,i){return r.copy(t).slerp(e,i)},slerpFlat:function(t,e,r,i,n,o,a){var s=r[i+0],c=r[i+1],h=r[i+2],l=r[i+3],u=n[o+0],p=n[o+1],d=n[o+2],E=n[o+3];l===E&&s===u&&c===p&&h===d||(r=1-a,n=0<=(i=s*u+c*p+h*d+l*E)?1:-1,(o=1-i*i)>Number.EPSILON&&(o=Math.sqrt(o),i=Math.atan2(o,i*n),r=Math.sin(r*i)/o,a=Math.sin(a*i)/o),s=s*r+u*(n=a*n),c=c*r+p*n,h=h*r+d*n,l=l*r+E*n,r===1-a&&(s*=a=1/Math.sqrt(s*s+c*c+h*h+l*l),c*=a,h*=a,l*=a)),t[e]=s,t[e+1]=c,t[e+2]=h,t[e+3]=l}}),THREE.Vector2=function(t,e){this.x=t||0,this.y=e||0},THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(t){this.x=t},get height(){return this.y},set height(t){this.y=t},set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t):(this.x=0,this.y=0),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector2,i=new THREE.Vector2),r.set(t,t),i.set(e,e),this.clamp(r,i)}}(),clampLength:function(t,e){var r=this.length();return this.multiplyScalar(Math.max(t,Math.min(e,r))/r),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,t=this.y-t.y;return e*e+t*t},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t),this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return this.x=t[e=void 0===e?0:e],this.y=t[e+1],this},toArray:function(t,e){return(t=void 0===t?[]:t)[e=void 0===e?0:e]=this.x,t[e+1]=this.y,t},fromAttribute:function(t,e,r){return e=e*t.itemSize+(r=void 0===r?0:r),this.x=t.array[e],this.y=t.array[e+1],this},rotateAround:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=this.x-t.x,e=this.y-t.y;return this.x=n*r-e*i+t.x,this.y=n*i+e*r+t.y,this}},THREE.Vector3=function(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var e;return function(t){return t instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var r;return function(t,e){return void 0===r&&(r=new THREE.Quaternion),this.applyQuaternion(r.setFromAxisAngle(t,e)),this}}(),applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z,t=t.elements;return this.x=t[0]*e+t[3]*r+t[6]*i,this.y=t[1]*e+t[4]*r+t[7]*i,this.z=t[2]*e+t[5]*r+t[8]*i,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,t=t.elements;return this.x=t[0]*e+t[4]*r+t[8]*i+t[12],this.y=t[1]*e+t[5]*r+t[9]*i+t[13],this.z=t[2]*e+t[6]*r+t[10]*i+t[14],this},applyProjection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements,t=1/(n[3]*e+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*e+n[4]*r+n[8]*i+n[12])*t,this.y=(n[1]*e+n[5]*r+n[9]*i+n[13])*t,this.z=(n[2]*e+n[6]*r+n[10]*i+n[14])*t,this},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t.x,o=t.y,a=t.z,s=t.w,c=s*e+o*i-a*r,h=s*r+a*e-n*i,t=s*i+n*r-o*e,i=-n*e-o*r-a*i;return this.x=c*s+i*-n+h*-a-t*-o,this.y=h*s+i*-o+t*-n-c*-a,this.z=t*s+i*-a+c*-o-h*-n,this},project:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(t){var e=this.x,r=this.y,i=this.z,t=t.elements;return this.x=t[0]*e+t[4]*r+t[8]*i,this.y=t[1]*e+t[5]*r+t[9]*i,this.z=t[2]*e+t[6]*r+t[10]*i,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector3,i=new THREE.Vector3),r.set(t,t,t),i.set(e,e,e),this.clamp(r,i)}}(),clampLength:function(t,e){var r=this.length();return this.multiplyScalar(Math.max(t,Math.min(e,r))/r),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t),this},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var r=this.x,i=this.y,e=this.z;return this.x=i*t.z-e*t.y,this.y=e*t.x-r*t.z,this.z=r*t.y-i*t.x,this},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,o=e.x,t=e.y,e=e.z;return this.x=i*e-n*t,this.y=n*o-r*e,this.z=r*t-i*o,this},projectOnVector:function(){var e,r;return function(t){return(e=void 0===e?new THREE.Vector3:e).copy(t).normalize(),r=this.dot(e),this.copy(e).multiplyScalar(r)}}(),projectOnPlane:function(){var e;return function(t){return(e=void 0===e?new THREE.Vector3:e).copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(t){t=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y,t=this.z-t.z;return e*e+r*r+t*t},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromMatrixPosition:function(t){return this.setFromMatrixColumn(t,3)},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),r=this.setFromMatrixColumn(t,1).length(),t=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=r,this.z=t,this},setFromMatrixColumn:function(t,e){return"number"==typeof t&&(console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index )."),t=arguments[1],e=arguments[0]),this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return this.x=t[e=void 0===e?0:e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return(t=void 0===t?[]:t)[e=void 0===e?0:e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromAttribute:function(t,e,r){return e=e*t.itemSize+(r=void 0===r?0:r),this.x=t.array[e],this.y=t.array[e+1],this.z=t.array[e+2],this}},THREE.Vector4=function(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t,this.w*=t):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w,t=t.elements;return this.x=t[0]*e+t[4]*r+t[8]*i+t[12]*n,this.y=t[1]*e+t[5]*r+t[9]*i+t[13]*n,this.z=t[2]*e+t[6]*r+t[10]*i+t[14]*n,this.w=t[3]*e+t[7]*r+t[11]*i+t[15]*n,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,i,n=t.elements,o=n[0],a=n[4],s=n[8],c=n[1],h=n[5],l=n[9],u=n[2],p=n[6],d=n[10];if(Math.abs(a-c)<.01&&Math.abs(s-u)<.01&&Math.abs(l-p)<.01){if(Math.abs(a+c)<.1&&Math.abs(s+u)<.1&&Math.abs(l+p)<.1&&Math.abs(o+h+d-3)<.1)return this.set(1,0,0,0),this;var E=Math.PI,f=(o+1)/2,m=(h+1)/2,g=(d+1)/2,T=(a+c)/4,t=(s+u)/4,n=(l+p)/4;return m<f&&g<f?i=f<.01?(e=0,r=.707106781):(r=T/(e=Math.sqrt(f)),t/e):g<m?i=m<.01?(r=0,e=.707106781):(e=T/(r=Math.sqrt(m)),n/r):g<.01?(r=e=.707106781,i=0):(e=t/(i=Math.sqrt(g)),r=n/i),this.set(e,r,i,E),this}E=Math.sqrt((p-l)*(p-l)+(s-u)*(s-u)+(c-a)*(c-a));return Math.abs(E)<.001&&(E=1),this.x=(p-l)/E,this.y=(s-u)/E,this.z=(c-a)/E,this.w=Math.acos((o+h+d-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector4,i=new THREE.Vector4),r.set(t,t,t,t),i.set(e,e,e,e),this.clamp(r,i)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t),this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return this.x=t[e=void 0===e?0:e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return(t=void 0===t?[]:t)[e=void 0===e?0:e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromAttribute:function(t,e,r){return e=e*t.itemSize+(r=void 0===r?0:r),this.x=t.array[e],this.y=t.array[e+1],this.z=t.array[e+2],this.w=t.array[e+3],this}},THREE.Euler=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,r){var i=THREE.Math.clamp,n=t.elements,o=n[0],a=n[4],s=n[8],c=n[1],h=n[5],l=n[9],u=n[2],t=n[6],n=n[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,n),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(t,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,n),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-u,o),this._z=0)):"ZXY"===e?(this._x=Math.asin(i(t,-1,1)),Math.abs(t)<.99999?(this._y=Math.atan2(-u,n),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(c,o))):"ZYX"===e?(this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(t,n),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===e?(this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(s,n))):"XZY"===e?(this._z=Math.asin(-i(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(t,h),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-l,n),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var i;return function(t,e,r){return(i=void 0===i?new THREE.Matrix4:i).makeRotationFromQuaternion(t),this.setFromRotationMatrix(i,e,r),this}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return(t=void 0===t?[]:t)[e=void 0===e?0:e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},THREE.Line3=function(t,e){this.start=void 0!==t?t:new THREE.Vector3,this.end=void 0!==e?e:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},center:function(t){return(t||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){e=e||new THREE.Vector3;return this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var r=new THREE.Vector3,i=new THREE.Vector3;return function(t,e){r.subVectors(t,this.start),i.subVectors(this.end,this.start);t=i.dot(i),t=i.dot(r)/t;return t=e?THREE.Math.clamp(t,0,1):t}}(),closestPointToPoint:function(t,e,r){e=this.closestPointToPointParameter(t,e),r=r||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}},THREE.Box2=function(t,e){this.min=void 0!==t?t:new THREE.Vector2(1/0,1/0),this.max=void 0!==e?e:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var r=new THREE.Vector2;return function(t,e){e=r.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(t){return(t||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new THREE.Vector2).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new THREE.Vector2).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},THREE.Box3=function(t,e){this.min=void 0!==t?t:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,r=1/0,i=1/0,n=-1/0,o=-1/0,a=-1/0,s=0,c=t.length;s<c;s+=3){var h=t[s],l=t[s+1],u=t[s+2];h<e&&(e=h),l<r&&(r=l),u<i&&(i=u),n<h&&(n=h),o<l&&(o=l),a<u&&(a=u)}this.min.set(e,r,i),this.max.set(n,o,a)},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var r=new THREE.Vector3;return function(t,e){e=r.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}}(),setFromObject:function(){var s=new THREE.Vector3;return function(t){var a=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var e=t.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var r=e.vertices,i=0,n=r.length;i<n;i++)s.copy(r[i]),s.applyMatrix4(t.matrixWorld),a.expandByPoint(s);else if(e instanceof THREE.BufferGeometry&&void 0!==e.attributes.position)for(var o=e.attributes.position.array,i=0,n=o.length;i<n;i+=3)s.fromArray(o,i),s.applyMatrix4(t.matrixWorld),a.expandByPoint(s)}),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){return(t||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new THREE.Vector3).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(t){var e,r=0<t.normal.x?(e=t.normal.x*this.min.x,t.normal.x*this.max.x):(e=t.normal.x*this.max.x,t.normal.x*this.min.x);return 0<t.normal.y?(e+=t.normal.y*this.min.y,r+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,r+=t.normal.y*this.min.y),0<t.normal.z?(e+=t.normal.z*this.min.z,r+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,r+=t.normal.z*this.min.z),e<=t.constant&&r>=t.constant},clampPoint:function(t,e){return(e||new THREE.Vector3).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){t=t||new THREE.Sphere;return t.center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return this.isEmpty()||(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e)),this}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,e,r,i,n,o,a,s,c){var h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=n,h[5]=s,h[6]=r,h[7]=o,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){t=t.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},setFromMatrix4:function(t){t=t.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToVector3Array:function(){var o;return function(t,e,r){void 0===o&&(o=new THREE.Vector3),void 0===r&&(r=t.length);for(var i=0,n=e=void 0===e?0:e;i<r;i+=3,n+=3)o.fromArray(t,n),o.applyMatrix3(this),o.toArray(t,n);return t}}(),applyToBuffer:function(){var o;return function(t,e,r){void 0===o&&(o=new THREE.Vector3),void 0===r&&(r=t.length/t.itemSize);for(var i=0,n=e=void 0===e?0:e;i<r;i++,n++)o.x=t.getX(n),o.y=t.getY(n),o.z=t.getZ(n),o.applyMatrix3(this),t.setXYZ(o.x,o.y,o.z);return t}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],o=t[4],a=t[5],s=t[6],c=t[7],t=t[8];return e*o*t-e*a*c-r*n*t+r*a*s+i*n*c-i*o*s},getInverse:function(t,e){t instanceof THREE.Matrix4&&console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");var r=t.elements,i=this.elements,n=r[0],o=r[1],a=r[2],s=r[3],c=r[4],h=r[5],l=r[6],u=r[7],p=r[8],d=p*c-h*u,E=h*l-p*s,t=u*s-c*l,r=n*d+o*E+a*t;if(0!=r)return i[0]=d,i[1]=a*u-p*o,i[2]=h*o-a*c,i[3]=E,i[4]=p*n-a*l,i[5]=a*s-h*n,i[6]=t,i[7]=o*l-u*n,i[8]=c*n-o*s,this.multiplyScalar(1/r);r="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(r);return console.warn(r),this.identity()},transpose:function(){var t=this.elements,e=t[1];return t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),this.toArray(t,e)},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(t,e){var r=this.elements;return(t=void 0===t?[]:t)[e=void 0===e?0:e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,r,i,n,o,a,s,c,h,l,u,p,d,E,f){var m=this.elements;return m[0]=t,m[4]=e,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=c,m[6]=h,m[10]=l,m[14]=u,m[3]=p,m[7]=d,m[11]=E,m[15]=f,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(t){return this.elements.set(t.elements),this},copyPosition:function(t){var e=this.elements,t=t.elements;return e[12]=t[12],e[13]=t[13],e[14]=t[14],this},extractBasis:function(t,e,r){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,r){return this.set(t.x,e.x,r.x,0,t.y,e.y,r.y,0,t.z,e.z,r.z,0,0,0,0,1),this},extractRotation:function(){var o;return function(t){void 0===o&&(o=new THREE.Vector3);var e=this.elements,r=t.elements,i=1/o.setFromMatrixColumn(t,0).length(),n=1/o.setFromMatrixColumn(t,1).length(),t=1/o.setFromMatrixColumn(t,2).length();return e[0]=r[0]*i,e[1]=r[1]*i,e[2]=r[2]*i,e[4]=r[4]*n,e[5]=r[5]*n,e[6]=r[6]*n,e[8]=r[8]*t,e[9]=r[9]*t,e[10]=r[10]*t,this}}(),makeRotationFromEuler:function(t){t instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e,r,i,n,o,a,s,c,h,l,u,p,d=this.elements,E=t.x,f=t.y,m=t.z,g=Math.cos(E),T=Math.sin(E),v=Math.cos(f),E=Math.sin(f),f=Math.cos(m),m=Math.sin(m);return"XYZ"===t.order?(o=g*f,a=g*m,s=T*f,c=T*m,d[0]=v*f,d[4]=-v*m,d[8]=E,d[1]=a+s*E,d[5]=o-c*E,d[9]=-T*v,d[2]=c-o*E,d[6]=s+a*E,d[10]=g*v):"YXZ"===t.order?(r=v*m,i=E*f,d[0]=(e=v*f)+(n=E*m)*T,d[4]=i*T-r,d[8]=g*E,d[1]=g*m,d[5]=g*f,d[9]=-T,d[2]=r*T-i,d[6]=n+e*T,d[10]=g*v):"ZXY"===t.order?(r=v*m,i=E*f,d[0]=(e=v*f)-(n=E*m)*T,d[4]=-g*m,d[8]=i+r*T,d[1]=r+i*T,d[5]=g*f,d[9]=n-e*T,d[2]=-g*E,d[6]=T,d[10]=g*v):"ZYX"===t.order?(o=g*f,a=g*m,s=T*f,c=T*m,d[0]=v*f,d[4]=s*E-a,d[8]=o*E+c,d[1]=v*m,d[5]=c*E+o,d[9]=a*E-s,d[2]=-E,d[6]=T*v,d[10]=g*v):"YZX"===t.order?(h=g*v,l=g*E,u=T*v,p=T*E,d[0]=v*f,d[4]=p-h*m,d[8]=u*m+l,d[1]=m,d[5]=g*f,d[9]=-T*f,d[2]=-E*f,d[6]=l*m+u,d[10]=h-p*m):"XZY"===t.order&&(h=g*v,l=g*E,u=T*v,p=T*E,d[0]=v*f,d[4]=-m,d[8]=E*f,d[1]=h*m+p,d[5]=g*f,d[9]=l*m-u,d[2]=u*m-l,d[6]=T*f,d[10]=p*m+h),d[3]=0,d[7]=0,d[11]=0,d[12]=0,d[13]=0,d[14]=0,d[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z,o=t.w,a=r+r,s=i+i,c=n+n,h=r*a,l=r*s,t=r*c,r=i*s,i=i*c,n=n*c,a=o*a,s=o*s,c=o*c;return e[0]=1-(r+n),e[4]=l-c,e[8]=t+s,e[1]=l+c,e[5]=1-(h+n),e[9]=i-a,e[2]=t-s,e[6]=i+a,e[10]=1-(h+r),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var n,o,a;return function(t,e,r){void 0===n&&(n=new THREE.Vector3),void 0===o&&(o=new THREE.Vector3),void 0===a&&(a=new THREE.Vector3);var i=this.elements;return a.subVectors(t,e).normalize(),0===a.lengthSq()&&(a.z=1),n.crossVectors(r,a).normalize(),0===n.lengthSq()&&(a.x+=1e-4,n.crossVectors(r,a).normalize()),o.crossVectors(a,n),i[0]=n.x,i[4]=o.x,i[8]=a.x,i[1]=n.y,i[5]=o.y,i[9]=a.y,i[2]=n.z,i[6]=o.z,i[10]=a.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,o=r[0],a=r[4],s=r[8],c=r[12],h=r[1],l=r[5],u=r[9],p=r[13],d=r[2],E=r[6],f=r[10],m=r[14],g=r[3],T=r[7],v=r[11],y=r[15],R=i[0],H=i[4],x=i[8],_=i[12],b=i[1],M=i[5],w=i[9],S=i[13],L=i[2],A=i[6],C=i[10],P=i[14],t=i[3],e=i[7],r=i[11],i=i[15];return n[0]=o*R+a*b+s*L+c*t,n[4]=o*H+a*M+s*A+c*e,n[8]=o*x+a*w+s*C+c*r,n[12]=o*_+a*S+s*P+c*i,n[1]=h*R+l*b+u*L+p*t,n[5]=h*H+l*M+u*A+p*e,n[9]=h*x+l*w+u*C+p*r,n[13]=h*_+l*S+u*P+p*i,n[2]=d*R+E*b+f*L+m*t,n[6]=d*H+E*M+f*A+m*e,n[10]=d*x+E*w+f*C+m*r,n[14]=d*_+E*S+f*P+m*i,n[3]=g*R+T*b+v*L+y*t,n[7]=g*H+T*M+v*A+y*e,n[11]=g*x+T*w+v*C+y*r,n[15]=g*_+T*S+v*P+y*i,this},multiplyToArray:function(t,e,r){var i=this.elements;return this.multiplyMatrices(t,e),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToVector3Array:function(){var o;return function(t,e,r){void 0===o&&(o=new THREE.Vector3),void 0===r&&(r=t.length);for(var i=0,n=e=void 0===e?0:e;i<r;i+=3,n+=3)o.fromArray(t,n),o.applyMatrix4(this),o.toArray(t,n);return t}}(),applyToBuffer:function(){var o;return function(t,e,r){void 0===o&&(o=new THREE.Vector3),void 0===r&&(r=t.length/t.itemSize);for(var i=0,n=e=void 0===e?0:e;i<r;i++,n++)o.x=t.getX(n),o.y=t.getY(n),o.z=t.getZ(n),o.applyMatrix4(this),t.setXYZ(o.x,o.y,o.z);return t}}(),determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],o=t[1],a=t[5],s=t[9],c=t[13],h=t[2],l=t[6],u=t[10],p=t[14];return t[3]*(+n*s*l-i*c*l-n*a*u+r*c*u+i*a*p-r*s*p)+t[7]*(+e*s*p-e*c*u+n*o*u-i*o*p+i*c*h-n*s*h)+t[11]*(+e*c*l-e*a*p-n*o*l+r*o*p+n*a*h-r*c*h)+t[15]*(-i*a*h-e*s*l+e*a*u+i*o*l-r*o*u+r*s*h)},transpose:function(){var t=this.elements,e=t[1];return t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new THREE.Vector3),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,i=t.elements,n=i[0],o=i[1],a=i[2],s=i[3],c=i[4],h=i[5],l=i[6],u=i[7],p=i[8],d=i[9],E=i[10],f=i[11],m=i[12],g=i[13],T=i[14],v=i[15],y=d*T*u-g*E*u+g*l*f-h*T*f-d*l*v+h*E*v,R=m*E*u-p*T*u-m*l*f+c*T*f+p*l*v-c*E*v,H=p*g*u-m*d*u+m*h*f-c*g*f-p*h*v+c*d*v,t=m*d*l-p*g*l-m*h*E+c*g*E+p*h*T-c*d*T,i=n*y+o*R+a*H+s*t;if(0!=i)return r[0]=y,r[1]=g*E*s-d*T*s-g*a*f+o*T*f+d*a*v-o*E*v,r[2]=h*T*s-g*l*s+g*a*u-o*T*u-h*a*v+o*l*v,r[3]=d*l*s-h*E*s-d*a*u+o*E*u+h*a*f-o*l*f,r[4]=R,r[5]=p*T*s-m*E*s+m*a*f-n*T*f-p*a*v+n*E*v,r[6]=m*l*s-c*T*s-m*a*u+n*T*u+c*a*v-n*l*v,r[7]=c*E*s-p*l*s+p*a*u-n*E*u-c*a*f+n*l*f,r[8]=H,r[9]=m*d*s-p*g*s-m*o*f+n*g*f+p*o*v-n*d*v,r[10]=c*g*s-m*h*s+m*o*u-n*g*u-c*o*v+n*h*v,r[11]=p*h*s-c*d*s-p*o*u+n*d*u+c*o*f-n*h*f,r[12]=t,r[13]=p*g*a-m*d*a+m*o*E-n*g*E-p*o*T+n*d*T,r[14]=m*h*a-c*g*a-m*o*l+n*g*l+c*o*T-n*h*T,r[15]=c*d*a-p*h*a+p*o*l-n*d*l-c*o*E+n*h*E,this.multiplyScalar(1/i);i="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(i);return console.warn(i),this.identity()},scale:function(t){var e=this.elements,r=t.x,i=t.y,t=t.z;return e[0]*=r,e[4]*=i,e[8]*=t,e[1]*=r,e[5]*=i,e[9]*=t,e[2]*=r,e[6]*=i,e[10]*=t,e[3]*=r,e[7]*=i,e[11]*=t,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,r,t))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),t=Math.sin(t);return this.set(1,0,0,0,0,e,-t,0,0,t,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),t=Math.sin(t);return this.set(e,0,t,0,0,1,0,0,-t,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),t=Math.sin(t);return this.set(e,-t,0,0,t,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=1-r,o=t.x,a=t.y,s=t.z,e=n*o,t=n*a;return this.set(e*o+r,e*a-i*s,e*s+i*a,0,e*a+i*s,t*a+r,t*s-i*o,0,e*s-i*a,t*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var c,h;return function(t,e,r){void 0===c&&(c=new THREE.Vector3),void 0===h&&(h=new THREE.Matrix4);var i=this.elements,n=c.set(i[0],i[1],i[2]).length(),o=c.set(i[4],i[5],i[6]).length(),a=c.set(i[8],i[9],i[10]).length();this.determinant()<0&&(n=-n),t.x=i[12],t.y=i[13],t.z=i[14],h.elements.set(this.elements);var s=1/n,t=1/o,i=1/a;return h.elements[0]*=s,h.elements[1]*=s,h.elements[2]*=s,h.elements[4]*=t,h.elements[5]*=t,h.elements[6]*=t,h.elements[8]*=i,h.elements[9]*=i,h.elements[10]*=i,e.setFromRotationMatrix(h),r.x=n,r.y=o,r.z=a,this}}(),makeFrustum:function(t,e,r,i,n,o){var a=this.elements,s=2*n/(i-r),c=(e+t)/(e-t),i=(i+r)/(i-r),r=-(o+n)/(o-n),o=-2*o*n/(o-n);return a[0]=2*n/(e-t),a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=s,a[9]=i,a[13]=0,a[2]=0,a[6]=0,a[10]=r,a[14]=o,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(t,e,r,i){var n=r*Math.tan(THREE.Math.DEG2RAD*t*.5),t=-n;return this.makeFrustum(t*e,n*e,t,n,r,i)},makeOrthographic:function(t,e,r,i,n,o){var a=this.elements,s=1/(e-t),c=1/(r-i),h=1/(o-n),t=(e+t)*s,i=(r+i)*c,n=(o+n)*h;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-t,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-i,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-n,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(t){for(var e=this.elements,r=t.elements,i=0;i<16;i++)if(e[i]!==r[i])return!1;return!0},fromArray:function(t){return this.elements.set(t),this},toArray:function(t,e){var r=this.elements;return(t=void 0===t?[]:t)[e=void 0===e?0:e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t}},THREE.Ray=function(t,e){this.origin=void 0!==t?t:new THREE.Vector3,this.direction=void 0!==e?e:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new THREE.Vector3).copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){this.direction.copy(t).sub(this.origin).normalize()},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(t,e){e=e||new THREE.Vector3;e.subVectors(t,this.origin);t=e.dot(this.direction);return t<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(t).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var r=new THREE.Vector3;return function(t){var e=r.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(r.copy(this.direction).multiplyScalar(e).add(this.origin),r.distanceToSquared(t))}}(),distanceSqToSegment:function(){var u=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3;return function(t,e,r,i){u.copy(t).add(e).multiplyScalar(.5),p.copy(e).sub(t).normalize(),d.copy(this.origin).sub(u);var n,o,a=.5*t.distanceTo(e),s=-this.direction.dot(p),c=d.dot(this.direction),h=-d.dot(p),l=d.lengthSq(),t=Math.abs(1-s*s);return l=0<t?(o=s*c-h,e=a*t,0<=(n=s*h-c)?-e<=o?o<=e?(n*=t=1/t)*(n+s*(o*=t)+2*c)+o*(s*n+o+2*h)+l:(o=a,-(n=Math.max(0,-(s*o+c)))*n+o*(o+2*h)+l):(o=-a,-(n=Math.max(0,-(s*o+c)))*n+o*(o+2*h)+l):o<=-e?-(n=Math.max(0,-(-s*a+c)))*n+(o=0<n?-a:Math.min(Math.max(-a,-h),a))*(o+2*h)+l:o<=e?(n=0,(o=Math.min(Math.max(-a,-h),a))*(o+2*h)+l):-(n=Math.max(0,-(s*a+c)))*n+(o=0<n?a:Math.min(Math.max(-a,-h),a))*(o+2*h)+l):(o=0<s?-a:a,-(n=Math.max(0,-(s*o+c)))*n+o*(o+2*h)+l),r&&r.copy(this.direction).multiplyScalar(n).add(this.origin),i&&i.copy(p).multiplyScalar(o).add(u),l}}(),intersectSphere:function(){var n=new THREE.Vector3;return function(t,e){n.subVectors(t.center,this.origin);var r=n.dot(this.direction),i=n.dot(n)-r*r,t=t.radius*t.radius;if(t<i)return null;t=Math.sqrt(t-i),i=r-t,t=r+t;return i<0&&t<0?null:i<0?this.at(t,e):this.at(i,e)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;e=-(this.origin.dot(t.normal)+t.constant)/e;return 0<=e?e:null},intersectPlane:function(t,e){t=this.distanceToPlane(t);return null===t?null:this.at(t,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var r,i,n,o=1/this.direction.x,a=1/this.direction.y,s=1/this.direction.z,c=this.origin,o=0<=o?(r=(t.min.x-c.x)*o,(t.max.x-c.x)*o):(r=(t.max.x-c.x)*o,(t.min.x-c.x)*o),a=0<=a?(i=(t.min.y-c.y)*a,(t.max.y-c.y)*a):(i=(t.max.y-c.y)*a,(t.min.y-c.y)*a);return a<r||o<i?null:((r<i||r!=r)&&(r=i),(a<o||o!=o)&&(o=a),(s=0<=s?(n=(t.min.z-c.z)*s,(t.max.z-c.z)*s):(n=(t.max.z-c.z)*s,(t.min.z-c.z)*s))<r||o<n?null:((r<n||r!=r)&&(r=n),(o=s<o||o!=o?s:o)<0?null:this.at(0<=r?r:o,e)))},intersectsBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){var a=new THREE.Vector3,s=new THREE.Vector3,c=new THREE.Vector3,h=new THREE.Vector3;return function(t,e,r,i,n){s.subVectors(e,t),c.subVectors(r,t),h.crossVectors(s,c);r=this.direction.dot(h);if(0<r){if(i)return null;o=1}else{if(!(r<0))return null;o=-1,r=-r}a.subVectors(this.origin,t);i=o*this.direction.dot(c.crossVectors(a,c));if(i<0)return null;t=o*this.direction.dot(s.cross(a));if(t<0)return null;if(r<i+t)return null;var o=-o*a.dot(h);return o<0?null:this.at(o/r,n)}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}},THREE.Sphere=function(t,e){this.center=void 0!==t?t:new THREE.Vector3,this.radius=void 0!==e?e:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var a=new THREE.Box3;return function(t,e){var r=this.center;void 0!==e?r.copy(e):a.setFromPoints(t).center(r);for(var i=0,n=0,o=t.length;n<o;n++)i=Math.max(i,r.distanceToSquared(t[n]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(this.center.dot(t.normal)-t.constant)<=this.radius},clampPoint:function(t,e){var r=this.center.distanceToSquared(t),e=e||new THREE.Vector3;return e.copy(t),r>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){t=t||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}},THREE.Frustum=function(t,e,r,i,n,o){this.planes=[void 0!==t?t:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,e,r,i,n,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,r=0;r<6;r++)e[r].copy(t.planes[r]);return this},setFromMatrix:function(t){var e=this.planes,r=t.elements,i=r[0],n=r[1],o=r[2],a=r[3],s=r[4],c=r[5],h=r[6],l=r[7],u=r[8],p=r[9],d=r[10],E=r[11],f=r[12],m=r[13],t=r[14],r=r[15];return e[0].setComponents(a-i,l-s,E-u,r-f).normalize(),e[1].setComponents(a+i,l+s,E+u,r+f).normalize(),e[2].setComponents(a+n,l+c,E+p,r+m).normalize(),e[3].setComponents(a-n,l-c,E-p,r-m).normalize(),e[4].setComponents(a-o,l-h,E-d,r-t).normalize(),e[5].setComponents(a+o,l+h,E+d,r+t).normalize(),this},intersectsObject:function(){var r=new THREE.Sphere;return function(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),r.copy(e.boundingSphere),r.applyMatrix4(t.matrixWorld),this.intersectsSphere(r)}}(),intersectsSphere:function(t){for(var e=this.planes,r=t.center,i=-t.radius,n=0;n<6;n++)if(e[n].distanceToPoint(r)<i)return!1;return!0},intersectsBox:function(){var o=new THREE.Vector3,a=new THREE.Vector3;return function(t){for(var e=this.planes,r=0;r<6;r++){var i=e[r];o.x=(0<i.normal.x?t.min:t.max).x,a.x=(0<i.normal.x?t.max:t.min).x,o.y=(0<i.normal.y?t.min:t.max).y,a.y=(0<i.normal.y?t.max:t.min).y,o.z=(0<i.normal.z?t.min:t.max).z,a.z=(0<i.normal.z?t.max:t.min).z;var n=i.distanceToPoint(o),i=i.distanceToPoint(a);if(n<0&&i<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,r=0;r<6;r++)if(e[r].distanceToPoint(t)<0)return!1;return!0}},THREE.Plane=function(t,e){this.normal=void 0!==t?t:new THREE.Vector3(1,0,0),this.constant=void 0!==e?e:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var i=new THREE.Vector3,n=new THREE.Vector3;return function(t,e,r){e=i.subVectors(r,e).cross(n.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){t=this.distanceToPoint(t);return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(t)},intersectLine:function(){var n=new THREE.Vector3;return function(t,e){var r=e||new THREE.Vector3,i=t.delta(n),e=this.normal.dot(i);if(0===e)return 0===this.distanceToPoint(t.start)?r.copy(t.start):void 0;e=-(t.start.dot(this.normal)+this.constant)/e;return e<0||1<e?void 0:r.copy(i).multiplyScalar(e).add(t.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),t=this.distanceToPoint(t.end);return e<0&&0<t||t<0&&0<e},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var i=new THREE.Vector3,n=new THREE.Matrix3;return function(t,e){var r=this.coplanarPoint(i).applyMatrix4(t),t=e||n.getNormalMatrix(t),t=this.normal.applyMatrix3(t).normalize();return this.constant=-r.dot(t),this}}(),translate:function(t){return this.constant=this.constant-t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}},THREE.Spherical=function(t,e,r){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==r?r:0,this},THREE.Spherical.prototype={constructor:THREE.Spherical,set:function(t,e,r){this.radius=t,this.phi=e,this.theta=r},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius.copy(t.radius),this.phi.copy(t.phi),this.theta.copy(t.theta),this},makeSafe:function(){this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi))},setFromVector3:function(t){return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(THREE.Math.clamp(t.y/this.radius,-1,1))),this}},THREE.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e,r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),n=0;return function(){for(var t=0;t<36;t++)8===t||13===t||18===t||23===t?i[t]="-":14===t?i[t]="4":(n<=2&&(n=33554432+16777216*Math.random()|0),e=15&n,n>>=4,i[t]=r[19===t?3&e|8:e]);return i.join("")}}(),clamp:function(t,e,r){return Math.max(e,Math.min(r,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,r,i,n){return i+(t-e)*(n-i)/(r-e)},smoothstep:function(t,e,r){return t<=e?0:r<=t?1:(t=(t-e)/(r-e))*t*(3-2*t)},smootherstep:function(t,e,r){return t<=e?0:r<=t?1:(t=(t-e)/(r-e))*t*t*(t*(6*t-15)+10)},random16:function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*THREE.Math.DEG2RAD},radToDeg:function(t){return t*THREE.Math.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},nearestPowerOfTwo:function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},nextPowerOfTwo:function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t}},THREE.Spline=function(t){this.points=t;var e,r,i,n,o,a,s,c=[],h={x:0,y:0,z:0};function l(t,e,r,i,n,o,a){t=.5*(r-t),i=.5*(i-e);return(2*(e-r)+t+i)*a+(-3*(e-r)-2*t-i)*o+t*n+e}this.initFromArray=function(t){this.points=[];for(var e=0;e<t.length;e++)this.points[e]={x:t[e][0],y:t[e][1],z:t[e][2]}},this.getPoint=function(t){return r=(this.points.length-1)*t,i=Math.floor(r),e=r-i,c[0]=0===i?i:i-1,c[1]=i,c[2]=i>this.points.length-2?this.points.length-1:i+1,c[3]=i>this.points.length-3?this.points.length-1:i+2,n=this.points[c[0]],o=this.points[c[1]],a=this.points[c[2]],s=this.points[c[3]],i=e*(r=e*e),h.x=l(n.x,o.x,a.x,s.x,e,r,i),h.y=l(n.y,o.y,a.y,s.y,e,r,i),h.z=l(n.z,o.z,a.z,s.z,e,r,i),h},this.getControlPointsArray=function(){for(var t,e=this.points.length,r=[],i=0;i<e;i++)t=this.points[i],r[i]=[t.x,t.y,t.z];return r},this.getLength=function(t){var e,r,i,n,o=0,a=new THREE.Vector3,s=new THREE.Vector3,c=[],h=0;for(c[0]=0,r=this.points.length*(t=t||100),a.copy(this.points[0]),e=1;e<r;e++)i=this.getPoint(n=e/r),s.copy(i),h+=s.distanceTo(a),a.copy(i),n=(this.points.length-1)*n,(n=Math.floor(n))!==o&&(c[n]=h,o=n);return c[c.length]=h,{chunks:c,total:h}},this.reparametrizeByArcLength=function(t){var e,r,i,n,o,a,s,c=[],h=new THREE.Vector3,l=this.getLength();for(c.push(h.copy(this.points[0]).clone()),e=1;e<this.points.length;e++){for(o=l.chunks[e]-l.chunks[e-1],a=Math.ceil(t*o/l.total),i=(e-1)/(this.points.length-1),n=e/(this.points.length-1),r=1;r<a-1;r++)s=this.getPoint(i+r*(1/a)*(n-i)),c.push(h.copy(s).clone());c.push(h.copy(this.points[e]).clone())}this.points=c}},THREE.Triangle=function(t,e,r){this.a=void 0!==t?t:new THREE.Vector3,this.b=void 0!==e?e:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var n=new THREE.Vector3;return function(t,e,r,i){i=i||new THREE.Vector3;i.subVectors(r,e),n.subVectors(t,e),i.cross(n);e=i.lengthSq();return 0<e?i.multiplyScalar(1/Math.sqrt(e)):i.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var s=new THREE.Vector3,c=new THREE.Vector3,h=new THREE.Vector3;return function(t,e,r,i,n){s.subVectors(i,e),c.subVectors(r,e),h.subVectors(t,e);var o=s.dot(s),a=s.dot(c),i=s.dot(h),r=c.dot(c),t=c.dot(h),e=o*r-a*a,n=n||new THREE.Vector3;if(0==e)return n.set(-2,-1,-1);e=1/e,r=(r*i-a*t)*e,e*=o*t-a*i;return n.set(1-r-e,e,r)}}(),THREE.Triangle.containsPoint=function(){var n=new THREE.Vector3;return function(t,e,r,i){i=THREE.Triangle.barycoordFromPoint(t,e,r,i,n);return 0<=i.x&&0<=i.y&&i.x+i.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return THREE.Triangle.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return THREE.Triangle.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return THREE.Triangle.containsPoint(t,this.a,this.b,this.c)},closestPointToPoint:function(){var a,s,c,h;return function(t,e){void 0===a&&(a=new THREE.Plane,s=[new THREE.Line3,new THREE.Line3,new THREE.Line3],c=new THREE.Vector3,h=new THREE.Vector3);var r=e||new THREE.Vector3,i=1/0;if(a.setFromCoplanarPoints(this.a,this.b,this.c),a.projectPoint(t,c),!0===this.containsPoint(c))r.copy(c);else{s[0].set(this.a,this.b),s[1].set(this.b,this.c),s[2].set(this.c,this.a);for(var n=0;n<s.length;n++){s[n].closestPointToPoint(c,!0,h);var o=c.distanceToSquared(h);o<i&&(i=o,r.copy(h))}}return r}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}},THREE.Interpolant=function(t,e,r,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(r),this.sampleValues=e,this.valueSize=r},THREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(t){var e,r=this.parameterPositions,i=this._cachedIndex,n=r[i],o=r[i-1];t:{e:{r:{i:if(!(t<n)){for(var a=i+2;;){if(void 0===n){if(t<o)break i;return i=r.length,this._cachedIndex=i,this.afterEnd_(i-1,t,o)}if(i===a)break;if(o=n,t<(n=r[++i]))break e}e=r.length;break r}if(o<=t)break t;var s=r[1];t<s&&(i=2,o=s);for(a=i-2;;){if(void 0===o)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===a)break;if(n=o,(o=r[--i-1])<=t)break e}e=i,i=0}for(;i<e;){var c=i+e>>>1;t<r[c]?e=c:i=1+c}if(n=r[i],void 0===(o=r[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=r.length,this._cachedIndex=i,this.afterEnd_(i-1,o,t)}this._cachedIndex=i,this.intervalChanged_(i,o,n)}return this.interpolate_(i,o,t,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,r=this.sampleValues,i=this.valueSize,n=t*i,o=0;o!==i;++o)e[o]=r[n+o];return e},interpolate_:function(t,e,r,i){throw new Error("call to abstract method")},intervalChanged_:function(t,e,r){}},Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_}),THREE.CubicInterpolant=function(t,e,r,i){THREE.Interpolant.call(this,t,e,r,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0},THREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(t,e,r){var i=this.parameterPositions,n=t-2,o=t+1,a=i[n],s=i[o];if(void 0===a)switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:n=t,a=2*e-r;break;case THREE.WrapAroundEnding:a=e+i[n=i.length-2]-i[n+1];break;default:n=t,a=r}if(void 0===s)switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:o=t,s=2*r-e;break;case THREE.WrapAroundEnding:s=r+i[o=1]-i[0];break;default:o=t-1,s=e}var c=.5*(r-e),h=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(s-r),this._offsetPrev=n*h,this._offsetNext=o*h},interpolate_:function(t,e,r,i){for(var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,c=s-a,h=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,t=this._weightNext,r=(r-e)/(i-e),i=r*r,e=i*r,p=-u*e+2*u*i-u*r,d=(1+u)*e+(-1.5-2*u)*i+(-.5+u)*r+1,E=(-1-t)*e+(1.5+t)*i+.5*r,f=t*e-t*i,m=0;m!==a;++m)n[m]=p*o[h+m]+d*o[c+m]+E*o[s+m]+f*o[l+m];return n}}),THREE.DiscreteInterpolant=function(t,e,r,i){THREE.Interpolant.call(this,t,e,r,i)},THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(t,e,r,i){return this.copySampleValue_(t-1)}}),THREE.LinearInterpolant=function(t,e,r,i){THREE.Interpolant.call(this,t,e,r,i)},THREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(t,e,r,i){for(var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,c=s-a,h=(r-e)/(i-e),l=1-h,u=0;u!==a;++u)n[u]=o[c+u]*l+o[s+u]*h;return n}}),THREE.QuaternionLinearInterpolant=function(t,e,r,i){THREE.Interpolant.call(this,t,e,r,i)},THREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(t,e,r,i){for(var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,c=(r-e)/(i-e),h=s+a;s!==h;s+=4)THREE.Quaternion.slerpFlat(n,0,o,s-a,o,s,c);return n}}),THREE.Clock=function(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=(performance||Date).now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t,e=0;return this.autoStart&&!this.running&&this.start(),this.running&&(e=((t=(performance||Date).now())-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(t){t.addEventListener=THREE.EventDispatcher.prototype.addEventListener,t.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,t.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)},removeEventListener:function(t,e){void 0!==this._listeners&&(void 0===(t=this._listeners[t])||-1!==(e=t.indexOf(e))&&t.splice(e,1))},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var r=[],i=e.length,n=0;n<i;n++)r[n]=e[n];for(n=0;n<i;n++)r[n].call(this,t)}}}},THREE.Layers=function(){this.mask=1},THREE.Layers.prototype={constructor:THREE.Layers,set:function(t){this.mask=1<<t},enable:function(t){this.mask|=1<<t},toggle:function(t){this.mask^=1<<t},disable:function(t){this.mask&=~(1<<t)},test:function(t){return 0!=(this.mask&t.mask)}},function(n){function o(t,e){return t.distance-e.distance}function s(t,e,r,i){if(!1!==t.visible&&(t.raycast(e,r),!0===i))for(var n=t.children,o=0,a=n.length;o<a;o++)s(n[o],e,r,!0)}n.Raycaster=function(t,e,r,i){this.ray=new n.Ray(t,e),this.near=r||0,this.far=i||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})},n.Raycaster.prototype={constructor:n.Raycaster,linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e instanceof n.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e instanceof n.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e){var r=[];return s(t,this,r,e),r.sort(o),r},intersectObjects:function(t,e){var r=[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,n=t.length;i<n;i++)s(t[i],this,r,e);return r.sort(o),r}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var t=new THREE.Vector3,e=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1);e.onChange(function(){r.setFromEuler(e,!1)}),r.onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new THREE.Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.DefaultMatrixAutoUpdate=!0,THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var r=new THREE.Quaternion;return function(t,e){return r.setFromAxisAngle(t,e),this.quaternion.multiply(r),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var r=new THREE.Vector3;return function(t,e){return r.copy(t).applyQuaternion(this.quaternion),this.position.add(r.multiplyScalar(e)),this}}(),translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(t){if(1<arguments.length){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",t):t instanceof THREE.Object3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this},remove:function(t){if(1<arguments.length)for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);var r=this.children.indexOf(t);-1!==r&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(r,1))},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r].getObjectByProperty(t,e);if(void 0!==n)return n}},getWorldPosition:function(t){t=t||new THREE.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3,r=new THREE.Vector3;return function(t){t=t||new THREE.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),t}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(t){t=t||new THREE.Euler;return this.getWorldQuaternion(e),t.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new THREE.Vector3,r=new THREE.Quaternion;return function(t){t=t||new THREE.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),t}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(t){t=t||new THREE.Vector3;return this.getWorldQuaternion(e),t.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==t||(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t=!(this.matrixWorldNeedsUpdate=!1));for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},toJSON:function(t){var e=void 0===t||""===t,r={};e&&(t={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var i,n,o,a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),a.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===t.geometries[this.geometry.uuid]&&(t.geometries[this.geometry.uuid]=this.geometry.toJSON(t)),a.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===t.materials[this.material.uuid]&&(t.materials[this.material.uuid]=this.material.toJSON(t)),a.material=this.material.uuid),0<this.children.length){a.children=[];for(var s=0;s<this.children.length;s++)a.children.push(this.children[s].toJSON(t).object)}return e&&(i=c(t.geometries),n=c(t.materials),o=c(t.textures),e=c(t.images),0<i.length&&(r.geometries=i),0<n.length&&(r.materials=n),0<o.length&&(r.textures=o),0<e.length&&(r.images=e)),r.object=a,r;function c(t){var e,r=[];for(e in t){var i=t[e];delete i.metadata,r.push(i)}return r}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.rotationAutoUpdate=t.rotationAutoUpdate,this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var r=0;r<t.children.length;r++){var i=t.children[r];this.add(i.clone())}return this}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(t,e,r,i,n,o){this.a=t,this.b=e,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=Array.isArray(i)?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=Array.isArray(n)?n:[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,r=t.vertexNormals.length;e<r;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,r=t.vertexColors.length;e<r;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}},THREE.BufferAttribute=function(t,e,r){this.uuid=THREE.Math.generateUUID(),this.array=t,this.itemSize=e,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0,this.normalized=!0===r},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(t){!0===t&&this.version++},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.dynamic=t.dynamic,this},copyAt:function(t,e,r){t*=this.itemSize,r*=e.itemSize;for(var i=0,n=this.itemSize;i<n;i++)this.array[t+i]=e.array[r+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new THREE.Color),e[r++]=o.r,e[r++]=o.g,e[r++]=o.b}return this},copyIndicesArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];e[r++]=o.a,e[r++]=o.b,e[r++]=o.c}return this},copyVector2sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new THREE.Vector2),e[r++]=o.x,e[r++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new THREE.Vector3),e[r++]=o.x,e[r++]=o.y,e[r++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new THREE.Vector4),e[r++]=o.x,e[r++]=o.y,e[r++]=o.z,e[r++]=o.w}return this},set:function(t,e){return this.array.set(t,e=void 0===e?0:e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this},clone:function(){return(new this.constructor).copy(this)}},THREE.Int8Attribute=function(t,e){return new THREE.BufferAttribute(new Int8Array(t),e)},THREE.Uint8Attribute=function(t,e){return new THREE.BufferAttribute(new Uint8Array(t),e)},THREE.Uint8ClampedAttribute=function(t,e){return new THREE.BufferAttribute(new Uint8ClampedArray(t),e)},THREE.Int16Attribute=function(t,e){return new THREE.BufferAttribute(new Int16Array(t),e)},THREE.Uint16Attribute=function(t,e){return new THREE.BufferAttribute(new Uint16Array(t),e)},THREE.Int32Attribute=function(t,e){return new THREE.BufferAttribute(new Int32Array(t),e)},THREE.Uint32Attribute=function(t,e){return new THREE.BufferAttribute(new Uint32Array(t),e)},THREE.Float32Attribute=function(t,e){return new THREE.BufferAttribute(new Float32Array(t),e)},THREE.Float64Attribute=function(t,e){return new THREE.BufferAttribute(new Float64Array(t),e)},THREE.DynamicBufferAttribute=function(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new THREE.BufferAttribute(t,e).setDynamic(!0)},THREE.InstancedBufferAttribute=function(t,e,r){THREE.BufferAttribute.call(this,t,e),this.meshPerAttribute=r||1},THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute,THREE.InstancedBufferAttribute.prototype.copy=function(t){return THREE.BufferAttribute.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},THREE.InterleavedBuffer=function(t,e){this.uuid=THREE.Math.generateUUID(),this.array=t,this.stride=e,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(t){!0===t&&this.version++},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,r){t*=this.stride,r*=e.stride;for(var i=0,n=this.stride;i<n;i++)this.array[t+i]=e.array[r+i];return this},set:function(t,e){return this.array.set(t,e=void 0===e?0:e),this},clone:function(){return(new this.constructor).copy(this)}},THREE.InstancedInterleavedBuffer=function(t,e,r){THREE.InterleavedBuffer.call(this,t,e),this.meshPerAttribute=r||1},THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype),THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer,THREE.InstancedInterleavedBuffer.prototype.copy=function(t){return THREE.InterleavedBuffer.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},THREE.InterleavedBufferAttribute=function(t,e,r){this.uuid=THREE.Math.generateUUID(),this.data=t,this.itemSize=e,this.offset=r},THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.count},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=i,this.data.array[t+3]=n,this}},THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var e=(new THREE.Matrix3).getNormalMatrix(t),r=0,i=this.vertices.length;r<i;r++)this.vertices[r].applyMatrix4(t);for(r=0,i=this.faces.length;r<i;r++){var n=this.faces[r];n.normal.applyMatrix3(e).normalize();for(var o=0,a=n.vertexNormals.length;o<a;o++)n.vertexNormals[o].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var i;return function(t,e,r){return(i=void 0===i?new THREE.Matrix4:i).makeTranslation(t,e,r),this.applyMatrix(i),this}}(),scale:function(){var i;return function(t,e,r){return(i=void 0===i?new THREE.Matrix4:i).makeScale(t,e,r),this.applyMatrix(i),this}}(),lookAt:function(){var e;return function(t){(e=void 0===e?new THREE.Object3D:e).lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(t){var a=this,e=null!==t.index?t.index.array:void 0,r=t.attributes,i=r.position.array,s=void 0!==r.normal?r.normal.array:void 0,c=void 0!==r.color?r.color.array:void 0,h=void 0!==r.uv?r.uv.array:void 0,l=void 0!==r.uv2?r.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var u=[],p=[],d=[],n=0,o=0;n<i.length;n+=3,o+=2)a.vertices.push(new THREE.Vector3(i[n],i[n+1],i[n+2])),void 0!==s&&u.push(new THREE.Vector3(s[n],s[n+1],s[n+2])),void 0!==c&&a.colors.push(new THREE.Color(c[n],c[n+1],c[n+2])),void 0!==h&&p.push(new THREE.Vector2(h[o],h[o+1])),void 0!==l&&d.push(new THREE.Vector2(l[o],l[o+1]));function E(t,e,r,i){var n=void 0!==s?[u[t].clone(),u[e].clone(),u[r].clone()]:[],o=void 0!==c?[a.colors[t].clone(),a.colors[e].clone(),a.colors[r].clone()]:[],i=new THREE.Face3(t,e,r,n,o,i);a.faces.push(i),void 0!==h&&a.faceVertexUvs[0].push([p[t].clone(),p[e].clone(),p[r].clone()]),void 0!==l&&a.faceVertexUvs[1].push([d[t].clone(),d[e].clone(),d[r].clone()])}if(void 0!==e){var f=t.groups;if(0<f.length)for(n=0;n<f.length;n++)for(var m=f[n],g=m.start,o=g,T=g+m.count;o<T;o+=3)E(e[o],e[o+1],e[o+2],m.materialIndex);else for(n=0;n<e.length;n+=3)E(e[n],e[n+1],e[n+2])}else for(n=0;n<i.length/3;n+=3)E(n,n+1,n+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.center().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,r=0===e?1:1/e,e=new THREE.Matrix4;return e.set(r,0,0,-r*t.x,0,r,0,-r*t.y,0,0,r,-r*t.z,0,0,0,1),this.applyMatrix(e),this},computeFaceNormals:function(){for(var t=new THREE.Vector3,e=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b],s=this.vertices[n.c];t.subVectors(s,a),e.subVectors(o,a),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,r,i;for(void 0===t&&(t=!0),i=new Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)i[e]=new THREE.Vector3;if(t)for(var n,o,a,s=new THREE.Vector3,c=new THREE.Vector3,h=0,l=this.faces.length;h<l;h++)u=this.faces[h],n=this.vertices[u.a],o=this.vertices[u.b],a=this.vertices[u.c],s.subVectors(a,o),c.subVectors(n,o),s.cross(c),i[u.a].add(s),i[u.b].add(s),i[u.c].add(s);else for(h=0,l=this.faces.length;h<l;h++)i[(u=this.faces[h]).a].add(u.normal),i[u.b].add(u.normal),i[u.c].add(u.normal);for(e=0,r=this.vertices.length;e<r;e++)i[e].normalize();for(h=0,l=this.faces.length;h<l;h++){var u,p=(u=this.faces[h]).vertexNormals;3===p.length?(p[0].copy(i[u.a]),p[1].copy(i[u.b]),p[2].copy(i[u.c])):(p[0]=i[u.a].clone(),p[1]=i[u.b].clone(),p[2]=i[u.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,r;for(a=0,s=this.faces.length;a<s;a++)for((r=this.faces[a]).__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var i=new THREE.Geometry;for(i.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];for(var n=this.morphNormals[t].faceNormals,o=this.morphNormals[t].vertexNormals,a=0,s=this.faces.length;a<s;a++)c=new THREE.Vector3,h={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(c),o.push(h)}var c,h,l=this.morphNormals[t];for(i.vertices=this.morphTargets[t].vertices,i.computeFaceNormals(),i.computeVertexNormals(),a=0,s=this.faces.length;a<s;a++)r=this.faces[a],c=l.faceNormals[a],h=l.vertexNormals[a],c.copy(r.normal),h.a.copy(r.vertexNormals[0]),h.b.copy(r.vertexNormals[1]),h.c.copy(r.vertexNormals[2])}for(a=0,s=this.faces.length;a<s;a++)(r=this.faces[a]).normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){for(var t=0,e=this.vertices,r=0,i=e.length;r<i;r++)0<r&&(t+=e[r].distanceTo(e[r-1])),this.lineDistances[r]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(t instanceof THREE.Geometry!=!1){var i,n=this.vertices.length,o=this.vertices,a=t.vertices,s=this.faces,c=t.faces,h=this.faceVertexUvs[0],l=t.faceVertexUvs[0];void 0===r&&(r=0),void 0!==e&&(i=(new THREE.Matrix3).getNormalMatrix(e));for(var u=0,p=a.length;u<p;u++){var d=a[u].clone();void 0!==e&&d.applyMatrix4(e),o.push(d)}for(u=0,p=c.length;u<p;u++){var E,f,m=c[u],g=m.vertexNormals,T=m.vertexColors,v=new THREE.Face3(m.a+n,m.b+n,m.c+n);v.normal.copy(m.normal),void 0!==i&&v.normal.applyMatrix3(i).normalize();for(var y=0,R=g.length;y<R;y++)E=g[y].clone(),void 0!==i&&E.applyMatrix3(i).normalize(),v.vertexNormals.push(E);v.color.copy(m.color);for(y=0,R=T.length;y<R;y++)f=T[y],v.vertexColors.push(f.clone());v.materialIndex=m.materialIndex+r,s.push(v)}for(u=0,p=l.length;u<p;u++){var H=l[u],x=[];if(void 0!==H){for(y=0,R=H.length;y<R;y++)x.push(H[y].clone());h.push(x)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t instanceof THREE.Mesh!=!1?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){for(var t,e,r,i,n={},o=[],a=[],s=Math.pow(10,4),c=0,h=this.vertices.length;c<h;c++)t=this.vertices[c],void 0===n[t=Math.round(t.x*s)+"_"+Math.round(t.y*s)+"_"+Math.round(t.z*s)]?(n[t]=c,o.push(this.vertices[c]),a[c]=o.length-1):a[c]=a[n[t]];var l=[];for(c=0,h=this.faces.length;c<h;c++){(e=this.faces[c]).a=a[e.a],e.b=a[e.b],e.c=a[e.c];for(var u=[e.a,e.b,e.c],p=0;p<3;p++)if(u[p]===u[(p+1)%3]){l.push(c);break}}for(c=l.length-1;0<=c;c--){var d=l[c];for(this.faces.splice(d,1),r=0,i=this.faceVertexUvs.length;r<i;r++)this.faceVertexUvs[r].splice(d,1)}var E=this.vertices.length-o.length;return this.vertices=o,E},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,r=0;r<e;r++)t[r]._id=r;t.sort(function(t,e){return t.materialIndex-e.materialIndex});var i,n,o=this.faceVertexUvs[0],a=this.faceVertexUvs[1];o&&o.length===e&&(i=[]),a&&a.length===e&&(n=[]);for(r=0;r<e;r++){var s=t[r]._id;i&&i.push(o[s]),n&&n.push(a[s])}i&&(this.faceVertexUvs[0]=i),n&&(this.faceVertexUvs[1]=n)},toJSON:function(){var t={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e,r=this.parameters;for(e in r)void 0!==r[e]&&(t[e]=r[e]);return t}for(var i=[],n=0;n<this.vertices.length;n++){var o=this.vertices[n];i.push(o.x,o.y,o.z)}for(var a=[],s=[],c={},h=[],l={},u=[],p={},n=0;n<this.faces.length;n++){var d,E=this.faces[n],f=void 0!==this.faceVertexUvs[0][n],m=0<E.normal.length(),g=0<E.vertexNormals.length,T=1!==E.color.r||1!==E.color.g||1!==E.color.b,v=0<E.vertexColors.length;d=y(2,3,f),d=y(d,4,m),d=y(d,5,g),d=y(d,6,T),d=y(d,7,v),a.push(d),a.push(E.a,E.b,E.c),a.push(E.materialIndex),f&&(f=this.faceVertexUvs[0][n],a.push(x(f[0]),x(f[1]),x(f[2]))),m&&a.push(R(E.normal)),g&&(g=E.vertexNormals,a.push(R(g[0]),R(g[1]),R(g[2]))),T&&a.push(H(E.color)),v&&(E=E.vertexColors,a.push(H(E[0]),H(E[1]),H(E[2])))}function y(t,e,r){return r?t|1<<e:t&~(1<<e)}function R(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==c[e]||(c[e]=s.length/3,s.push(t.x,t.y,t.z)),c[e]}function H(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==l[e]||(l[e]=h.length,h.push(t.getHex())),l[e]}function x(t){var e=t.x.toString()+t.y.toString();return void 0!==p[e]||(p[e]=u.length/2,u.push(t.x,t.y)),p[e]}return t.data={},t.data.vertices=i,t.data.normals=s,0<h.length&&(t.data.colors=h),0<u.length&&(t.data.uvs=[u]),t.data.faces=a,t},clone:function(){return(new THREE.Geometry).copy(this)},copy:function(t){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];for(var e=t.vertices,r=0,i=e.length;r<i;r++)this.vertices.push(e[r].clone());for(var n=t.faces,r=0,i=n.length;r<i;r++)this.faces.push(n[r].clone());for(r=0,i=t.faceVertexUvs.length;r<i;r++){var o=t.faceVertexUvs[r];void 0===this.faceVertexUvs[r]&&(this.faceVertexUvs[r]=[]);for(var a=0,s=o.length;a<s;a++){for(var c=o[a],h=[],l=0,u=c.length;l<u;l++){var p=c[l];h.push(p.clone())}this.faceVertexUvs[r].push(h)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(t){for(var e,r,i=[],n=t.faces,o=0;o<n.length;o++){var a=n[o];a.materialIndex!==r&&(r=a.materialIndex,void 0!==e&&(e.count=3*o-e.start,i.push(e)),e={start:3*o,materialIndex:r})}void 0!==e&&(e.count=3*o-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e=t.faces,r=t.vertices,i=t.faceVertexUvs,n=i[0]&&0<i[0].length,o=i[1]&&0<i[1].length,a=t.morphTargets,s=a.length;if(0<s){for(var c=[],h=0;h<s;h++)c[h]=[];this.morphTargets.position=c}var l=t.morphNormals,u=l.length;if(0<u){for(var p=[],h=0;h<u;h++)p[h]=[];this.morphTargets.normal=p}for(var d=t.skinIndices,E=t.skinWeights,f=d.length===r.length,m=E.length===r.length,h=0;h<e.length;h++){var g=e[h];this.vertices.push(r[g.a],r[g.b],r[g.c]);var T=g.vertexNormals;3===T.length?this.normals.push(T[0],T[1],T[2]):(y=g.normal,this.normals.push(y,y,y));var v,y=g.vertexColors;3===y.length?this.colors.push(y[0],y[1],y[2]):(y=g.color,this.colors.push(y,y,y)),!0===n&&(void 0!==(v=i[0][h])?this.uvs.push(v[0],v[1],v[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",h),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2))),!0===o&&(void 0!==(v=i[1][h])?this.uvs2.push(v[0],v[1],v[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",h),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));for(var R=0;R<s;R++){var H=a[R].vertices;c[R].push(H[g.a],H[g.b],H[g.c])}for(R=0;R<u;R++){var x=l[R].vertexNormals[h];p[R].push(x.a,x.b,x.c)}f&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),m&&this.skinWeights.push(E[g.a],E[g.b],E[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype),THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,getIndex:function(){return this.index},setIndex:function(t){this.index=t},addAttribute:function(t,e){return e instanceof THREE.BufferAttribute==!1&&e instanceof THREE.InterleavedBufferAttribute==!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(t,new THREE.BufferAttribute(e,arguments[2]))):"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(e)):(this.attributes[t]=e,this)},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,r){this.groups.push({start:t,count:e,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToVector3Array(e.array),e.needsUpdate=!0);e=this.attributes.normal;return void 0!==e&&((new THREE.Matrix3).getNormalMatrix(t).applyToVector3Array(e.array),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return(e=void 0===e?new THREE.Matrix4:e).makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var i;return function(t,e,r){return(i=void 0===i?new THREE.Matrix4:i).makeTranslation(t,e,r),this.applyMatrix(i),this}}(),scale:function(){var i;return function(t,e,r){return(i=void 0===i?new THREE.Matrix4:i).makeScale(t,e,r),this.applyMatrix(i),this}}(),lookAt:function(){var e;return function(t){(e=void 0===e?new THREE.Object3D:e).lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.center().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e,r,i=t.geometry;return t instanceof THREE.Points||t instanceof THREE.Line?(e=new THREE.Float32Attribute(3*i.vertices.length,3),r=new THREE.Float32Attribute(3*i.colors.length,3),this.addAttribute("position",e.copyVector3sArray(i.vertices)),this.addAttribute("color",r.copyColorsArray(i.colors)),i.lineDistances&&i.lineDistances.length===i.vertices.length&&(r=new THREE.Float32Attribute(i.lineDistances.length,1),this.addAttribute("lineDistance",r.copyArray(i.lineDistances))),null!==i.boundingSphere&&(this.boundingSphere=i.boundingSphere.clone()),null!==i.boundingBox&&(this.boundingBox=i.boundingBox.clone())):t instanceof THREE.Mesh&&i instanceof THREE.Geometry&&this.fromGeometry(i),this},updateFromObject:function(t){var e,r=t.geometry;if(t instanceof THREE.Mesh){var i=r.__directGeometry;if(void 0===i)return this.fromGeometry(r);i.verticesNeedUpdate=r.verticesNeedUpdate,i.normalsNeedUpdate=r.normalsNeedUpdate,i.colorsNeedUpdate=r.colorsNeedUpdate,i.uvsNeedUpdate=r.uvsNeedUpdate,i.groupsNeedUpdate=r.groupsNeedUpdate,r.verticesNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.groupsNeedUpdate=!1,r=i}return!0===r.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(r.vertices),e.needsUpdate=!0),r.verticesNeedUpdate=!1),!0===r.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(r.normals),e.needsUpdate=!0),r.normalsNeedUpdate=!1),!0===r.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(r.colors),e.needsUpdate=!0),r.colorsNeedUpdate=!1),r.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(r.uvs),e.needsUpdate=!0),r.uvsNeedUpdate=!1),r.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(r.lineDistances),e.needsUpdate=!0),r.lineDistancesNeedUpdate=!1),r.groupsNeedUpdate&&(r.computeGroups(t.geometry),this.groups=r.groups,r.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new THREE.DirectGeometry).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e,r,i,n,o=new Float32Array(3*t.vertices.length);for(i in this.addAttribute("position",new THREE.BufferAttribute(o,3).copyVector3sArray(t.vertices)),0<t.normals.length&&(o=new Float32Array(3*t.normals.length),this.addAttribute("normal",new THREE.BufferAttribute(o,3).copyVector3sArray(t.normals))),0<t.colors.length&&(e=new Float32Array(3*t.colors.length),this.addAttribute("color",new THREE.BufferAttribute(e,3).copyColorsArray(t.colors))),0<t.uvs.length&&(e=new Float32Array(2*t.uvs.length),this.addAttribute("uv",new THREE.BufferAttribute(e,2).copyVector2sArray(t.uvs))),0<t.uvs2.length&&(r=new Float32Array(2*t.uvs2.length),this.addAttribute("uv2",new THREE.BufferAttribute(r,2).copyVector2sArray(t.uvs2))),0<t.indices.length&&(r=new(65535<t.vertices.length?Uint32Array:Uint16Array)(3*t.indices.length),this.setIndex(new THREE.BufferAttribute(r,1).copyIndicesArray(t.indices))),this.groups=t.groups,t.morphTargets){for(var a=[],s=t.morphTargets[i],c=0,h=s.length;c<h;c++){var l=s[c],u=new THREE.Float32Attribute(3*l.length,3);a.push(u.copyVector3sArray(l))}this.morphAttributes[i]=a}return 0<t.skinIndices.length&&(n=new THREE.Float32Attribute(4*t.skinIndices.length,4),this.addAttribute("skinIndex",n.copyVector4sArray(t.skinIndices))),0<t.skinWeights.length&&(n=new THREE.Float32Attribute(4*t.skinWeights.length,4),this.addAttribute("skinWeight",n.copyVector4sArray(t.skinWeights))),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;void 0!==t?this.boundingBox.setFromArray(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var o=new THREE.Box3,a=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var t=this.attributes.position.array;if(t){var e=this.boundingSphere.center;o.setFromArray(t),o.center(e);for(var r=0,i=0,n=t.length;i<n;i+=3)a.fromArray(t,i),r=Math.max(r,e.distanceToSquared(a));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,r=this.groups;if(e.position){var i=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(i.length),3));else for(var n=e.normal.array,o=0,a=n.length;o<a;o++)n[o]=0;var s,c,h,l=e.normal.array,u=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,E=new THREE.Vector3,f=new THREE.Vector3;if(t){var m=t.array;0===r.length&&this.addGroup(0,m.length);for(var g=0,T=r.length;g<T;++g)for(var v=r[g],y=v.start,o=y,a=y+v.count;o<a;o+=3)s=3*m[o+0],c=3*m[o+1],h=3*m[o+2],u.fromArray(i,s),p.fromArray(i,c),d.fromArray(i,h),E.subVectors(d,p),f.subVectors(u,p),E.cross(f),l[s]+=E.x,l[1+s]+=E.y,l[2+s]+=E.z,l[c]+=E.x,l[1+c]+=E.y,l[2+c]+=E.z,l[h]+=E.x,l[1+h]+=E.y,l[2+h]+=E.z}else for(o=0,a=i.length;o<a;o+=9)u.fromArray(i,o),p.fromArray(i,o+3),d.fromArray(i,o+6),E.subVectors(d,p),f.subVectors(u,p),E.cross(f),l[o]=E.x,l[o+1]=E.y,l[o+2]=E.z,l[o+3]=E.x,l[o+4]=E.y,l[o+5]=E.z,l[o+6]=E.x,l[o+7]=E.y,l[o+8]=E.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t instanceof THREE.BufferGeometry!=!1){void 0===e&&(e=0);var r,i=this.attributes;for(r in i)if(void 0!==t.attributes[r])for(var n=i[r].array,o=t.attributes[r],a=o.array,s=0,c=o.itemSize*e;s<a.length;s++,c++)n[c]=a[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){for(var t,e,r,i=this.attributes.normal.array,n=0,o=i.length;n<o;n+=3)t=i[n],e=i[n+1],r=i[n+2],r=1/Math.sqrt(t*t+e*e+r*r),i[n]*=r,i[n+1]*=r,i[n+2]*=r},toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t,e=new THREE.BufferGeometry,r=this.index.array,i=this.attributes;for(t in i){for(var n=i[t],o=n.array,a=n.itemSize,s=new o.constructor(r.length*a),c=0,h=0,l=0,u=r.length;l<u;l++)for(var c=r[l]*a,p=0;p<a;p++)s[h++]=o[c++];e.addAttribute(t,new THREE.BufferAttribute(s,a))}return e},toJSON:function(){var t={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var r=this.index;null!==r&&(a=Array.prototype.slice.call(r.array),t.data.index={type:r.array.constructor.name,array:a});var i,n=this.attributes;for(i in n){var o=n[i],a=Array.prototype.slice.call(o.array);t.data.attributes[i]={itemSize:o.itemSize,type:o.array.constructor.name,array:a,normalized:o.normalized}}r=this.groups;0<r.length&&(t.data.groups=JSON.parse(JSON.stringify(r)));r=this.boundingSphere;return null!==r&&(t.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),t},clone:function(){return(new THREE.BufferGeometry).copy(this)},copy:function(t){var e=t.index;null!==e&&this.setIndex(e.clone());var r,i=t.attributes;for(r in i){var n=i[r];this.addAttribute(r,n.clone())}for(var o=t.groups,a=0,s=o.length;a<s;a++){var c=o[a];this.addGroup(c.start,c.count,c.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.BufferGeometry.MaxIndex=65535,THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0},THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry,THREE.InstancedBufferGeometry.prototype.addGroup=function(t,e,r){this.groups.push({start:t,count:e,instances:r})},THREE.InstancedBufferGeometry.prototype.copy=function(t){var e=t.index;null!==e&&this.setIndex(e.clone());var r,i=t.attributes;for(r in i){var n=i[r];this.addAttribute(r,n.clone())}for(var o=t.groups,a=0,s=o.length;a<s;a++){var c=o[a];this.addGroup(c.start,c.count,c.instances)}return this},THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype),THREE.Uniform=function(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t,this.dynamic=!1},THREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(t){return this.dynamic=!0,this.onUpdateCallback=t,this}},THREE.AnimationClip=function(t,e,r){this.name=t||THREE.Math.generateUUID(),this.tracks=r,this.duration=void 0!==e?e:-1,this.duration<0&&this.resetDuration(),this.trim(),this.optimize()},THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){for(var t=0,e=0,r=this.tracks.length;e!==r;++e)var i=this.tracks[e],t=Math.max(t,i.times[i.times.length-1]);this.duration=t},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}},Object.assign(THREE.AnimationClip,{parse:function(t){for(var e=[],r=t.tracks,i=1/(t.fps||1),n=0,o=r.length;n!==o;++n)e.push(THREE.KeyframeTrack.parse(r[n]).scale(i));return new THREE.AnimationClip(t.name,t.duration,e)},toJSON:function(t){for(var e=[],r=t.tracks,t={name:t.name,duration:t.duration,tracks:e},i=0,n=r.length;i!==n;++i)e.push(THREE.KeyframeTrack.toJSON(r[i]));return t},CreateFromMorphTargetSequence:function(t,e,r,i){for(var n=e.length,o=[],a=0;a<n;a++){var s=[];(h=[]).push((a+n-1)%n,a,(a+1)%n),s.push(0,1,0);var c=THREE.AnimationUtils.getKeyframeOrder(h),h=THREE.AnimationUtils.sortedArray(h,1,c),s=THREE.AnimationUtils.sortedArray(s,1,c);i||0!==h[0]||(h.push(n),s.push(s[0])),o.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+e[a].name+"]",h,s).scale(1/r))}return new THREE.AnimationClip(t,-1,o)},findByName:function(t,e){for(var r=0;r<t.length;r++)if(t[r].name===e)return t[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,r){for(var i={},n=/^([\w-]*?)([\d]+)$/,o=0,a=t.length;o<a;o++){var s=t[o],c=s.name.match(n);c&&1<c.length&&((c=i[h=c[1]])||(i[h]=c=[]),c.push(s))}var h,l=[];for(h in i)l.push(THREE.AnimationClip.CreateFromMorphTargetSequence(h,i[h],e,r));return l},parseAnimation:function(t,e,r){if(!t)return console.error("  no animation in JSONLoader data"),null;function i(t,e,r,i,n){var o;0!==r.length&&(THREE.AnimationUtils.flattenJSON(r,o=[],r=[],i),0!==o.length&&n.push(new t(e,o,r)))}for(var n=[],o=t.name||"default",a=t.length||-1,s=t.fps||30,c=t.hierarchy||[],h=0;h<c.length;h++){var l=c[h].keys;if(l&&0!=l.length)if(l[0].morphTargets){for(var u,p={},d=0;d<l.length;d++)if(l[d].morphTargets)for(var E=0;E<l[d].morphTargets.length;E++)p[l[d].morphTargets[E]]=-1;for(u in p){for(var f=[],m=[],E=0;E!==l[d].morphTargets.length;++E){var g=l[d];f.push(g.time),m.push(g.morphTarget===u?1:0)}n.push(new THREE.NumberKeyframeTrack(".morphTargetInfluence["+u+"]",f,m))}a=p.length*(s||1)}else{var T=".bones["+e[h].name+"]";i(THREE.VectorKeyframeTrack,T+".position",l,"pos",n),i(THREE.QuaternionKeyframeTrack,T+".quaternion",l,"rot",n),i(THREE.VectorKeyframeTrack,T+".scale",l,"scl",n)}}return 0===n.length?null:new THREE.AnimationClip(o,a,n)}}),THREE.AnimationMixer=function(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1},THREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,clipAction:function(t,e){var r=(e||this._root).uuid,i="string"==typeof t?t:t.name,n=t!==i?t:null,o=this._actionsByClip[i];if(void 0!==o){var a=o.actionByRoot[r];if(void 0!==a)return a;if(n=(a=o.knownActions[0])._clip,t!==i&&t!==n)throw new Error("Different clips with the same name detected!")}if(null===n)return null;e=new THREE.AnimationMixer._Action(this,n,e);return this._bindAction(e,a),this._addInactiveAction(e,i,r),e},existingAction:function(t,e){e=(e||this._root).uuid,t="string"==typeof t?t:t.name,t=this._actionsByClip[t];return void 0!==t&&t.actionByRoot[e]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,r=this._bindings,i=this._nActiveBindings;this._nActiveActions=0;for(var n=this._nActiveBindings=0;n!==e;++n)t[n].reset();for(n=0;n!==i;++n)r[n].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,r=this._nActiveActions,i=this.time+=t,n=Math.sign(t),o=this._accuIndex^=1,a=0;a!==r;++a){var s=e[a];s.enabled&&s._update(i,t,n,o)}for(var c=this._bindings,h=this._nActiveBindings,a=0;a!==h;++a)c[a].apply(o);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,r=t.name,i=this._actionsByClip,t=i[r];if(void 0!==t){for(var n=t.knownActions,o=0,a=n.length;o!==a;++o){var s=n[o];this._deactivateAction(s);var c=s._cacheIndex,h=e[e.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,e[h._cacheIndex=c]=h,e.pop(),this._removeInactiveBindingsForAction(s)}delete i[r]}},uncacheRoot:function(t){var e,r=t.uuid,i=this._actionsByClip;for(e in i){var n=i[e].actionByRoot[r];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}var o=this._bindingsByRootAndName[r];if(void 0!==o)for(var a in o){a=o[a];a.restoreOriginalState(),this._removeInactiveBinding(a)}},uncacheAction:function(t,e){e=this.existingAction(t,e);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}},THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype),THREE.AnimationMixer._Action=function(t,e,r){this._mixer=t,this._clip=e,this._localRoot=r||null;for(var i=e.tracks,n=i.length,o=new Array(n),a={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},s=0;s!==n;++s){var c=i[s].createInterpolant(null);(o[s]=c).settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(n),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=THREE.LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0},THREE.AnimationMixer._Action.prototype={constructor:THREE.AnimationMixer._Action,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){this._startTime;return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,r){var i,n;this._mixer;return t.fadeOut(e),this.fadeIn(e),r&&(r=(i=this._clip.duration)/(n=t._clip.duration),t.warp(1,n/i,e),this.warp(r,1,e)),this},crossFadeTo:function(t,e,r){return t.crossFadeFrom(this,e,r)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._currentTimeScale,0,t)},warp:function(t,e,r){var i=this._mixer,n=i.time,o=this._timeScaleInterpolant,a=this.timeScale;null===o&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);i=o.parameterPositions,o=o.sampleValues;return i[0]=n,i[1]=n+r,o[0]=t/a,o[1]=e/a,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,r,i){var n=this._startTime;if(null!==n){n=(t-n)*r;if(n<0||0===r)return;this._startTime=null,e=r*n}e*=this._updateTimeScale(t);var o=this._updateTime(e),a=this._updateWeight(t);if(0<a)for(var s=this._interpolants,c=this._propertyBindings,h=0,l=s.length;h!==l;++h)s[h].evaluate(o),c[h].accumulate(i,a)},_updateWeight:function(t){var e,r,i=0;return this.enabled&&(i=this.weight,null!==(e=this._weightInterpolant)&&(i*=r=e.evaluate(t)[0],t>e.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1)))),this._effectiveWeight=i},_updateTimeScale:function(t){var e,r=0;return this.paused||(r=this.timeScale,null!==(e=this._timeScaleInterpolant)&&(r*=e.evaluate(t)[0],t>e.parameterPositions[1]&&(this.stopWarping(),0===r?this.pause=!0:this.timeScale=r))),this._effectiveTimeScale=r},_updateTime:function(t){var e=this.time+t;if(0===t)return e;var r=this._clip.duration,i=this.loop,n=this._loopCount,o=!1;switch(i){case THREE.LoopOnce:if(-1===n&&(this.loopCount=0,this._setEndings(!0,!0,!1)),r<=e)e=r;else{if(!(e<0))break;e=0}this.clampWhenFinished?this.pause=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1});break;case THREE.LoopPingPong:o=!0;case THREE.LoopRepeat:if(-1===n&&(0<t?this._setEndings(!(n=0),0===this.repetitions,o):this._setEndings(0===this.repetitions,!0,o)),r<=e||e<0){var a=Math.floor(e/r);e-=r*a,n+=Math.abs(a);var s=this.repetitions-n;if(s<0){this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=0<t?r:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<t?1:-1});break}0==s?this._setEndings(s=t<0,!s,o):this._setEndings(!1,!1,o),this._loopCount=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}if(i===THREE.LoopPingPong&&1==(1&n))return r-(this.time=e)}return this.time=e},_setEndings:function(t,e,r){var i=this._interpolantSettings;r?(i.endingStart=THREE.ZeroSlopeEnding,i.endingEnd=THREE.ZeroSlopeEnding):(i.endingStart=t?this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding,i.endingEnd=e?this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding)},_scheduleFading:function(t,e,r){var i=this._mixer,n=i.time,o=this._weightInterpolant;null===o&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);i=o.parameterPositions,o=o.sampleValues;return i[0]=n,o[0]=e,i[1]=n+t,o[1]=r,this}},Object.assign(THREE.AnimationMixer.prototype,{_bindAction:function(t,e){var r=t._localRoot||this._root,i=t._clip.tracks,n=i.length,o=t._propertyBindings,a=t._interpolants,s=r.uuid,t=this._bindingsByRootAndName,c=t[s];void 0===c&&(t[s]=c={});for(var h=0;h!==n;++h){var l=i[h],u=l.name;if(void 0!==(p=c[u]))o[h]=p;else{if(void 0!==(p=o[h])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,u));continue}var p,d=e&&e._propertyBindings[h].binding.parsedPath;++(p=new THREE.PropertyMixer(THREE.PropertyBinding.create(r,u,d),l.ValueTypeName,l.getValueSize())).referenceCount,this._addInactiveBinding(p,s,u),o[h]=p}a[h].resultBuffer=p.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){var e,r,i;null===t._cacheIndex&&(e=(t._localRoot||this._root).uuid,r=t._clip.name,i=this._actionsByClip[r],this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,r,e));for(var n=t._propertyBindings,o=0,a=n.length;o!==a;++o){var s=n[o];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,r=0,i=e.length;r!==i;++r){var n=e[r];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){t=t._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(t,e,r){var i=this._actions,n=this._actionsByClip,o=n[e];void 0===o?(o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,n[e]=o):(e=o.knownActions,t._byClipCacheIndex=e.length,e.push(t)),t._cacheIndex=i.length,i.push(t),o.actionByRoot[r]=t},_removeInactiveAction:function(t){var e=this._actions,r=e[e.length-1],i=t._cacheIndex;e[r._cacheIndex=i]=r,e.pop(),t._cacheIndex=null;var n=t._clip.name,o=this._actionsByClip,a=o[n],s=a.knownActions,i=s[s.length-1],r=t._byClipCacheIndex;s[i._byClipCacheIndex=r]=i,s.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete o[n],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,r=0,i=e.length;r!==i;++r){var n=e[r];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(t){var e=this._actions,r=t._cacheIndex,i=this._nActiveActions++,n=e[i];e[t._cacheIndex=i]=t,e[n._cacheIndex=r]=n},_takeBackAction:function(t){var e=this._actions,r=t._cacheIndex,i=--this._nActiveActions,n=e[i];e[t._cacheIndex=i]=t,e[n._cacheIndex=r]=n},_addInactiveBinding:function(t,e,r){var i=this._bindingsByRootAndName,n=i[e],o=this._bindings;void 0===n&&(i[e]=n={}),(n[r]=t)._cacheIndex=o.length,o.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,r=t.binding,i=r.rootNode.uuid,n=r.path,o=this._bindingsByRootAndName,a=o[i],r=e[e.length-1],t=t._cacheIndex;e[r._cacheIndex=t]=r,e.pop(),delete a[n];t:{for(var s in a)break t;delete o[i]}},_lendBinding:function(t){var e=this._bindings,r=t._cacheIndex,i=this._nActiveBindings++,n=e[i];e[t._cacheIndex=i]=t,e[n._cacheIndex=r]=n},_takeBackBinding:function(t){var e=this._bindings,r=t._cacheIndex,i=--this._nActiveBindings,n=e[i];e[t._cacheIndex=i]=t,e[n._cacheIndex=r]=n},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,r=t[e];return void 0===r&&(t[(r=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e]=r),r},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,r=t.__cacheIndex,i=--this._nActiveControlInterpolants,n=e[i];e[t.__cacheIndex=i]=t,e[n.__cacheIndex=r]=n},_controlInterpolantsResultBuffer:new Float32Array(1)}),THREE.AnimationObjectGroup=function(t){this.uuid=THREE.Math.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var r=0,i=arguments.length;r!==i;++r)e[arguments[r].uuid]=r;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}},THREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(t){for(var e=this._objects,r=e.length,i=this.nCachedObjects_,n=this._indicesByUUID,o=this._paths,a=this._parsedPaths,s=this._bindings,c=s.length,h=0,l=arguments.length;h!==l;++h){var u=arguments[h],p=u.uuid,d=n[p];if(void 0===d){d=r++,n[p]=d,e.push(u);for(var E=0,f=c;E!==f;++E)s[E].push(new THREE.PropertyBinding(u,o[E],a[E]))}else if(d<i){var m=e[d],g=--i,T=e[g];e[n[T.uuid]=d]=T,e[n[p]=g]=u;for(E=0,f=c;E!==f;++E){var v=s[E],y=v[g],R=v[d];v[d]=y,void 0===R&&(R=new THREE.PropertyBinding(u,o[E],a[E])),v[g]=R}}else e[d]!==m&&console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}this.nCachedObjects_=i},remove:function(t){for(var e=this._objects,r=(e.length,this.nCachedObjects_),i=this._indicesByUUID,n=this._bindings,o=n.length,a=0,s=arguments.length;a!==s;++a){var c=arguments[a],h=c.uuid,l=i[h];if(void 0!==l&&r<=l){var u=r++,p=e[u];e[i[p.uuid]=l]=p,e[i[h]=u]=c;for(var d=0,E=o;d!==E;++d){var f=n[d],m=f[u],g=f[l];f[l]=m,f[u]=g}}}this.nCachedObjects_=r},uncache:function(t){for(var e=this._objects,r=e.length,i=this.nCachedObjects_,n=this._indicesByUUID,o=this._bindings,a=o.length,s=0,c=arguments.length;s!==c;++s){var h=arguments[s].uuid,l=n[h];if(void 0!==l)if(delete n[h],l<i){var u,p=--i,h=e[p],d=e[u=--r];e[n[h.uuid]=l]=h,e[n[d.uuid]=p]=d,e.pop();for(var E=0,f=a;E!==f;++E){var m=(T=o[E])[p],g=T[u];T[l]=m,T[p]=g,T.pop()}}else{e[n[(d=e[u=--r]).uuid]=l]=d,e.pop();for(var T,E=0,f=a;E!==f;++E)(T=o[E])[l]=T[u],T.pop()}}this.nCachedObjects_=i},subscribe_:function(t,e){var r=this._bindingsIndicesByPath,i=r[t],n=this._bindings;if(void 0!==i)return n[i];var o=this._paths,a=this._parsedPaths,s=this._objects,c=s.length,h=this.nCachedObjects_,l=new Array(c),i=n.length;r[t]=i,o.push(t),a.push(e),n.push(l);for(var u=h,p=s.length;u!==p;++u){var d=s[u];l[u]=new THREE.PropertyBinding(d,t,e)}return l},unsubscribe_:function(t){var e,r,i,n,o,a=this._bindingsIndicesByPath,s=a[t];void 0!==s&&(e=this._paths,r=this._parsedPaths,o=(i=this._bindings)[n=i.length-1],i[a[t[n]]=s]=o,i.pop(),r[s]=r[n],r.pop(),e[s]=e[n],e.pop())}},THREE.AnimationUtils={arraySlice:function(t,e,r){return THREE.AnimationUtils.isTypedArray(t)?new t.constructor(t.subarray(e,r)):t.slice(e,r)},convertArray:function(t,e,r){return!t||!r&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(r){for(var t=r.length,e=new Array(t),i=0;i!==t;++i)e[i]=i;return e.sort(function(t,e){return r[t]-r[e]}),e},sortedArray:function(t,e,r){for(var i=t.length,n=new t.constructor(i),o=0,a=0;a!==i;++o)for(var s=r[o]*e,c=0;c!==e;++c)n[a++]=t[s+c];return n},flattenJSON:function(t,e,r,i){for(var n=1,o=t[0];void 0!==o&&void 0===o[i];)o=t[n++];if(void 0!==o){var a=o[i];if(void 0!==a)if(Array.isArray(a))for(;void 0!==(a=o[i])&&(e.push(o.time),r.push.apply(r,a)),void 0!==(o=t[n++]););else if(void 0!==a.toArray)for(;void 0!==(a=o[i])&&(e.push(o.time),a.toArray(r,r.length)),void 0!==(o=t[n++]););else for(;void 0!==(a=o[i])&&(e.push(o.time),r.push(a)),void 0!==(o=t[n++]););}}},THREE.KeyframeTrack=function(t,e,r,i){if(void 0===t)throw new Error("track name is undefined");if(void 0===e||0===e.length)throw new Error("no keyframes in track named "+t);this.name=t,this.times=THREE.AnimationUtils.convertArray(e,this.TimeBufferType),this.values=THREE.AnimationUtils.convertArray(r,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation),this.validate(),this.optimize()},THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(t){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new THREE.CubicInterpolant(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e=void 0;switch(t){case THREE.InterpolateDiscrete:e=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:e=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:e=this.InterpolantFactoryMethodSmooth}if(void 0!==e)this.createInterpolant=e;else{var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}console.warn(r)}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,r=0,i=e.length;r!==i;++r)e[r]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,r=0,i=e.length;r!==i;++r)e[r]*=t;return this},trim:function(t,e){for(var r,i=this.times,n=i.length,o=0,a=n-1;o!==n&&i[o]<t;)++o;for(;-1!==a&&i[a]>e;)--a;return++a,0===o&&a===n||(a<=o&&(o=(a=Math.max(a,1))-1),r=this.getValueSize(),this.times=THREE.AnimationUtils.arraySlice(i,o,a),this.values=THREE.AnimationUtils.arraySlice(this.values,o*r,a*r)),this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("invalid value size in track",this),t=!1);var r=this.times,i=this.values,n=r.length;0===n&&(console.error("track is empty",this),t=!1);for(var o=null,a=0;a!==n;a++){var s=r[a];if("number"==typeof s&&isNaN(s)){console.error("time is not a valid number",this,a,s),t=!1;break}if(null!==o&&s<o){console.error("out of order keys",this,a,s,o),t=!1;break}o=s}if(void 0!==i&&THREE.AnimationUtils.isTypedArray(i))for(var a=0,c=i.length;a!==c;++a){var h=i[a];if(isNaN(h)){console.error("value is not a valid number",this,a,h),t=!1;break}}return t},optimize:function(){for(var t=this.times,e=this.values,r=this.getValueSize(),i=1,n=1,o=t.length-1;n<=o;++n){var a=!1,s=t[n];if(s!==t[n+1]&&(1!==n||s!==s[0]))for(var c=n*r,h=c-r,l=c+r,u=0;u!==r;++u){var p=e[c+u];if(p!==e[h+u]||p!==e[l+u]){a=!0;break}}if(a){if(n!==i){t[i]=t[n];for(var d=n*r,E=i*r,u=0;u!==r;++u)e[E+u]=e[d+u]}++i}}return i!==t.length&&(this.times=THREE.AnimationUtils.arraySlice(t,0,i),this.values=THREE.AnimationUtils.arraySlice(e,0,i*r)),this}},Object.assign(THREE.KeyframeTrack,{parse:function(t){if(void 0===t.type)throw new Error("track type undefined, can not parse");var e,r,i=THREE.KeyframeTrack._getTrackTypeForValueTypeName(t.type);return void 0===t.times&&(console.warn("legacy JSON format detected, converting"),THREE.AnimationUtils.flattenJSON(t.keys,e=[],r=[],"value"),t.times=e,t.values=r),void 0!==i.parse?i.parse(t):new i(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e,r=t.constructor;return void 0!==r.toJSON?e=r.toJSON(t):(e={name:t.name,times:THREE.AnimationUtils.convertArray(t.times,Array),values:THREE.AnimationUtils.convertArray(t.values,Array)},(r=t.getInterpolation())!==t.DefaultInterpolation&&(e.interpolation=r)),e.type=t.ValueTypeName,e},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return THREE.NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"color":return THREE.ColorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack}throw new Error("Unsupported typeName: "+t)}}),THREE.PropertyBinding=function(t,e,r){this.path=e,this.parsedPath=r||THREE.PropertyBinding.parseTrackName(e),this.node=THREE.PropertyBinding.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t},THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,r=e.objectName,i=e.propertyName,n=e.propertyIndex;if(t||(t=THREE.PropertyBinding.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(r){var o=e.objectIndex;switch(r){case"materials":if(!t.material)return void console.error("  can not bind to material as node does not have a material",this);if(!t.material.materials)return void console.error("  can not bind to material.materials as node.material does not have a materials array",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("  can not bind to bones as node does not have a skeleton",this);for(var t=t.skeleton.bones,a=0;a<t.length;a++)if(t[a].name===o){o=a;break}break;default:if(void 0===t[r])return void console.error("  can not bind to objectName of node, undefined",this);t=t[r]}if(void 0!==o){if(void 0===t[o])return void console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,t);t=t[o]}}var s=t[i];if(s){var c=this.Versioning.None;void 0!==t.needsUpdate?(c=this.Versioning.NeedsUpdate,this.targetObject=t):void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);var h=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);if(!t.geometry.morphTargets)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);for(a=0;a<this.node.geometry.morphTargets.length;a++)if(t.geometry.morphTargets[a].name===n){n=a;break}}h=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=n}else void 0!==s.fromArray&&void 0!==s.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=s):void 0!==s.length?(h=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}else{e=e.nodeName;console.error("  trying to update property for track: "+e+"."+i+" but it wasn't found.",t)}}else console.error("  trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}},Object.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)t[e++]=r[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.node[this.propertyName]=t[e]},function(t,e){this.node[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.node[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=t[e++]},function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]]}),THREE.PropertyBinding.Composite=function(t,e,r){r=r||THREE.PropertyBinding.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)},THREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(t,e){this.bind();var r=this._targetGroup.nCachedObjects_,r=this._bindings[r];void 0!==r&&r.getValue(t,e)},setValue:function(t,e){for(var r=this._bindings,i=this._targetGroup.nCachedObjects_,n=r.length;i!==n;++i)r[i].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].unbind()}},THREE.PropertyBinding.create=function(t,e,r){return new(t instanceof THREE.AnimationObjectGroup?THREE.PropertyBinding.Composite:THREE.PropertyBinding)(t,e,r)},THREE.PropertyBinding.parseTrackName=function(t){var e=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,r=e.exec(t);if(!r)throw new Error("cannot parse trackName at all: "+t);r.index===e.lastIndex&&e.lastIndex++;r={nodeName:r[3],objectName:r[5],objectIndex:r[7],propertyName:r[9],propertyIndex:r[11]};if(null===r.propertyName||0===r.propertyName.length)throw new Error("can not parse propertyName from trackName: "+t);return r},THREE.PropertyBinding.findNode=function(t,i){if(!i||""===i||"root"===i||"."===i||-1===i||i===t.name||i===t.uuid)return t;if(t.skeleton){var e=function(t){for(var e=0;e<t.bones.length;e++){var r=t.bones[e];if(r.name===i)return r}return null}(t.skeleton);if(e)return e}if(t.children){function n(t){for(var e=0;e<t.length;e++){var r=t[e];if(r.name===i||r.uuid===i)return r;r=n(r.children);if(r)return r}return null}t=n(t.children);if(t)return t}return null},THREE.PropertyMixer=function(t,e,r){this.binding=t,this.valueSize=r;var i,n=Float64Array;switch(e){case"quaternion":i=this._slerp;break;case"string":case"bool":n=Array,i=this._select;break;default:i=this._lerp}this.buffer=new n(4*r),this._mixBufferRegion=i,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0},THREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(t,e){var r=this.buffer,i=this.valueSize,n=t*i+i,t=this.cumulativeWeight;if(0===t){for(var o=0;o!==i;++o)r[n+o]=r[o];t=e}else this._mixBufferRegion(r,n,0,e/(t+=e),i);this.cumulativeWeight=t},apply:function(t){var e=this.valueSize,r=this.buffer,i=t*e+e,t=this.cumulativeWeight,n=this.binding;this.cumulativeWeight=0,t<1&&this._mixBufferRegion(r,i,3*e,1-t,e);for(var o=e,a=e+e;o!==a;++o)if(r[o]!==r[o+e]){n.setValue(r,i);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,r=this.valueSize,i=3*r;t.getValue(e,i);for(var n=r,o=i;n!==o;++n)e[n]=e[i+n%r];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,r,i,n){if(.5<=i)for(var o=0;o!==n;++o)t[e+o]=t[r+o]},_slerp:function(t,e,r,i,n){THREE.Quaternion.slerpFlat(t,e,t,e,t,r,i)},_lerp:function(t,e,r,i,n){for(var o=1-i,a=0;a!==n;++a){var s=e+a;t[s]=t[s]*o+t[r+a]*i}}},THREE.BooleanKeyframeTrack=function(t,e,r){THREE.KeyframeTrack.call(this,t,e,r)},THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),THREE.ColorKeyframeTrack=function(t,e,r,i){THREE.KeyframeTrack.call(this,t,e,r,i)},THREE.ColorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.ColorKeyframeTrack,ValueTypeName:"color"}),THREE.NumberKeyframeTrack=function(t,e,r,i){THREE.KeyframeTrack.call(this,t,e,r,i)},THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:"number"}),THREE.QuaternionKeyframeTrack=function(t,e,r,i){THREE.KeyframeTrack.call(this,t,e,r,i)},THREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(t){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),THREE.StringKeyframeTrack=function(t,e,r,i){THREE.KeyframeTrack.call(this,t,e,r,i)},THREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),THREE.VectorKeyframeTrack=function(t,e,r,i){THREE.KeyframeTrack.call(this,t,e,r,i)},THREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:"vector"}),THREE.Audio=function(t){THREE.Object3D.call(this),this.type="Audio",this.context=t.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filter=null},THREE.Audio.prototype=Object.create(THREE.Object3D.prototype),THREE.Audio.prototype.constructor=THREE.Audio,THREE.Audio.prototype.getOutput=function(){return this.gain},THREE.Audio.prototype.setNodeSource=function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},THREE.Audio.prototype.setBuffer=function(t){return this.source.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},THREE.Audio.prototype.play=function(){var t;!0!==this.isPlaying?!1!==this.hasPlaybackControl?((t=this.context.createBufferSource()).buffer=this.source.buffer,t.loop=this.source.loop,t.onended=this.source.onended,t.start(0,this.startTime),t.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=t,this.connect()):console.warn("THREE.Audio: this Audio has no playback control."):console.warn("THREE.Audio: Audio is already playing.")},THREE.Audio.prototype.pause=function(){!1!==this.hasPlaybackControl?(this.source.stop(),this.startTime=this.context.currentTime):console.warn("THREE.Audio: this Audio has no playback control.")},THREE.Audio.prototype.stop=function(){!1!==this.hasPlaybackControl?(this.source.stop(),this.startTime=0):console.warn("THREE.Audio: this Audio has no playback control.")},THREE.Audio.prototype.connect=function(){null!==this.filter?(this.source.connect(this.filter),this.filter.connect(this.getOutput())):this.source.connect(this.getOutput())},THREE.Audio.prototype.disconnect=function(){null!==this.filter?(this.source.disconnect(this.filter),this.filter.disconnect(this.getOutput())):this.source.disconnect(this.getOutput())},THREE.Audio.prototype.getFilter=function(){return this.filter},THREE.Audio.prototype.setFilter=function(t){void 0===t&&(t=null),!0===this.isPlaying?(this.disconnect(),this.filter=t,this.connect()):this.filter=t},THREE.Audio.prototype.setPlaybackRate=function(t){!1!==this.hasPlaybackControl?(this.playbackRate=t,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate)):console.warn("THREE.Audio: this Audio has no playback control.")},THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate},THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1},THREE.Audio.prototype.setLoop=function(t){!1!==this.hasPlaybackControl?this.source.loop=t:console.warn("THREE.Audio: this Audio has no playback control.")},THREE.Audio.prototype.getLoop=function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.source.loop},THREE.Audio.prototype.setVolume=function(t){this.gain.gain.value=t},THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value},THREE.AudioAnalyser=function(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)},THREE.AudioAnalyser.prototype={constructor:THREE.AudioAnalyser,getData:function(){return this.analyser.getByteFrequencyData(this.data),this.data}},Object.defineProperty(THREE,"AudioContext",{get:function(){var t;return function(){return t=void 0===t?new(window.AudioContext||window.webkitAudioContext):t}}()}),THREE.PositionalAudio=function(t){THREE.Audio.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)},THREE.PositionalAudio.prototype=Object.create(THREE.Audio.prototype),THREE.PositionalAudio.prototype.constructor=THREE.PositionalAudio,THREE.PositionalAudio.prototype.getOutput=function(){return this.panner},THREE.PositionalAudio.prototype.setRefDistance=function(t){this.panner.refDistance=t},THREE.PositionalAudio.prototype.getRefDistance=function(){return this.panner.refDistance},THREE.PositionalAudio.prototype.setRolloffFactor=function(t){this.panner.rolloffFactor=t},THREE.PositionalAudio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor},THREE.PositionalAudio.prototype.setDistanceModel=function(t){this.panner.distanceModel=t},THREE.PositionalAudio.prototype.getDistanceModel=function(){return this.panner.distanceModel},THREE.PositionalAudio.prototype.setMaxDistance=function(t){this.panner.maxDistance=t},THREE.PositionalAudio.prototype.getMaxDistance=function(){return this.panner.maxDistance},THREE.PositionalAudio.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3;return function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}(),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=THREE.AudioContext,this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null},THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListener.prototype.constructor=THREE.AudioListener,THREE.AudioListener.prototype.getInput=function(){return this.gain},THREE.AudioListener.prototype.removeFilter=function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},THREE.AudioListener.prototype.setFilter=function(t){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},THREE.AudioListener.prototype.getFilter=function(){return this.filter},THREE.AudioListener.prototype.setMasterVolume=function(t){this.gain.gain.value=t},THREE.AudioListener.prototype.getMasterVolume=function(){return this.gain.gain.value},THREE.AudioListener.prototype.updateMatrixWorld=function(){var r=new THREE.Vector3,i=new THREE.Quaternion,n=new THREE.Vector3,o=new THREE.Vector3;return function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t);var e=this.context.listener,t=this.up;this.matrixWorld.decompose(r,i,n),o.set(0,0,-1).applyQuaternion(i),e.setPosition(r.x,r.y,r.z),e.setOrientation(o.x,o.y,o.z,t.x,t.y,t.z)}}(),THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(t){t=t||new THREE.Vector3;return this.getWorldQuaternion(e),t.set(0,0,-1).applyQuaternion(e)}}(),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)},THREE.Camera.prototype.copy=function(t){return THREE.Object3D.prototype.copy.call(this,t),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},THREE.CubeCamera=function(t,e,r){THREE.Object3D.call(this),this.type="CubeCamera";var n=new THREE.PerspectiveCamera(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,t,e);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,t,e);a.up.set(0,0,1),a.lookAt(new THREE.Vector3(0,1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,t,e);s.up.set(0,0,-1),s.lookAt(new THREE.Vector3(0,-1,0)),this.add(s);var c=new THREE.PerspectiveCamera(90,1,t,e);c.up.set(0,-1,0),c.lookAt(new THREE.Vector3(0,0,1)),this.add(c);var h=new THREE.PerspectiveCamera(90,1,t,e);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h);e={format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter};this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,e),this.updateCubeMap=function(t,e){null===this.parent&&this.updateMatrixWorld();var r=this.renderTarget,i=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,r.activeCubeFace=0,t.render(e,n,r),r.activeCubeFace=1,t.render(e,o,r),r.activeCubeFace=2,t.render(e,a,r),r.activeCubeFace=3,t.render(e,s,r),r.activeCubeFace=4,t.render(e,c,r),r.texture.generateMipmaps=i,r.activeCubeFace=5,t.render(e,h,r),t.setRenderTarget(null)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(t,e,r,i,n,o){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=t,this.right=e,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(r-t,r+t,i+e,i-e,this.near,this.far)},THREE.OrthographicCamera.prototype.copy=function(t){return THREE.Camera.prototype.copy.call(this,t),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this},THREE.OrthographicCamera.prototype.toJSON=function(t){t=THREE.Object3D.prototype.toJSON.call(this,t);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,t},THREE.PerspectiveCamera=function(t,e,r,i){THREE.Camera.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},THREE.PerspectiveCamera.prototype.setFocalLength=function(t){t=.5*this.getFilmHeight()/t;this.fov=2*THREE.Math.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.getFocalLength=function(){var t=Math.tan(.5*THREE.Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},THREE.PerspectiveCamera.prototype.getEffectiveFOV=function(){return 2*THREE.Math.RAD2DEG*Math.atan(Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom)},THREE.PerspectiveCamera.prototype.getFilmWidth=function(){return this.filmGauge*Math.min(this.aspect,1)},THREE.PerspectiveCamera.prototype.getFilmHeight=function(){return this.filmGauge/Math.max(this.aspect,1)},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,e,r,i,n,o){this.aspect=t/e,this.view={fullWidth:t,fullHeight:e,offsetX:r,offsetY:i,width:n,height:o},this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var t,e=this.near,r=e*Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom,i=2*r,n=this.aspect*i,o=-.5*n,a=this.view;null!==a&&(t=a.fullWidth,s=a.fullHeight,o+=a.offsetX*n/t,r-=a.offsetY*i/s,n*=a.width/t,i*=a.height/s);var s=this.filmOffset;0!==s&&(o+=e*s/this.getFilmWidth()),this.projectionMatrix.makeFrustum(o,o+n,r-i,r,e,this.far)},THREE.PerspectiveCamera.prototype.copy=function(t){return THREE.Camera.prototype.copy.call(this,t),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},THREE.PerspectiveCamera.prototype.toJSON=function(t){t=THREE.Object3D.prototype.toJSON.call(this,t);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t},THREE.StereoCamera=function(){this.type="StereoCamera",this.aspect=1,this.cameraL=new THREE.PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new THREE.PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1},THREE.StereoCamera.prototype={constructor:THREE.StereoCamera,update:function(){var a,s,c,h,l,u=new THREE.Matrix4,p=new THREE.Matrix4;return function(t){var e,r,i,n,o;a===t.focus&&s===t.fov&&c===t.aspect*this.aspect&&h===t.near&&l===t.far||(a=t.focus,s=t.fov,c=t.aspect*this.aspect,h=t.near,l=t.far,e=t.projectionMatrix.clone(),r=.032*h/a,i=h*Math.tan(THREE.Math.DEG2RAD*s*.5),p.elements[12]=-.032,u.elements[12]=.032,n=-i*c+r,o=i*c+r,e.elements[0]=2*h/(o-n),e.elements[8]=(o+n)/(o-n),this.cameraL.projectionMatrix.copy(e),n=-i*c-r,o=i*c-r,e.elements[0]=2*h/(o-n),e.elements[8]=(o+n)/(o-n),this.cameraR.projectionMatrix.copy(e)),this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(p),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(u)}}()},THREE.Light=function(t,e){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.copy=function(t){return THREE.Object3D.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},THREE.Light.prototype.toJSON=function(t){t=THREE.Object3D.prototype.toJSON.call(this,t);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),t},THREE.LightShadow=function(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new THREE.Vector2(512,512),this.map=null,this.matrix=new THREE.Matrix4},THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)}},THREE.AmbientLight=function(t,e){THREE.Light.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(t,e){THREE.Light.call(this,t,e),this.type="DirectionalLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.shadow=new THREE.DirectionalLightShadow},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.DirectionalLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this},THREE.DirectionalLightShadow=function(t){THREE.LightShadow.call(this,new THREE.OrthographicCamera(-5,5,5,-5,.5,500))},THREE.DirectionalLightShadow.prototype=Object.create(THREE.LightShadow.prototype),THREE.DirectionalLightShadow.prototype.constructor=THREE.DirectionalLightShadow,THREE.HemisphereLight=function(t,e,r){THREE.Light.call(this,t,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.set(0,1,0),this.updateMatrix(),this.groundColor=new THREE.Color(e)},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight,THREE.HemisphereLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this},THREE.PointLight=function(t,e,r,i){THREE.Light.call(this,t,e),this.type="PointLight",this.distance=void 0!==r?r:0,this.decay=void 0!==i?i:1,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.constructor=THREE.PointLight,Object.defineProperty(THREE.PointLight.prototype,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),THREE.PointLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this},THREE.SpotLight=function(t,e,r,i,n,o){THREE.Light.call(this,t,e),this.type="SpotLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.penumbra=void 0!==n?n:0,this.decay=void 0!==o?o:1,this.shadow=new THREE.SpotLightShadow},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.constructor=THREE.SpotLight,Object.defineProperty(THREE.SpotLight.prototype,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),THREE.SpotLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this},THREE.SpotLightShadow=function(){THREE.LightShadow.call(this,new THREE.PerspectiveCamera(50,1,.5,500))},THREE.SpotLightShadow.prototype=Object.create(THREE.LightShadow.prototype),THREE.SpotLightShadow.prototype.constructor=THREE.SpotLightShadow,THREE.SpotLightShadow.prototype.update=function(t){var e=2*THREE.Math.RAD2DEG*t.angle,r=this.mapSize.width/this.mapSize.height,i=t.distance||500,t=this.camera;e===t.fov&&r===t.aspect&&i===t.far||(t.fov=e,t.aspect=r,t.far=i,t.updateProjectionMatrix())},THREE.AudioLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.AudioLoader.prototype={constructor:THREE.AudioLoader,load:function(t,e,r,i){var n=new THREE.XHRLoader(this.manager);n.setResponseType("arraybuffer"),n.load(t,function(t){THREE.AudioContext.decodeAudioData(t,function(t){e(t)})},r,i)}},THREE.Cache={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},THREE.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(t){t=t.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(t,e,r){for(var i=[],n=0;n<t.length;++n)i[n]=this.createMaterial(t[n],e,r);return i},createMaterial:function(){var o,h,l;return function(t,a,s){void 0===o&&(o=new THREE.Color),void 0===h&&(h=new THREE.TextureLoader),void 0===l&&(l=new THREE.MaterialLoader);var c={};function e(t,e,r,i,n){var o=a+t,t=THREE.Loader.Handlers.get(o),o=null!==t?t.load(o):(h.setCrossOrigin(s),h.load(o));void 0!==e&&(o.repeat.fromArray(e),1!==e[0]&&(o.wrapS=THREE.RepeatWrapping),1!==e[1]&&(o.wrapT=THREE.RepeatWrapping)),void 0!==r&&o.offset.fromArray(r),void 0!==i&&("repeat"===i[0]&&(o.wrapS=THREE.RepeatWrapping),"mirror"===i[0]&&(o.wrapS=THREE.MirroredRepeatWrapping),"repeat"===i[1]&&(o.wrapT=THREE.RepeatWrapping),"mirror"===i[1]&&(o.wrapT=THREE.MirroredRepeatWrapping)),void 0!==n&&(o.anisotropy=n);n=THREE.Math.generateUUID();return c[n]=o,n}var r,i={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(r in t){var n=t[r];switch(r){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":i.name=n;break;case"blending":i.blending=THREE[n];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",r,"is no longer supported.");break;case"colorDiffuse":i.color=o.fromArray(n).getHex();break;case"colorSpecular":i.specular=o.fromArray(n).getHex();break;case"colorEmissive":i.emissive=o.fromArray(n).getHex();break;case"specularCoef":i.shininess=n;break;case"shading":"basic"===n.toLowerCase()&&(i.type="MeshBasicMaterial"),"phong"===n.toLowerCase()&&(i.type="MeshPhongMaterial");break;case"mapDiffuse":i.map=e(n,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":i.lightMap=e(n,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":i.aoMap=e(n,t.mapAORepeat,t.mapAOOffset,t.mapAOWrap,t.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":i.bumpMap=e(n,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy);break;case"mapBumpScale":i.bumpScale=n;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":i.normalMap=e(n,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy);break;case"mapNormalFactor":i.normalScale=[n,n];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":i.specularMap=e(n,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":i.alphaMap=e(n,t.mapAlphaRepeat,t.mapAlphaOffset,t.mapAlphaWrap,t.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":i.side=THREE.BackSide;break;case"doubleSided":i.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),i.opacity=n;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":i[r]=n;break;case"vertexColors":!0===n&&(i.vertexColors=THREE.VertexColors),"face"===n&&(i.vertexColors=THREE.FaceColors);break;default:console.error("THREE.Loader.createMaterial: Unsupported",r,n)}}return"MeshBasicMaterial"===i.type&&delete i.emissive,"MeshPhongMaterial"!==i.type&&delete i.specular,i.opacity<1&&(i.transparent=!0),l.setTextures(c),l.parse(i)}}()},THREE.Loader.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,r=0,i=e.length;r<i;r+=2){var n=e[r],o=e[r+1];if(n.test(t))return o}return null}},THREE.XHRLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(r,i,e,n){void 0!==this.path&&(r=this.path+r);var o=this,t=THREE.Cache.get(r);if(void 0!==t)return i&&setTimeout(function(){i(t)},0),t;var a=new XMLHttpRequest;return a.overrideMimeType("text/plain"),a.open("GET",r,!0),a.addEventListener("load",function(t){var e=t.target.response;THREE.Cache.add(r,e),200===this.status?(i&&i(e),o.manager.itemEnd(r)):0===this.status?(console.warn("THREE.XHRLoader: HTTP Status 0 received."),i&&i(e),o.manager.itemEnd(r)):(n&&n(t),o.manager.itemError(r))},!1),void 0!==e&&a.addEventListener("progress",function(t){e(t)},!1),a.addEventListener("error",function(t){n&&n(t),o.manager.itemError(r)},!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.send(null),o.manager.itemStart(r),a},setPath:function(t){this.path=t},setResponseType:function(t){this.responseType=t},setWithCredentials:function(t){this.withCredentials=t}},THREE.FontLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.FontLoader.prototype={constructor:THREE.FontLoader,load:function(t,e,r,i){new THREE.XHRLoader(this.manager).load(t,function(t){e(new THREE.Font(JSON.parse(t.substring(65,t.length-2))))},r,i)}},THREE.ImageLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,r,i,n){void 0!==this.path&&(e=this.path+e);var o=this,t=THREE.Cache.get(e);if(void 0!==t)return o.manager.itemStart(e),r?setTimeout(function(){r(t),o.manager.itemEnd(e)},0):o.manager.itemEnd(e),t;var a=document.createElement("img");return a.addEventListener("load",function(t){THREE.Cache.add(e,this),r&&r(this),o.manager.itemEnd(e)},!1),void 0!==i&&a.addEventListener("progress",function(t){i(t)},!1),a.addEventListener("error",function(t){n&&n(t),o.manager.itemError(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),o.manager.itemStart(e),a.src=e,a},setCrossOrigin:function(t){this.crossOrigin=t},setPath:function(t){this.path=t}},THREE.JSONLoader=function(t){"boolean"==typeof t&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.withCredentials=!1},THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement("div")),console.warn("THREE.JSONLoader: .statusDomElement has been removed."),this._statusDomElement},load:function(r,i,t,e){var n=this,o=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(r),a=new THREE.XHRLoader(this.manager);a.setWithCredentials(this.withCredentials),a.load(r,function(t){var e=JSON.parse(t),t=e.metadata;if(void 0!==t){t=t.type;if(void 0!==t){if("object"===t.toLowerCase())return void console.error("THREE.JSONLoader: "+r+" should be loaded with THREE.ObjectLoader instead.");if("scene"===t.toLowerCase())return void console.error("THREE.JSONLoader: "+r+" should be loaded with THREE.SceneLoader instead.")}}e=n.parse(e,o);i(e.geometry,e.materials)},t,e)},setTexturePath:function(t){this.texturePath=t},parse:function(P,t){var B=new THREE.Geometry,e=void 0!==P.scale?1/P.scale:1;if(!function(t){var e,r,i,n,o,a,s,c,h,l,u,p,d,E,f,m,g,T,v,y,R,H,x,_,b,M,w=P.faces,S=P.vertices,L=P.normals,A=P.colors,C=0;if(void 0!==P.uvs){for(e=0;e<P.uvs.length;e++)P.uvs[e].length&&C++;for(e=0;e<C;e++)B.faceVertexUvs[e]=[]}n=0,o=S.length;for(;n<o;)(g=new THREE.Vector3).x=S[n++]*t,g.y=S[n++]*t,g.z=S[n++]*t,B.vertices.push(g);n=0,o=w.length;for(;n<o;)if(l=w[n++],u=l&2,p=l&8,d=l&16,E=l&32,f=l&64,m=l&128,l&1){if((v=new THREE.Face3).a=w[n],v.b=w[n+1],v.c=w[n+3],(y=new THREE.Face3).a=w[n+1],y.b=w[n+2],y.c=w[n+3],n+=4,u&&(h=w[n++],v.materialIndex=h,y.materialIndex=h),i=B.faces.length,p)for(e=0;e<C;e++)for(x=P.uvs[e],B.faceVertexUvs[e][i]=[],B.faceVertexUvs[e][i+1]=[],r=0;r<4;r++)c=w[n++],b=x[2*c],M=x[2*c+1],_=new THREE.Vector2(b,M),2!==r&&B.faceVertexUvs[e][i].push(_),0!==r&&B.faceVertexUvs[e][i+1].push(_);if(d&&(s=3*w[n++],v.normal.set(L[s++],L[s++],L[s]),y.normal.copy(v.normal)),E)for(e=0;e<4;e++)s=3*w[n++],H=new THREE.Vector3(L[s++],L[s++],L[s]),2!==e&&v.vertexNormals.push(H),0!==e&&y.vertexNormals.push(H);if(f&&(a=w[n++],R=A[a],v.color.setHex(R),y.color.setHex(R)),m)for(e=0;e<4;e++)a=w[n++],R=A[a],2!==e&&v.vertexColors.push(new THREE.Color(R)),0!==e&&y.vertexColors.push(new THREE.Color(R));B.faces.push(v),B.faces.push(y)}else{if((T=new THREE.Face3).a=w[n++],T.b=w[n++],T.c=w[n++],u&&(h=w[n++],T.materialIndex=h),i=B.faces.length,p)for(e=0;e<C;e++)for(x=P.uvs[e],B.faceVertexUvs[e][i]=[],r=0;r<3;r++)c=w[n++],b=x[2*c],M=x[2*c+1],_=new THREE.Vector2(b,M),B.faceVertexUvs[e][i].push(_);if(d&&(s=3*w[n++],T.normal.set(L[s++],L[s++],L[s])),E)for(e=0;e<3;e++)s=3*w[n++],H=new THREE.Vector3(L[s++],L[s++],L[s]),T.vertexNormals.push(H);if(f&&(a=w[n++],T.color.setHex(A[a])),m)for(e=0;e<3;e++)a=w[n++],T.vertexColors.push(new THREE.Color(A[a]));B.faces.push(T)}}(e),function(){var t=void 0!==P.influencesPerVertex?P.influencesPerVertex:2;if(P.skinWeights)for(var e=0,r=P.skinWeights.length;e<r;e+=t){var i=P.skinWeights[e],n=1<t?P.skinWeights[e+1]:0,o=2<t?P.skinWeights[e+2]:0,a=3<t?P.skinWeights[e+3]:0;B.skinWeights.push(new THREE.Vector4(i,n,o,a))}if(P.skinIndices)for(e=0,r=P.skinIndices.length;e<r;e+=t){var s=P.skinIndices[e],c=1<t?P.skinIndices[e+1]:0,h=2<t?P.skinIndices[e+2]:0,l=3<t?P.skinIndices[e+3]:0;B.skinIndices.push(new THREE.Vector4(s,c,h,l))}B.bones=P.bones,B.bones&&0<B.bones.length&&(B.skinWeights.length!==B.skinIndices.length||B.skinIndices.length!==B.vertices.length)&&console.warn("When skinning, number of vertices ("+B.vertices.length+"), skinIndices ("+B.skinIndices.length+"), and skinWeights ("+B.skinWeights.length+") should match.")}(),function(t){if(void 0!==P.morphTargets)for(var e=0,r=P.morphTargets.length;e<r;e++){B.morphTargets[e]={},B.morphTargets[e].name=P.morphTargets[e].name,B.morphTargets[e].vertices=[];for(var i=B.morphTargets[e].vertices,n=P.morphTargets[e].vertices,o=0,a=n.length;o<a;o+=3){var s=new THREE.Vector3;s.x=n[o]*t,s.y=n[o+1]*t,s.z=n[o+2]*t,i.push(s)}}if(void 0!==P.morphColors&&0<P.morphColors.length){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var c=B.faces,h=P.morphColors[0].colors,e=0,r=c.length;e<r;e++)c[e].color.fromArray(h,3*e)}}(e),function(){var t=[],e=[];void 0!==P.animation&&e.push(P.animation);void 0!==P.animations&&(P.animations.length?e=e.concat(P.animations):e.push(P.animations));for(var r=0;r<e.length;r++){var i=THREE.AnimationClip.parseAnimation(e[r],B.bones);i&&t.push(i)}{var n;B.morphTargets&&(n=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(B.morphTargets,10),t=t.concat(n))}0<t.length&&(B.animations=t)}(),B.computeFaceNormals(),B.computeBoundingSphere(),void 0===P.materials||0===P.materials.length)return{geometry:B};t=THREE.Loader.prototype.initMaterials(P.materials,t,this.crossOrigin);return{geometry:B,materials:t}}},THREE.LoadingManager=function(t,e,r){var i=this,n=!1,o=0,a=0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(t){a++,!1===n&&void 0!==i.onStart&&i.onStart(t,o,a),n=!0},this.itemEnd=function(t){o++,void 0!==i.onProgress&&i.onProgress(t,o,a),o===a&&(n=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(t,e,r,i){var n=this;new THREE.XHRLoader(n.manager).load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},parse:function(t){var e=new THREE.BufferGeometry,r=t.data.index,i={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};void 0!==r&&(s=new i[r.type](r.array),e.setIndex(new THREE.BufferAttribute(s,1)));var n,o=t.data.attributes;for(n in o){var a=o[n],s=new i[a.type](a.array);e.addAttribute(n,new THREE.BufferAttribute(s,a.itemSize,a.normalized))}var c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(var h=0,l=c.length;h!==l;++h){var u=c[h];e.addGroup(u.start,u.count,u.materialIndex)}r=t.data.boundingSphere;return void 0!==r&&(t=new THREE.Vector3,void 0!==r.center&&t.fromArray(r.center),e.boundingSphere=new THREE.Sphere(t,r.radius)),e}},THREE.MaterialLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.textures={}},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(t,e,r,i){var n=this;new THREE.XHRLoader(n.manager).load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setTextures:function(t){this.textures=t},getTexture:function(t){var e=this.textures;return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]},parse:function(t){var e,r=new THREE[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.uniforms&&(r.uniforms=t.uniforms),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(r.vertexColors=t.vertexColors),void 0!==t.shading&&(r.shading=t.shading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.side&&(r.side=t.side),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=this.getTexture(t.map)),void 0!==t.alphaMap&&(r.alphaMap=this.getTexture(t.alphaMap),r.transparent=!0),void 0!==t.bumpMap&&(r.bumpMap=this.getTexture(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=this.getTexture(t.normalMap)),void 0!==t.normalScale&&(e=t.normalScale,!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new THREE.Vector2).fromArray(e)),void 0!==t.displacementMap&&(r.displacementMap=this.getTexture(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=this.getTexture(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=this.getTexture(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=this.getTexture(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=this.getTexture(t.specularMap)),void 0!==t.envMap&&(r.envMap=this.getTexture(t.envMap),r.combine=THREE.MultiplyOperation),t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.lightMap&&(r.lightMap=this.getTexture(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=this.getTexture(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.materials)for(var i=0,n=t.materials.length;i<n;i++)r.materials.push(this.parse(t.materials[i]));return r}},THREE.ObjectLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.texturePath=""},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(t,e,r,i){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var n=this;new THREE.XHRLoader(n.manager).load(t,function(t){n.parse(JSON.parse(t),e)},r,i)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var r=this.parseGeometries(t.geometries),i=this.parseImages(t.images,function(){void 0!==e&&e(n)}),i=this.parseTextures(t.textures,i),i=this.parseMaterials(t.materials,i),n=this.parseObject(t.object,r,i);return t.animations&&(n.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(n),n},parseGeometries:function(t){var e={};if(void 0!==t)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=t.length;n<o;n++){var a,s=t[n];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new THREE[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new THREE[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new THREE[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new THREE[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":a=new THREE.DodecahedronGeometry(s.radius,s.detail);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"OctahedronGeometry":a=new THREE.OctahedronGeometry(s.radius,s.detail);break;case"TetrahedronGeometry":a=new THREE.TetrahedronGeometry(s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new THREE[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new THREE[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new THREE[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":a=new THREE[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"BufferGeometry":a=i.parse(s);break;case"Geometry":a=r.parse(s.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),e[s.uuid]=a}return e},parseMaterials:function(t,e){var r={};if(void 0!==t){var i=new THREE.MaterialLoader;i.setTextures(e);for(var n=0,o=t.length;n<o;n++){var a=i.parse(t[n]);r[a.uuid]=a}}return r},parseAnimations:function(t){for(var e=[],r=0;r<t.length;r++){var i=THREE.AnimationClip.parse(t[r]);e.push(i)}return e},parseImages:function(t,e){var r=this,i={};if(void 0!==t&&0<t.length){var e=new THREE.LoadingManager(e),n=new THREE.ImageLoader(e);n.setCrossOrigin(this.crossOrigin);for(var o=0,a=t.length;o<a;o++){var s=t[o],c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(s.url)?s.url:r.texturePath+s.url;i[s.uuid]=function(t){return r.manager.itemStart(t),n.load(t,function(){r.manager.itemEnd(t)})}(c)}}return i},parseTextures:function(t,e){function r(t){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),THREE[t])}var i={};if(void 0!==t)for(var n=0,o=t.length;n<o;n++){var a=t[n];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===e[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);var s=new THREE.Texture(e[a.image]);s.needsUpdate=!0,s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.mapping&&(s.mapping=r(a.mapping)),void 0!==a.offset&&(s.offset=new THREE.Vector2(a.offset[0],a.offset[1])),void 0!==a.repeat&&(s.repeat=new THREE.Vector2(a.repeat[0],a.repeat[1])),void 0!==a.minFilter&&(s.minFilter=r(a.minFilter)),void 0!==a.magFilter&&(s.magFilter=r(a.magFilter)),void 0!==a.anisotropy&&(s.anisotropy=a.anisotropy),Array.isArray(a.wrap)&&(s.wrapS=r(a.wrap[0]),s.wrapT=r(a.wrap[1])),i[a.uuid]=s}return i},parseObject:function(){var p=new THREE.Matrix4;return function(t,e,r){function i(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function n(t){if(void 0!==t)return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),r[t]}switch(t.type){case"Scene":s=new THREE.Scene;break;case"PerspectiveCamera":s=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"OrthographicCamera":s=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":s=new THREE.AmbientLight(t.color,t.intensity);break;case"DirectionalLight":s=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":s=new THREE.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":s=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":s=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var o=i(t.geometry),a=n(t.material),s=new(o.bones&&0<o.bones.length?THREE.SkinnedMesh:THREE.Mesh)(o,a);break;case"LOD":s=new THREE.LOD;break;case"Line":s=new THREE.Line(i(t.geometry),n(t.material),t.mode);break;case"PointCloud":case"Points":s=new THREE.Points(i(t.geometry),n(t.material));break;case"Sprite":s=new THREE.Sprite(n(t.material));break;case"Group":s=new THREE.Group;break;default:s=new THREE.Object3D}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(p.fromArray(t.matrix),p.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.children)for(var c in t.children)s.add(this.parseObject(t.children[c],e,r));if("LOD"===t.type)for(var h=t.levels,l=0;l<h.length;l++){var u=h[l];void 0!==(c=s.getObjectByProperty("uuid",u.object))&&s.addLevel(c,u.distance)}return s}}()},THREE.TextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(t,e,r,i){var n=new THREE.Texture,o=new THREE.ImageLoader(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(t){n.image=t,n.needsUpdate=!0,void 0!==e&&e(n)},r,i),n},setCrossOrigin:function(t){this.crossOrigin=t},setPath:function(t){this.path=t}},THREE.CubeTextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(t,r,e,i){var n=new THREE.CubeTexture,o=new THREE.ImageLoader(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);var a=0;for(var s=0;s<t.length;++s)!function(e){o.load(t[e],function(t){n.images[e]=t,6===++a&&(n.needsUpdate=!0,r&&r(n))},void 0,i)}(s);return n},setCrossOrigin:function(t){this.crossOrigin=t},setPath:function(t){this.path=t}},THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this._parser=null},THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(t,e,r,i){var n=this,o=new THREE.DataTexture,a=new THREE.XHRLoader(this.manager);return a.setResponseType("arraybuffer"),a.load(t,function(t){t=n._parser(t);t&&(void 0!==t.image?o.image=t.image:void 0!==t.data&&(o.image.width=t.width,o.image.height=t.height,o.image.data=t.data),o.wrapS=void 0!==t.wrapS?t.wrapS:THREE.ClampToEdgeWrapping,o.wrapT=void 0!==t.wrapT?t.wrapT:THREE.ClampToEdgeWrapping,o.magFilter=void 0!==t.magFilter?t.magFilter:THREE.LinearFilter,o.minFilter=void 0!==t.minFilter?t.minFilter:THREE.LinearMipMapLinearFilter,o.anisotropy=void 0!==t.anisotropy?t.anisotropy:1,void 0!==t.format&&(o.format=t.format),void 0!==t.type&&(o.type=t.type),void 0!==t.mipmaps&&(o.mipmaps=t.mipmaps),1===t.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.needsUpdate=!0,e&&e(o,t))},r,i),o}},THREE.CompressedTextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this._parser=null},THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(t,o,r,i){var a=this,s=[],c=new THREE.CompressedTexture;c.image=s;var n=new THREE.XHRLoader(this.manager);if(n.setPath(this.path),n.setResponseType("arraybuffer"),Array.isArray(t))for(var h=0,e=0,l=t.length;e<l;++e)!function(e){n.load(t[e],function(t){t=a._parser(t,!0);s[e]={width:t.width,height:t.height,format:t.format,mipmaps:t.mipmaps},6===(h+=1)&&(1===t.mipmapCount&&(c.minFilter=THREE.LinearFilter),c.format=t.format,c.needsUpdate=!0,o&&o(c))},r,i)}(e);else n.load(t,function(t){var e=a._parser(t,!0);if(e.isCubemap)for(var r=e.mipmaps.length/e.mipmapCount,i=0;i<r;i++){s[i]={mipmaps:[]};for(var n=0;n<e.mipmapCount;n++)s[i].mipmaps.push(e.mipmaps[i*e.mipmapCount+n]),s[i].format=e.format,s[i].width=e.width,s[i].height=e.height}else c.image.width=e.width,c.image.height=e.height,c.mipmaps=e.mipmaps;1===e.mipmapCount&&(c.minFilter=THREE.LinearFilter),c.format=e.format,c.needsUpdate=!0,o&&o(c)},r,i);return c},setPath:function(t){this.path=t}},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=THREE.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){!0===t&&this.update(),this._needsUpdate=t},setValues:function(t){if(void 0!==t)for(var e in t){var r,i=t[e];void 0!==i?void 0!==(r=this[e])?r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[e]="overdraw"===e?Number(i):i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material."):console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){var e=void 0===t;e&&(t={textures:{},images:{}});var r={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};function i(t){var e,r=[];for(e in t){var i=t[e];delete i.metadata,r.push(i)}return r}return r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color instanceof THREE.Color&&(r.color=this.color.getHex()),.5!==this.roughness&&(r.roughness=this.roughness),.5!==this.metalness&&(r.metalness=this.metalness),this.emissive instanceof THREE.Color&&(r.emissive=this.emissive.getHex()),this.specular instanceof THREE.Color&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),this.map instanceof THREE.Texture&&(r.map=this.map.toJSON(t).uuid),this.alphaMap instanceof THREE.Texture&&(r.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap instanceof THREE.Texture&&(r.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap instanceof THREE.Texture&&(r.bumpMap=this.bumpMap.toJSON(t).uuid,r.bumpScale=this.bumpScale),this.normalMap instanceof THREE.Texture&&(r.normalMap=this.normalMap.toJSON(t).uuid,r.normalScale=this.normalScale.toArray()),this.displacementMap instanceof THREE.Texture&&(r.displacementMap=this.displacementMap.toJSON(t).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap instanceof THREE.Texture&&(r.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap instanceof THREE.Texture&&(r.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap instanceof THREE.Texture&&(r.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap instanceof THREE.Texture&&(r.specularMap=this.specularMap.toJSON(t).uuid),this.envMap instanceof THREE.Texture&&(r.envMap=this.envMap.toJSON(t).uuid,r.reflectivity=this.reflectivity),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),void 0!==this.vertexColors&&this.vertexColors!==THREE.NoColors&&(r.vertexColors=this.vertexColors),void 0!==this.shading&&this.shading!==THREE.SmoothShading&&(r.shading=this.shading),void 0!==this.blending&&this.blending!==THREE.NormalBlending&&(r.blending=this.blending),void 0!==this.side&&this.side!==THREE.FrontSide&&(r.side=this.side),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),0<this.alphaTest&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),1<this.wireframeLinewidth&&(r.wireframeLinewidth=this.wireframeLinewidth),e&&(e=i(t.textures),t=i(t.images),0<e.length&&(r.textures=e),0<t.length&&(r.images=t)),r},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.side=t.side,this.opacity=t.opacity,this.transparent=t.transparent,this.blending=t.blending,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.clipShadows=t.clipShadows;var e=t.clippingPlanes,r=null;if(null!==e)for(var i=e.length,r=new Array(i),n=0;n!==i;++n)r[n]=e[n].clone();return this.clippingPlanes=r,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(t){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.blending=THREE.NormalBlending,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.vertexColors=t.vertexColors,this.fog=t.fog,this},THREE.LineDashedMaterial=function(t){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.blending=THREE.NormalBlending,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this.vertexColors=t.vertexColors,this.fog=t.fog,this},THREE.MeshBasicMaterial=function(t){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.map=null,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(t)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.fog=t.fog,this.shading=t.shading,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},THREE.MeshDepthMaterial=function(t){THREE.Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=THREE.BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},THREE.MeshLambertMaterial=function(t){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.fog=t.fog,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},THREE.MeshNormalMaterial=function(t){THREE.Material.call(this,t),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(t)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},THREE.MeshPhongMaterial=function(t){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.specular=new THREE.Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.fog=t.fog,this.shading=t.shading,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},THREE.MeshStandardMaterial=function(t){THREE.Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new THREE.Color(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial,THREE.MeshStandardMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.fog=t.fog,this.shading=t.shading,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},THREE.MeshPhysicalMaterial=function(t){THREE.MeshStandardMaterial.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.setValues(t)},THREE.MeshPhysicalMaterial.prototype=Object.create(THREE.MeshStandardMaterial.prototype),THREE.MeshPhysicalMaterial.prototype.constructor=THREE.MeshPhysicalMaterial,THREE.MeshPhysicalMaterial.prototype.copy=function(t){return THREE.MeshStandardMaterial.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this},THREE.MultiMaterial=function(t){this.uuid=THREE.Math.generateUUID(),this.type="MultiMaterial",this.materials=t instanceof Array?t:[],this.visible=!0},THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(t){for(var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},r=this.materials,i=0,n=r.length;i<n;i++){var o=r[i].toJSON(t);delete o.metadata,e.materials.push(o)}return e.visible=this.visible,e},clone:function(){for(var t=new this.constructor,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone());return t.visible=this.visible,t}},THREE.PointsMaterial=function(t){THREE.Material.call(this),this.type="PointsMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.blending=THREE.NormalBlending,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial,THREE.PointsMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.vertexColors=t.vertexColors,this.fog=t.fog,this},THREE.ShaderMaterial=function(t){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},(this.index0AttributeName=void 0)!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=THREE.UniformsUtils.clone(t.uniforms),this.defines=t.defines,this.shading=t.shading,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},THREE.ShaderMaterial.prototype.toJSON=function(t){t=THREE.Material.prototype.toJSON.call(this,t);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},THREE.RawShaderMaterial=function(t){THREE.ShaderMaterial.call(this,t),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.SpriteMaterial=function(t){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(t)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this.fog=t.fog,this},THREE.Texture=function(t,e,r,i,n,o,a,s,c,h){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.sourceFile="",this.image=void 0!==t?t:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==c?c:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==h?h:THREE.LinearEncoding,this.version=0,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(t){!0===t&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){if(void 0!==t.textures[this.uuid])return t.textures[this.uuid];var e,r,i,n={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};return void 0!==this.image&&(void 0===(e=this.image).uuid&&(e.uuid=THREE.Math.generateUUID()),void 0===t.images[e.uuid]&&(t.images[e.uuid]={uuid:e.uuid,url:(void 0!==(r=e).toDataURL?i=r:((i=document.createElement("canvas")).width=r.width,i.height=r.height,i.getContext("2d").drawImage(r,0,0,r.width,r.height)),2048<i.width||2048<i.height?i.toDataURL("image/jpeg",.6):i.toDataURL("image/png"))}),n.image=e.uuid),t.textures[this.uuid]=n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping===THREE.UVMapping){if(t.multiply(this.repeat),t.add(this.offset),t.x<0||1<t.x)switch(this.wrapS){case THREE.RepeatWrapping:t.x=t.x-Math.floor(t.x);break;case THREE.ClampToEdgeWrapping:t.x=t.x<0?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||1<t.y)switch(this.wrapT){case THREE.RepeatWrapping:t.y=t.y-Math.floor(t.y);break;case THREE.ClampToEdgeWrapping:t.y=t.y<0?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.DepthTexture=function(t,e,r,i,n,o,a,s,c){THREE.Texture.call(this,null,i,n,o,a,s,THREE.DepthFormat,r,c),this.image={width:t,height:e},this.type=void 0!==r?r:THREE.UnsignedShortType,this.magFilter=void 0!==a?a:THREE.NearestFilter,this.minFilter=void 0!==s?s:THREE.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},THREE.DepthTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DepthTexture.prototype.constructor=THREE.DepthTexture,THREE.CanvasTexture=function(t,e,r,i,n,o,a,s,c){THREE.Texture.call(this,t,e,r,i,n,o,a,s,c),this.needsUpdate=!0},THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture,THREE.CubeTexture=function(t,e,r,i,n,o,a,s,c,h){e=void 0!==e?e:THREE.CubeReflectionMapping,THREE.Texture.call(this,t=void 0!==t?t:[],e,r,i,n,o,a,s,c,h),this.flipY=!1},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,Object.defineProperty(THREE.CubeTexture.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),THREE.CompressedTexture=function(t,e,r,i,n,o,a,s,c,h,l,u){THREE.Texture.call(this,null,o,a,s,c,h,i,n,l,u),this.image={width:e,height:r},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.DataTexture=function(t,e,r,i,n,o,a,s,c,h,l,u){THREE.Texture.call(this,null,o,a,s,c,h,i,n,l,u),this.image={data:t,width:e,height:r},this.magFilter=void 0!==c?c:THREE.NearestFilter,this.minFilter=void 0!==h?h:THREE.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.VideoTexture=function(e,t,r,i,n,o,a,s,c){THREE.Texture.call(this,e,t,r,i,n,o,a,s,c),this.generateMipmaps=!1;var h=this;!function t(){requestAnimationFrame(t),e.readyState>=e.HAVE_CURRENT_DATA&&(h.needsUpdate=!0)}()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.Points=function(t,e){THREE.Object3D.call(this),this.type="Points",this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.PointsMaterial({color:16777215*Math.random()})},THREE.Points.prototype=Object.create(THREE.Object3D.prototype),THREE.Points.prototype.constructor=THREE.Points,THREE.Points.prototype.raycast=function(){var m=new THREE.Matrix4,g=new THREE.Ray,T=new THREE.Sphere;return function(n,o){var a=this,t=this.geometry,s=this.matrixWorld,e=n.params.Points.threshold;if(null===t.boundingSphere&&t.computeBoundingSphere(),T.copy(t.boundingSphere),T.applyMatrix4(s),!1!==n.ray.intersectsSphere(T)){m.getInverse(s),g.copy(n.ray).applyMatrix4(m);var e=e/((this.scale.x+this.scale.y+this.scale.z)/3),c=e*e,r=new THREE.Vector3;if(t instanceof THREE.BufferGeometry){var e=t.index,i=t.attributes.position.array;if(null!==e)for(var h=e.array,l=0,u=h.length;l<u;l++){var p=h[l];r.fromArray(i,3*p),f(r,p)}else for(var l=0,d=i.length/3;l<d;l++)r.fromArray(i,3*l),f(r,l)}else for(var E=t.vertices,l=0,d=E.length;l<d;l++)f(E[l],l)}function f(t,e){var r,i=g.distanceSqToPoint(t);i<c&&((r=g.closestPointToPoint(t)).applyMatrix4(s),(t=n.ray.origin.distanceTo(r))<n.near||t>n.far||o.push({distance:t,distanceToRay:Math.sqrt(i),point:r.clone(),index:e,face:null,object:a}))}}}(),THREE.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.Line=function(t,e,r){if(1===r)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new THREE.LineSegments(t,e);THREE.Object3D.call(this),this.type="Line",this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.LineBasicMaterial({color:16777215*Math.random()})},THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var v=new THREE.Matrix4,y=new THREE.Ray,R=new THREE.Sphere;return function(t,e){var r=t.linePrecision,i=r*r,n=this.geometry,r=this.matrixWorld;if(null===n.boundingSphere&&n.computeBoundingSphere(),R.copy(n.boundingSphere),R.applyMatrix4(r),!1!==t.ray.intersectsSphere(R)){v.getInverse(r),y.copy(t.ray).applyMatrix4(v);var o=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Vector3,c=new THREE.Vector3,h=this instanceof THREE.LineSegments?2:1;if(n instanceof THREE.BufferGeometry){var r=n.index,l=n.attributes.position.array;if(null!==r)for(var u=r.array,p=0,d=u.length-1;p<d;p+=h){var E=u[p],f=u[p+1];o.fromArray(l,3*E),a.fromArray(l,3*f),i<y.distanceSqToSegment(o,a,c,s)||(c.applyMatrix4(this.matrixWorld),(m=t.ray.origin.distanceTo(c))<t.near||m>t.far||e.push({distance:m,point:s.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this}))}else for(p=0,d=l.length/3-1;p<d;p+=h)o.fromArray(l,3*p),a.fromArray(l,3*p+3),i<y.distanceSqToSegment(o,a,c,s)||(c.applyMatrix4(this.matrixWorld),(m=t.ray.origin.distanceTo(c))<t.near||m>t.far||e.push({distance:m,point:s.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this}))}else if(n instanceof THREE.Geometry)for(var m,g=n.vertices,T=g.length,p=0;p<T-1;p+=h)i<y.distanceSqToSegment(g[p],g[p+1],c,s)||(c.applyMatrix4(this.matrixWorld),(m=t.ray.origin.distanceTo(c))<t.near||m>t.far||e.push({distance:m,point:s.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this}))}}}(),THREE.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.LineStrip=0,THREE.LinePieces=1,THREE.LineSegments=function(t,e){THREE.Line.call(this,t,e),this.type="LineSegments"},THREE.LineSegments.prototype=Object.create(THREE.Line.prototype),THREE.LineSegments.prototype.constructor=THREE.LineSegments,THREE.Mesh=function(t,e){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.drawMode=THREE.TrianglesDrawMode,this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.setDrawMode=function(t){this.drawMode=t},THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,e=this.geometry.morphTargets.length;t<e;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[t].name]=t}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(t){return void 0!==this.morphTargetDictionary[t]?this.morphTargetDictionary[t]:(console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+t+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var P=new THREE.Matrix4,B=new THREE.Ray,D=new THREE.Sphere,I=new THREE.Vector3,U=new THREE.Vector3,F=new THREE.Vector3,N=new THREE.Vector3,V=new THREE.Vector3,G=new THREE.Vector3,O=new THREE.Vector2,z=new THREE.Vector2,k=new THREE.Vector2,s=new THREE.Vector3,W=new THREE.Vector3,c=new THREE.Vector3;function j(t,e,r,i,n,o,a){return THREE.Triangle.barycoordFromPoint(t,e,r,i,s),n.multiplyScalar(s.x),o.multiplyScalar(s.y),a.multiplyScalar(s.z),n.add(o).add(a),n.clone()}function X(t,e,r,i,n,o,a){var s=t.material,s=s.side===THREE.BackSide?r.intersectTriangle(o,n,i,!0,a):r.intersectTriangle(i,n,o,s.side!==THREE.DoubleSide,a);if(null===s)return null;c.copy(a),c.applyMatrix4(t.matrixWorld);a=e.ray.origin.distanceTo(c);return a<e.near||a>e.far?null:{distance:a,point:c.clone(),object:t}}function q(t,e,r,i,n,o,a,s){I.fromArray(i,3*o),U.fromArray(i,3*a),F.fromArray(i,3*s);r=X(t,e,r,I,U,F,W);return r&&(n&&(O.fromArray(n,2*o),z.fromArray(n,2*a),k.fromArray(n,2*s),r.uv=j(W,I,U,F,O,z,k)),r.face=new THREE.Face3(o,a,s,THREE.Triangle.normal(I,U,F)),r.faceIndex=o),r}return function(t,e){var r,i=this.geometry,n=this.material,o=this.matrixWorld;if(void 0!==n&&(null===i.boundingSphere&&i.computeBoundingSphere(),D.copy(i.boundingSphere),D.applyMatrix4(o),!1!==t.ray.intersectsSphere(D)&&(P.getInverse(o),B.copy(t.ray).applyMatrix4(P),null===i.boundingBox||!1!==B.intersectsBox(i.boundingBox))))if(i instanceof THREE.BufferGeometry){var a,s,c,h=i.index,o=i.attributes,l=o.position.array;if(void 0!==o.uv&&(r=o.uv.array),null!==h)for(var u=h.array,p=0,d=u.length;p<d;p+=3)a=u[p],s=u[p+1],c=u[p+2],(x=q(this,t,B,l,r,a,s,c))&&(x.faceIndex=Math.floor(p/3),e.push(x));else for(p=0,d=l.length;p<d;p+=9)(x=q(this,t,B,l,r,a=p/3,s=a+1,c=a+2))&&(x.index=a,e.push(x))}else if(i instanceof THREE.Geometry){var E,f,m,g=n instanceof THREE.MultiMaterial,T=!0==g?n.materials:null,v=i.vertices,y=i.faces,h=i.faceVertexUvs[0];0<h.length&&(r=h);for(var R=0,H=y.length;R<H;R++){var x,_=y[R],b=!0==g?T[_.materialIndex]:n;if(void 0!==b){if(E=v[_.a],f=v[_.b],m=v[_.c],!0===b.morphTargets){var M=i.morphTargets,w=this.morphTargetInfluences;I.set(0,0,0),U.set(0,0,0),F.set(0,0,0);for(var S=0,L=M.length;S<L;S++){var A,C=w[S];0!==C&&(A=M[S].vertices,I.addScaledVector(N.subVectors(A[_.a],E),C),U.addScaledVector(V.subVectors(A[_.b],f),C),F.addScaledVector(G.subVectors(A[_.c],m),C))}I.add(E),U.add(f),F.add(m),E=I,f=U,m=F}(x=X(this,t,B,E,f,m,W))&&(r&&(b=r[R],O.copy(b[0]),z.copy(b[1]),k.copy(b[2]),x.uv=j(W,E,f,m,O,z,k)),x.face=_,x.faceIndex=R,e.push(x))}}}}}(),THREE.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.Bone=function(t){THREE.Object3D.call(this),this.type="Bone",this.skin=t},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.copy=function(t){return THREE.Object3D.prototype.copy.call(this,t),this.skin=t.skin,this},THREE.Skeleton=function(t,e,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,this.bones=(t=t||[]).slice(0),this.useVertexTexture?(t=Math.sqrt(4*this.bones.length),t=THREE.Math.nextPowerOfTwo(Math.ceil(t)),t=Math.max(t,4),this.boneTextureWidth=t,this.boneTextureHeight=t,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new THREE.Matrix4)}},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var r=new THREE.Matrix4;this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var t,e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&(t.parent?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},THREE.Skeleton.prototype.update=function(){var i=new THREE.Matrix4;return function(){for(var t=0,e=this.bones.length;t<e;t++){var r=this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix;i.multiplyMatrices(r,this.boneInverses[t]),i.toArray(this.boneMatrices,16*t)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)},THREE.SkinnedMesh=function(t,e,r){THREE.Mesh.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4;var i=[];if(this.geometry&&void 0!==this.geometry.bones){for(var n,o,a=0,s=this.geometry.bones.length;a<s;++a)o=this.geometry.bones[a],n=new THREE.Bone(this),i.push(n),n.name=o.name,n.position.fromArray(o.pos),n.quaternion.fromArray(o.rotq),void 0!==o.scl&&n.scale.fromArray(o.scl);for(a=0,s=this.geometry.bones.length;a<s;++a)(-1!==(o=this.geometry.bones[a]).parent&&null!==o.parent&&void 0!==i[o.parent]?i[o.parent]:this).add(i[a])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(i,void 0,r),this.matrixWorld)},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.bind=function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var t=0;t<this.geometry.skinWeights.length;t++){var e=this.geometry.skinWeights[t];(r=1/e.lengthManhattan())!==1/0?e.multiplyScalar(r):e.set(1,0,0,0)}else if(this.geometry instanceof THREE.BufferGeometry)for(var r,i=new THREE.Vector4,n=this.geometry.attributes.skinWeight,t=0;t<n.count;t++)i.x=n.getX(t),i.y=n.getY(t),i.z=n.getZ(t),i.w=n.getW(t),(r=1/i.lengthManhattan())!==1/0?i.multiplyScalar(r):i.set(1,0,0,0),n.setXYZW(t,i.x,i.y,i.z,i.w)},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(t){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)},THREE.LOD=function(){THREE.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.addLevel=function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var r=this.levels,i=0;i<r.length&&!(e<r[i].distance);i++);r.splice(i,0,{distance:e,object:t}),this.add(t)},THREE.LOD.prototype.getObjectForDistance=function(t){for(var e=this.levels,r=1,i=e.length;r<i&&!(t<e[r].distance);r++);return e[r-1].object},THREE.LOD.prototype.raycast=function(){var i=new THREE.Vector3;return function(t,e){i.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(i);this.getObjectForDistance(r).raycast(t,e)}}(),THREE.LOD.prototype.update=function(){var o=new THREE.Vector3,a=new THREE.Vector3;return function(t){var e=this.levels;if(1<e.length){o.setFromMatrixPosition(t.matrixWorld),a.setFromMatrixPosition(this.matrixWorld);var r=o.distanceTo(a);e[0].object.visible=!0;for(var i=1,n=e.length;i<n&&r>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(;i<n;i++)e[i].object.visible=!1}}}(),THREE.LOD.prototype.copy=function(t){THREE.Object3D.prototype.copy.call(this,t,!1);for(var e=t.levels,r=0,i=e.length;r<i;r++){var n=e[r];this.addLevel(n.object.clone(),n.distance)}return this},THREE.LOD.prototype.toJSON=function(t){var e=THREE.Object3D.prototype.toJSON.call(this,t);e.object.levels=[];for(var r=this.levels,i=0,n=r.length;i<n;i++){var o=r[i];e.object.levels.push({object:o.object.uuid,distance:o.distance})}return e},THREE.Sprite=function(){var t=new Uint16Array([0,1,2,0,2,3]),e=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),i=new THREE.BufferGeometry;return i.setIndex(new THREE.BufferAttribute(t,1)),i.addAttribute("position",new THREE.BufferAttribute(e,3)),i.addAttribute("uv",new THREE.BufferAttribute(r,2)),function(t){THREE.Object3D.call(this),this.type="Sprite",this.geometry=i,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var r=new THREE.Vector3;return function(t,e){r.setFromMatrixPosition(this.matrixWorld);t=t.ray.distanceSqToPoint(r);this.scale.x*this.scale.y/4<t||e.push({distance:Math.sqrt(t),point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)},THREE.Particle=THREE.Sprite,THREE.LensFlare=function(t,e,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,(this.customUpdateCallback=void 0)!==t&&this.add(t,e,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.add=function(t,e,r,i,n,o){void 0===e&&(e=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:t,size:e,distance:r,x:0,y:0,z:0,scale:1,rotation:0,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){for(var t,e=this.lensFlares.length,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y,n=0;n<e;n++)(t=this.lensFlares[n]).x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+i*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.LensFlare.prototype.copy=function(t){THREE.Object3D.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,r=t.lensFlares.length;e<r;e++)this.lensFlares.push(t.lensFlares[e]);return this},THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.copy=function(t,e){return THREE.Object3D.prototype.copy.call(this,t,e),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},THREE.Fog=function(t,e,r){this.name="",this.color=new THREE.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(t,e){this.name="",this.color=new THREE.Color(t),this.density=void 0!==e?e:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",THREE.ShaderChunk.bsdfs="bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",THREE.ShaderChunk.clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n#endif\n",THREE.ShaderChunk.clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",THREE.ShaderChunk.clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",THREE.ShaderChunk.clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",THREE.ShaderChunk.common="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",THREE.ShaderChunk.cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\nconst float cubeUV_textureSize = 1024.0;\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\nfloat cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\nfloat cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\nfloat cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\nfloat cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",THREE.ShaderChunk.encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",THREE.ShaderChunk.encodings_fragment="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",THREE.ShaderChunk.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",THREE.ShaderChunk.envmap_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",THREE.ShaderChunk.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",THREE.ShaderChunk.lights_pars="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",THREE.ShaderChunk.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",THREE.ShaderChunk.lights_phong_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",THREE.ShaderChunk.lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#endif\n",THREE.ShaderChunk.lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t#endif\n};\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",THREE.ShaderChunk.lights_template="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n#endif\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",THREE.ShaderChunk.metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n",THREE.ShaderChunk.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",THREE.ShaderChunk.normal_fragment="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",THREE.ShaderChunk.packing="vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nvec4 packDepthToRGBA( const in float value ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( value * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nfloat unpackRGBAToDepth( const in vec4 rgba ) {\n\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\treturn dot( rgba, bitSh );\n}\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",THREE.ShaderChunk.premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n",THREE.ShaderChunk.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",THREE.ShaderChunk.shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",THREE.ShaderChunk.tonemapping_fragment="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",THREE.ShaderChunk.tonemapping_pars_fragment="#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",THREE.UniformsUtils={merge:function(t){for(var e={},r=0;r<t.length;r++){var i,n=this.clone(t[r]);for(i in n)e[i]=n[i]}return e},clone:function(t){var e,r={};for(e in t)for(var i in r[e]={},t[e]){var n=t[e][i];n instanceof THREE.Color||n instanceof THREE.Vector2||n instanceof THREE.Vector3||n instanceof THREE.Vector4||n instanceof THREE.Matrix3||n instanceof THREE.Matrix4||n instanceof THREE.Texture?r[e][i]=n.clone():Array.isArray(n)?r[e][i]=n.slice():r[e][i]=n}return r}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"1f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"1f",value:-1},reflectivity:{type:"1f",value:1},refractionRatio:{type:"1f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"1f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"1f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"1f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"1f",value:1},displacementBias:{type:"1f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"1f",value:25e-5},fogNear:{type:"1f",value:1},fogFar:{type:"1f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"3fv",value:[]},directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},directionalShadowMap:{type:"tv",value:[]},directionalShadowMatrix:{type:"m4v",value:[]},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"1f"},coneCos:{type:"1f"},penumbraCos:{type:"1f"},decay:{type:"1f"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},spotShadowMap:{type:"tv",value:[]},spotShadowMatrix:{type:"m4v",value:[]},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"1f"},distance:{type:"1f"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},pointShadowMap:{type:"tv",value:[]},pointShadowMatrix:{type:"m4v",value:[]},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}}},points:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"1f",value:1},size:{type:"1f",value:1},scale:{type:"1f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}}},THREE.ShaderChunk.cube_frag="uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\t#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.cube_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.depth_frag="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",THREE.ShaderChunk.depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.distanceRGBA_frag="uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",THREE.ShaderChunk.distanceRGBA_vert="varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n",THREE.ShaderChunk.equirect_frag="uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.equirect_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",THREE.ShaderChunk.linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n}\n",THREE.ShaderChunk.meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshphysical_frag="#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshphysical_vert="#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.normal_frag="uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n\t#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.normal_vert="varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvNormal = normalize( normalMatrix * normal );\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",THREE.ShaderChunk.points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.meshbasic_vert,fragmentShader:THREE.ShaderChunk.meshbasic_frag},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:THREE.ShaderChunk.meshlambert_vert,fragmentShader:THREE.ShaderChunk.meshlambert_frag},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"1f",value:30}}]),vertexShader:THREE.ShaderChunk.meshphong_vert,fragmentShader:THREE.ShaderChunk.meshphong_frag},standard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.roughnessmap,THREE.UniformsLib.metalnessmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)},roughness:{type:"1f",value:.5},metalness:{type:"1f",value:0},envMapIntensity:{type:"1f",value:1}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.points_vert,fragmentShader:THREE.ShaderChunk.points_frag},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"1f",value:1},dashSize:{type:"1f",value:1},totalSize:{type:"1f",value:2}}]),vertexShader:THREE.ShaderChunk.linedashed_vert,fragmentShader:THREE.ShaderChunk.linedashed_frag},depth:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.displacementmap]),vertexShader:THREE.ShaderChunk.depth_vert,fragmentShader:THREE.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{type:"1f",value:1}},vertexShader:THREE.ShaderChunk.normal_vert,fragmentShader:THREE.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"1f",value:-1}},vertexShader:THREE.ShaderChunk.cube_vert,fragmentShader:THREE.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"1f",value:-1}},vertexShader:THREE.ShaderChunk.equirect_vert,fragmentShader:THREE.ShaderChunk.equirect_frag},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3}},vertexShader:THREE.ShaderChunk.distanceRGBA_vert,fragmentShader:THREE.ShaderChunk.distanceRGBA_frag}},THREE.ShaderLib.physical={uniforms:THREE.UniformsUtils.merge([THREE.ShaderLib.standard.uniforms,{}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag},THREE.WebGLRenderer=function(t){console.log("THREE.WebGLRenderer",THREE.REVISION);var E=void 0!==(t=t||{}).canvas?t.canvas:document.createElement("canvas"),e=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,i=void 0===t.depth||t.depth,n=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,s=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,p=[],c=[],h=-1,l=[],u=-1,g=new Float32Array(8),d=[],f=[];this.domElement=E,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=THREE.LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var m=this,T=null,v=null,y=null,R=-1,H="",x=null,_=new THREE.Vector4,b=null,M=new THREE.Vector4,w=0,S=new THREE.Color(0),L=0,A=E.width,C=E.height,P=1,B=new THREE.Vector4(0,0,A,C),D=!1,I=new THREE.Vector4(0,0,A,C),U=new THREE.Frustum,F=!1,N=!1,V=!1,G=0,O={type:"4fv",value:null,needsUpdate:!1},z=null,k=0,W=new THREE.Matrix3,j=new THREE.Sphere,X=new THREE.Plane,q=new THREE.Matrix4,Y=new THREE.Vector3,Z={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},K={geometries:0,textures:0},Q={calls:0,vertices:0,faces:0,points:0};this.info={render:Q,memory:K,programs:null};try{var J,$={alpha:r,depth:i,stencil:n,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:s};if(null===(J=e||E.getContext("webgl",$)||E.getContext("experimental-webgl",$)))throw null!==E.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";void 0===J.getShaderPrecisionFormat&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),E.addEventListener("webglcontextlost",Tt,!1)}catch(t){console.error("THREE.WebGLRenderer: "+t)}var tt="undefined"!=typeof WebGL2RenderingContext&&J instanceof WebGL2RenderingContext,et=new THREE.WebGLExtensions(J);et.get("WEBGL_depth_texture"),et.get("OES_texture_float"),et.get("OES_texture_float_linear"),et.get("OES_texture_half_float"),et.get("OES_texture_half_float_linear"),et.get("OES_standard_derivatives"),et.get("ANGLE_instanced_arrays"),et.get("OES_element_index_uint")&&(THREE.BufferGeometry.MaxIndex=4294967296);var rt=new THREE.WebGLCapabilities(J,et,t),it=new THREE.WebGLState(J,et,jt),nt=new THREE.WebGLProperties,ot=new THREE.WebGLObjects(J,nt,this.info),at=new THREE.WebGLPrograms(this,rt),st=new THREE.WebGLLights;this.info.programs=at.programs;var ct=new THREE.WebGLBufferRenderer(J,et,Q),ht=new THREE.WebGLIndexedBufferRenderer(J,et,Q);function lt(){return null===v?P:1}function ut(t,e,r,i){!0===a&&(t*=i,e*=i,r*=i),it.clearColor(t,e,r,i)}function pt(){it.init(),it.scissor(_.copy(B).multiplyScalar(P)),it.viewport(M.copy(I).multiplyScalar(P)),ut(S.r,S.g,S.b,L)}function dt(){x=T=null,H="",R=-1,it.reset()}pt(),this.context=J,this.capabilities=rt,this.extensions=et,this.properties=nt,this.state=it;var Et=new THREE.WebGLShadowMap(this,Z,ot);this.shadowMap=Et;var ft,mt=new THREE.SpritePlugin(this,d),gt=new THREE.LensFlarePlugin(this,f);function Tt(t){t.preventDefault(),dt(),pt(),nt.clear()}function vt(t){t=t.target;t.removeEventListener("dispose",vt),function(t){var e=nt.get(t);if(t.image&&e.__image__webglTextureCube)J.deleteTexture(e.__image__webglTextureCube);else{if(void 0===e.__webglInit)return;J.deleteTexture(e.__webglTexture)}nt.delete(t)}(t),K.textures--}function yt(t){t=t.target;t.removeEventListener("dispose",yt),function(t){var e=nt.get(t),r=nt.get(t.texture);if(t){if(void 0!==r.__webglTexture&&J.deleteTexture(r.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t instanceof THREE.WebGLRenderTargetCube)for(var i=0;i<6;i++)J.deleteFramebuffer(e.__webglFramebuffer[i]),e.__webglDepthbuffer&&J.deleteRenderbuffer(e.__webglDepthbuffer[i]);else J.deleteFramebuffer(e.__webglFramebuffer),e.__webglDepthbuffer&&J.deleteRenderbuffer(e.__webglDepthbuffer);nt.delete(t.texture),nt.delete(t)}}(t),K.textures--}function Rt(t){var t=t.target;t.removeEventListener("dispose",Rt),Ht(t=t),nt.delete(t)}function Ht(t){var e=nt.get(t).program;(t.program=void 0)!==e&&at.releaseProgram(e)}function xt(t,e){return Math.abs(e[0])-Math.abs(t[0])}function _t(t,e){return t.object.renderOrder!==e.object.renderOrder?t.object.renderOrder-e.object.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function bt(t,e){return t.object.renderOrder!==e.object.renderOrder?t.object.renderOrder-e.object.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Mt(t,e,r,i,n){var o,a=r.transparent?(o=l,++u):(o=c,++h),a=o[a];void 0!==a?(a.id=t.id,a.object=t,a.geometry=e,a.material=r,a.z=Y.z,a.group=n):(a={id:t.id,object:t,geometry:e,material:r,z:Y.z,group:n},o.push(a))}function wt(t){var e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere();t=j.copy(e.boundingSphere).applyMatrix4(t.matrixWorld);if(!U.intersectsSphere(t))return!1;if(0===G)return!0;var r=m.clippingPlanes,i=t.center,n=-t.radius,o=0;do{if(r[o].distanceToPoint(i)<n)return!1}while(++o!==G);return!0}function St(t,e,r,i){for(var n=0,o=t.length;n<o;n++){var a,s=t[n],c=s.object,h=s.geometry,l=void 0===i?s.material:i,s=s.group;c.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,c.matrixWorld),c.normalMatrix.getNormalMatrix(c.modelViewMatrix),c instanceof THREE.ImmediateRenderObject?(Lt(l),a=At(e,r,l,c),H="",c.render(function(t){m.renderBufferImmediate(t,a,l)})):m.renderBufferDirect(e,r,h,l,c,s)}}function Lt(t){var e;(e=t).side!==THREE.DoubleSide?it.enable(J.CULL_FACE):it.disable(J.CULL_FACE),it.setFlipSided(e.side===THREE.BackSide),!0===t.transparent?it.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):it.setBlending(THREE.NoBlending),it.setDepthFunc(t.depthFunc),it.setDepthTest(t.depthTest),it.setDepthWrite(t.depthWrite),it.setColorWrite(t.colorWrite),it.setPolygonOffset(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function At(t,e,r,i){w=0;var n=nt.get(r);F&&(!N&&t===x||(d=t===x&&r.id===R,function(t,e,r,i,n){if(!N||null===t||0===t.length||V&&!e)V?Bt(null):Dt();else{var e=V?0:k,o=4*e,a=i.clippingState||null;O.value=a,a=Bt(t,r,o,n);for(var s=0;s!==o;++s)a[s]=z[s];i.clippingState=a,G+=e}}(r.clippingPlanes,r.clipShadows,t,n,d)),void 0!==n.numClippingPlanes&&n.numClippingPlanes!==G&&(r.needsUpdate=!0)),void 0===n.program&&(r.needsUpdate=!0),void 0!==n.lightsHash&&n.lightsHash!==Z.hash&&(r.needsUpdate=!0),r.needsUpdate&&(function(t,e,r){var i=nt.get(t),n=at.getParameters(t,Z,e,G,r),o=at.getProgramCode(t,n),e=i.program,r=!0;if(void 0===e)t.addEventListener("dispose",Rt);else if(e.code!==o)Ht(t);else{if(void 0!==n.shaderID)return;r=!1}r&&(n.shaderID?(r=THREE.ShaderLib[n.shaderID],i.__webglShader={name:t.type,uniforms:THREE.UniformsUtils.clone(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader}):i.__webglShader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader},t.__webglShader=i.__webglShader,e=at.acquireProgram(t,n,o),i.program=e,t.program=e);var a=e.getAttributes();if(t.morphTargets)for(var s=t.numSupportedMorphTargets=0;s<m.maxMorphTargets;s++)0<=a["morphTarget"+s]&&t.numSupportedMorphTargets++;if(t.morphNormals)for(s=t.numSupportedMorphNormals=0;s<m.maxMorphNormals;s++)0<=a["morphNormal"+s]&&t.numSupportedMorphNormals++;o=i.__webglShader.uniforms,(t instanceof THREE.ShaderMaterial||t instanceof THREE.RawShaderMaterial)&&!0!==t.clipping||(i.numClippingPlanes=G,o.clippingPlanes=O),(t instanceof THREE.MeshPhongMaterial||t instanceof THREE.MeshLambertMaterial||t instanceof THREE.MeshStandardMaterial||t.lights)&&(i.lightsHash=Z.hash,o.ambientLightColor.value=Z.ambient,o.directionalLights.value=Z.directional,o.spotLights.value=Z.spot,o.pointLights.value=Z.point,o.hemisphereLights.value=Z.hemi,o.directionalShadowMap.value=Z.directionalShadowMap,o.directionalShadowMatrix.value=Z.directionalShadowMatrix,o.spotShadowMap.value=Z.spotShadowMap,o.spotShadowMatrix.value=Z.spotShadowMatrix,o.pointShadowMap.value=Z.pointShadowMap,o.pointShadowMatrix.value=Z.pointShadowMatrix),e=i.program.getUniforms(),e=THREE.WebGLUniforms.seqWithValue(e.seq,o),i.uniformsList=e,i.dynamicUniforms=THREE.WebGLUniforms.splitDynamic(e,o)}(r,e,i),r.needsUpdate=!1);var o,a,s,c=!1,h=!1,l=!1,u=n.program,p=u.getUniforms(),d=n.__webglShader.uniforms;u.id!==T&&(J.useProgram(u.program),T=u.id,l=h=c=!0),r.id!==R&&(R=r.id,h=!0),!c&&t===x||(p.set(J,t,"projectionMatrix"),rt.logarithmicDepthBuffer&&p.setValue(J,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),t!==x&&(x=t,l=h=!0),!(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshStandardMaterial||r.envMap)||void 0!==(o=p.map.cameraPosition)&&o.setValue(J,Y.setFromMatrixPosition(t.matrixWorld)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshStandardMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&p.setValue(J,"viewMatrix",t.matrixWorldInverse),p.set(J,m,"toneMappingExposure"),p.set(J,m,"toneMappingWhitePoint")),r.skinning&&(p.setOptional(J,i,"bindMatrix"),p.setOptional(J,i,"bindMatrixInverse"),(o=i.skeleton)&&(rt.floatVertexTextures&&o.useVertexTexture?(p.set(J,o,"boneTexture"),p.set(J,o,"boneTextureWidth"),p.set(J,o,"boneTextureHeight")):p.setOptional(J,o,"boneMatrices"))),h&&((r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshStandardMaterial||r.lights)&&(h=l,(l=d).ambientLightColor.needsUpdate=h,l.directionalLights.needsUpdate=h,l.pointLights.needsUpdate=h,l.spotLights.needsUpdate=h,l.hemisphereLights.needsUpdate=h),e&&r.fog&&(s=e,(a=d).fogColor.value=s.color,s instanceof THREE.Fog?(a.fogNear.value=s.near,a.fogFar.value=s.far):s instanceof THREE.FogExp2&&(a.fogDensity.value=s.density)),(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshStandardMaterial||r instanceof THREE.MeshDepthMaterial)&&function(t,e){t.opacity.value=e.opacity,t.diffuse.value=e.color,e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity);t.map.value=e.map,t.specularMap.value=e.specularMap,t.alphaMap.value=e.alphaMap,e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity);e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap);{var r,i;void 0!==i&&(r=(i=i instanceof THREE.WebGLRenderTarget?i.texture:i).offset,i=i.repeat,t.offsetRepeat.value.set(r.x,r.y,i.x,i.y))}t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio}(d,r),r instanceof THREE.LineBasicMaterial?Ct(d,r):r instanceof THREE.LineDashedMaterial?(Ct(d,r),a=r,(s=d).dashSize.value=a.dashSize,s.totalSize.value=a.dashSize+a.gapSize,s.scale.value=a.scale):r instanceof THREE.PointsMaterial?function(t,e){{var r;t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*P,t.scale.value=.5*E.clientHeight,t.map.value=e.map,null!==e.map&&(r=e.map.offset,e=e.map.repeat,t.offsetRepeat.value.set(r.x,r.y,e.x,e.y))}}(d,r):r instanceof THREE.MeshLambertMaterial?function(t,e){e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(d,r):r instanceof THREE.MeshPhongMaterial?function(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale);e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(d,r):r instanceof THREE.MeshPhysicalMaterial||r instanceof THREE.MeshStandardMaterial?Pt(d,r):r instanceof THREE.MeshDepthMaterial?r.displacementMap&&(d.displacementMap.value=r.displacementMap,d.displacementScale.value=r.displacementScale,d.displacementBias.value=r.displacementBias):r instanceof THREE.MeshNormalMaterial&&(d.opacity.value=r.opacity),THREE.WebGLUniforms.upload(J,n.uniformsList,d,m)),p.set(J,i,"modelViewMatrix"),p.set(J,i,"normalMatrix"),p.setValue(J,"modelMatrix",i.matrixWorld);n=n.dynamicUniforms;return null!==n&&(THREE.WebGLUniforms.evalDynamic(n,d,i,t),THREE.WebGLUniforms.upload(J,n,d,m)),u}function Ct(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}function Pt(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}function Bt(t,e,r,i){var n=null!==t?t.length:0,o=null;if(0!==n){if(o=O.value,!0!==i||null===o){var i=r+4*n,a=e.matrixWorldInverse,s=W.getNormalMatrix(a);(null===o||o.length<i)&&(o=new Float32Array(i));for(var c=0,h=r;c!==n;++c,h+=4){var l=X.copy(t[c]).applyMatrix4(a,s);l.normal.toArray(o,h),o[h+3]=l.constant}}O.value=o,O.needsUpdate=!0}return G=n,o}function Dt(){O.value!==z&&(O.value=z,O.needsUpdate=0<k),G=k}function It(t,e,r){r?(J.texParameteri(t,J.TEXTURE_WRAP_S,jt(e.wrapS)),J.texParameteri(t,J.TEXTURE_WRAP_T,jt(e.wrapT)),J.texParameteri(t,J.TEXTURE_MAG_FILTER,jt(e.magFilter)),J.texParameteri(t,J.TEXTURE_MIN_FILTER,jt(e.minFilter))):(J.texParameteri(t,J.TEXTURE_WRAP_S,J.CLAMP_TO_EDGE),J.texParameteri(t,J.TEXTURE_WRAP_T,J.CLAMP_TO_EDGE),e.wrapS===THREE.ClampToEdgeWrapping&&e.wrapT===THREE.ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",e),J.texParameteri(t,J.TEXTURE_MAG_FILTER,Wt(e.magFilter)),J.texParameteri(t,J.TEXTURE_MIN_FILTER,Wt(e.minFilter)),e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",e)),(r=et.get("EXT_texture_filter_anisotropic"))&&(e.type===THREE.FloatType&&null===et.get("OES_texture_float_linear")||e.type===THREE.HalfFloatType&&null===et.get("OES_texture_half_float_linear")||(1<e.anisotropy||nt.get(e).__currentAnisotropy)&&(J.texParameterf(t,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,m.getMaxAnisotropy())),nt.get(e).__currentAnisotropy=e.anisotropy))}function Ut(t,e,r){void 0===t.__webglInit&&(t.__webglInit=!0,e.addEventListener("dispose",vt),t.__webglTexture=J.createTexture(),K.textures++),it.activeTexture(J.TEXTURE0+r),it.bindTexture(J.TEXTURE_2D,t.__webglTexture),J.pixelStorei(J.UNPACK_FLIP_Y_WEBGL,e.flipY),J.pixelStorei(J.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),J.pixelStorei(J.UNPACK_ALIGNMENT,e.unpackAlignment);var i=Nt(e.image,rt.maxTextureSize);((c=e).wrapS!==THREE.ClampToEdgeWrapping||c.wrapT!==THREE.ClampToEdgeWrapping||c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&!1===Vt(i)&&(i=function(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement){var e=document.createElement("canvas");return e.width=THREE.Math.nearestPowerOfTwo(t.width),e.height=THREE.Math.nearestPowerOfTwo(t.height),e.getContext("2d").drawImage(t,0,0,e.width,e.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}(i));var r=Vt(i),n=jt(e.format),o=jt(e.type);It(J.TEXTURE_2D,e,r);var a,s=e.mipmaps;if(e instanceof THREE.DepthTexture){var c=J.DEPTH_COMPONENT;if(e.type===THREE.FloatType){if(!tt)throw new Error("Float Depth Texture only supported in WebGL2.0");c=J.DEPTH_COMPONENT32F}else tt&&(c=J.DEPTH_COMPONENT16);it.texImage2D(J.TEXTURE_2D,0,c,i.width,i.height,0,n,o,null)}else if(e instanceof THREE.DataTexture)if(0<s.length&&r){for(var h=0,l=s.length;h<l;h++)a=s[h],it.texImage2D(J.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);e.generateMipmaps=!1}else it.texImage2D(J.TEXTURE_2D,0,n,i.width,i.height,0,n,o,i.data);else if(e instanceof THREE.CompressedTexture)for(h=0,l=s.length;h<l;h++)a=s[h],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?-1<it.getCompressedTextureFormats().indexOf(n)?it.compressedTexImage2D(J.TEXTURE_2D,h,n,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):it.texImage2D(J.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);else if(0<s.length&&r){for(h=0,l=s.length;h<l;h++)a=s[h],it.texImage2D(J.TEXTURE_2D,h,n,n,o,a);e.generateMipmaps=!1}else it.texImage2D(J.TEXTURE_2D,0,n,n,o,i);e.generateMipmaps&&r&&J.generateMipmap(J.TEXTURE_2D),t.__version=e.version,e.onUpdate&&e.onUpdate(e)}function Ft(t,e){t instanceof THREE.WebGLRenderTarget&&(t=t.texture);var r=nt.get(t);if(0<t.version&&r.__version!==t.version){var i=t.image;return void 0===i?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",t):!1===i.complete?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",t):void Ut(r,t,e)}it.activeTexture(J.TEXTURE0+e),it.bindTexture(J.TEXTURE_2D,r.__webglTexture)}function Nt(t,e){if(t.width>e||t.height>e){var r=e/Math.max(t.width,t.height),e=document.createElement("canvas");return e.width=Math.floor(t.width*r),e.height=Math.floor(t.height*r),e.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,e.width,e.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}function Vt(t){return THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height)}this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){et.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){if(void 0!==ft)return ft;var t=et.get("EXT_texture_filter_anisotropic");return ft=null!==t?J.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},this.getPrecision=function(){return rt.precision},this.getPixelRatio=function(){return P},this.setPixelRatio=function(t){void 0!==t&&(P=t,this.setSize(I.z,I.w,!1))},this.getSize=function(){return{width:A,height:C}},this.setSize=function(t,e,r){A=t,C=e,E.width=t*P,E.height=e*P,!1!==r&&(E.style.width=t+"px",E.style.height=e+"px"),this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){it.viewport(I.set(t,e,r,i))},this.setScissor=function(t,e,r,i){it.scissor(B.set(t,e,r,i))},this.setScissorTest=function(t){it.setScissorTest(D=t)},this.getClearColor=function(){return S},this.setClearColor=function(t,e){S.set(t),L=void 0!==e?e:1,ut(S.r,S.g,S.b,L)},this.getClearAlpha=function(){return L},this.setClearAlpha=function(t){L=t,ut(S.r,S.g,S.b,L)},this.clear=function(t,e,r){var i=0;void 0!==t&&!t||(i|=J.COLOR_BUFFER_BIT),void 0!==e&&!e||(i|=J.DEPTH_BUFFER_BIT),void 0!==r&&!r||(i|=J.STENCIL_BUFFER_BIT),J.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,r,i){this.setRenderTarget(t),this.clear(e,r,i)},this.resetGLState=dt,this.dispose=function(){E.removeEventListener("webglcontextlost",Tt,!1)},this.renderBufferImmediate=function(t,e,r){it.initAttributes();var i=nt.get(t);t.hasPositions&&!i.position&&(i.position=J.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=J.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=J.createBuffer()),t.hasColors&&!i.color&&(i.color=J.createBuffer());e=e.getAttributes();if(t.hasPositions&&(J.bindBuffer(J.ARRAY_BUFFER,i.position),J.bufferData(J.ARRAY_BUFFER,t.positionArray,J.DYNAMIC_DRAW),it.enableAttribute(e.position),J.vertexAttribPointer(e.position,3,J.FLOAT,!1,0,0)),t.hasNormals){if(J.bindBuffer(J.ARRAY_BUFFER,i.normal),"MeshPhongMaterial"!==r.type&&"MeshStandardMaterial"!==r.type&&"MeshPhysicalMaterial"!==r.type&&r.shading===THREE.FlatShading)for(var n=0,o=3*t.count;n<o;n+=9){var a=t.normalArray,s=(a[n+0]+a[n+3]+a[n+6])/3,c=(a[n+1]+a[n+4]+a[n+7])/3,h=(a[n+2]+a[n+5]+a[n+8])/3;a[n+0]=s,a[n+1]=c,a[n+2]=h,a[n+3]=s,a[n+4]=c,a[n+5]=h,a[n+6]=s,a[n+7]=c,a[n+8]=h}J.bufferData(J.ARRAY_BUFFER,t.normalArray,J.DYNAMIC_DRAW),it.enableAttribute(e.normal),J.vertexAttribPointer(e.normal,3,J.FLOAT,!1,0,0)}t.hasUvs&&r.map&&(J.bindBuffer(J.ARRAY_BUFFER,i.uv),J.bufferData(J.ARRAY_BUFFER,t.uvArray,J.DYNAMIC_DRAW),it.enableAttribute(e.uv),J.vertexAttribPointer(e.uv,2,J.FLOAT,!1,0,0)),t.hasColors&&r.vertexColors!==THREE.NoColors&&(J.bindBuffer(J.ARRAY_BUFFER,i.color),J.bufferData(J.ARRAY_BUFFER,t.colorArray,J.DYNAMIC_DRAW),it.enableAttribute(e.color),J.vertexAttribPointer(e.color,3,J.FLOAT,!1,0,0)),it.disableUnusedAttributes(),J.drawArrays(J.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,i,n,o){Lt(i);var a=At(t,e,i,n),s=!1,c=r.id+"_"+a.id+"_"+i.wireframe;c!==H&&(H=c,s=!0);var h=n.morphTargetInfluences;if(void 0!==h){for(var l=[],u=0,p=h.length;u<p;u++){var d=h[u];l.push([d,u])}l.sort(xt),8<l.length&&(l.length=8);for(var E=r.morphAttributes,u=0,p=l.length;u<p;u++){d=l[u];g[u]=d[0],0!==d[0]?(m=d[1],!0===i.morphTargets&&E.position&&r.addAttribute("morphTarget"+u,E.position[m]),!0===i.morphNormals&&E.normal&&r.addAttribute("morphNormal"+u,E.normal[m])):(!0===i.morphTargets&&r.removeAttribute("morphTarget"+u),!0===i.morphNormals&&r.removeAttribute("morphNormal"+u))}a.getUniforms().setValue(J,"morphTargetInfluences",g),s=!0}var f,m=r.index,t=r.attributes.position;null!==(m=!0===i.wireframe?ot.getWireframeAttribute(r):m)?(f=ht).setIndex(m):f=ct,s&&(function(t,e,r,i){var n;if(r instanceof THREE.InstancedBufferGeometry&&null===(n=et.get("ANGLE_instanced_arrays")))return console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===i&&(i=0);it.initAttributes();var o,a=r.attributes,s=e.getAttributes(),c=t.defaultAttributeValues;for(o in s){var h=s[o];if(0<=h){var l=a[o];if(void 0!==l){var u=J.FLOAT,p=l.array,d=l.normalized;p instanceof Float32Array?u=J.FLOAT:p instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array"):p instanceof Uint16Array?u=J.UNSIGNED_SHORT:p instanceof Int16Array?u=J.SHORT:p instanceof Uint32Array?u=J.UNSIGNED_INT:p instanceof Int32Array?u=J.INT:p instanceof Int8Array?u=J.BYTE:p instanceof Uint8Array&&(u=J.UNSIGNED_BYTE);var E,f,m=l.itemSize,g=ot.getAttributeBuffer(l);l instanceof THREE.InterleavedBufferAttribute?(E=l.data,f=E.stride,p=l.offset,E instanceof THREE.InstancedInterleavedBuffer?(it.enableAttributeAndDivisor(h,E.meshPerAttribute,n),void 0===r.maxInstancedCount&&(r.maxInstancedCount=E.meshPerAttribute*E.count)):it.enableAttribute(h),J.bindBuffer(J.ARRAY_BUFFER,g),J.vertexAttribPointer(h,m,u,d,f*E.array.BYTES_PER_ELEMENT,(i*f+p)*E.array.BYTES_PER_ELEMENT)):(l instanceof THREE.InstancedBufferAttribute?(it.enableAttributeAndDivisor(h,l.meshPerAttribute,n),void 0===r.maxInstancedCount&&(r.maxInstancedCount=l.meshPerAttribute*l.count)):it.enableAttribute(h),J.bindBuffer(J.ARRAY_BUFFER,g),J.vertexAttribPointer(h,m,u,d,0,i*m*l.array.BYTES_PER_ELEMENT))}else if(void 0!==c){var T=c[o];if(void 0!==T)switch(T.length){case 2:J.vertexAttrib2fv(h,T);break;case 3:J.vertexAttrib3fv(h,T);break;case 4:J.vertexAttrib4fv(h,T);break;default:J.vertexAttrib1fv(h,T)}}}}it.disableUnusedAttributes()}(i,a,r),null!==m&&J.bindBuffer(J.ELEMENT_ARRAY_BUFFER,ot.getAttributeBuffer(m)));e=1/0;null!==m?e=m.count:void 0!==t&&(e=t.count);var c=r.drawRange.start,s=r.drawRange.count,a=null!==o?o.start:0,t=null!==o?o.count:1/0,o=Math.max(0,c,a),a=Math.min(0+e,c+s,a+t)-1,t=Math.max(0,a-o+1);if(n instanceof THREE.Mesh)if(!0===i.wireframe)it.setLineWidth(i.wireframeLinewidth*lt()),f.setMode(J.LINES);else switch(n.drawMode){case THREE.TrianglesDrawMode:f.setMode(J.TRIANGLES);break;case THREE.TriangleStripDrawMode:f.setMode(J.TRIANGLE_STRIP);break;case THREE.TriangleFanDrawMode:f.setMode(J.TRIANGLE_FAN)}else n instanceof THREE.Line?(a=i.linewidth,it.setLineWidth((a=void 0===a?1:a)*lt()),n instanceof THREE.LineSegments?f.setMode(J.LINES):f.setMode(J.LINE_STRIP)):n instanceof THREE.Points&&f.setMode(J.POINTS);r instanceof THREE.InstancedBufferGeometry?0<r.maxInstancedCount&&f.renderInstances(r,o,t):f.render(o,t)},this.render=function(t,e,r,i){var n,o;e instanceof THREE.Camera!=!1?(n=t.fog,H="",R=-1,!(x=null)===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld),q.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),U.setFromMatrix(q),p.length=0,u=h=-1,d.length=0,f.length=0,o=this.clippingPlanes,F=0!==m.clippingPlanes.length||m.localClippingEnabled||0!==k||N,N=m.localClippingEnabled,z=Bt(o,e,0),k=null!==o?o.length:0,function t(e,r){if(!1===e.visible)return;if(e.layers.test(r.layers))if(e instanceof THREE.Light)p.push(e);else if(e instanceof THREE.Sprite)!1!==e.frustumCulled&&!0!==wt(e)||d.push(e);else if(e instanceof THREE.LensFlare)f.push(e);else if(e instanceof THREE.ImmediateRenderObject)!0===m.sortObjects&&(Y.setFromMatrixPosition(e.matrixWorld),Y.applyProjection(q)),Mt(e,null,e.material,Y.z,null);else if((e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points)&&(e instanceof THREE.SkinnedMesh&&e.skeleton.update(),!1===e.frustumCulled||!0===wt(e))){var i=e.material;if(!0===i.visible){!0===m.sortObjects&&(Y.setFromMatrixPosition(e.matrixWorld),Y.applyProjection(q));var n=ot.update(e);if(i instanceof THREE.MultiMaterial)for(var o=n.groups,a=i.materials,s=0,c=o.length;s<c;s++){var h=o[s],l=a[h.materialIndex];!0===l.visible&&Mt(e,n,l,Y.z,h)}else Mt(e,n,i,Y.z,null)}}var u=e.children;for(s=0,c=u.length;s<c;s++)t(u[s],r)}(t,e),c.length=h+1,l.length=u+1,!0===m.sortObjects&&(c.sort(_t),l.sort(bt)),F&&(V=!0,Bt(null)),function(t){for(var e=0,r=0,i=t.length;r<i;r++){var n=t[r];n.castShadow&&(Z.shadows[e++]=n)}Z.shadows.length=e}(p),Et.render(t,e),function(t,e){var r,i,n,o,a,s,c=0,h=0,l=0,u=e.matrixWorldInverse,p=0,d=0,E=0,f=0;for(r=0,i=t.length;r<i;r++){var m;n=t[r],o=n.color,a=n.intensity,s=n.distance,n instanceof THREE.AmbientLight?(c+=o.r*a,h+=o.g*a,l+=o.b*a):n instanceof THREE.DirectionalLight?((m=st.get(n)).color.copy(n.color).multiplyScalar(n.intensity),m.direction.setFromMatrixPosition(n.matrixWorld),Y.setFromMatrixPosition(n.target.matrixWorld),m.direction.sub(Y),m.direction.transformDirection(u),m.shadow=n.castShadow,n.castShadow&&(m.shadowBias=n.shadow.bias,m.shadowRadius=n.shadow.radius,m.shadowMapSize=n.shadow.mapSize),Z.directionalShadowMap[p]=n.shadow.map,Z.directionalShadowMatrix[p]=n.shadow.matrix,Z.directional[p++]=m):n instanceof THREE.SpotLight?((m=st.get(n)).position.setFromMatrixPosition(n.matrixWorld),m.position.applyMatrix4(u),m.color.copy(o).multiplyScalar(a),m.distance=s,m.direction.setFromMatrixPosition(n.matrixWorld),Y.setFromMatrixPosition(n.target.matrixWorld),m.direction.sub(Y),m.direction.transformDirection(u),m.coneCos=Math.cos(n.angle),m.penumbraCos=Math.cos(n.angle*(1-n.penumbra)),m.decay=0===n.distance?0:n.decay,m.shadow=n.castShadow,n.castShadow&&(m.shadowBias=n.shadow.bias,m.shadowRadius=n.shadow.radius,m.shadowMapSize=n.shadow.mapSize),Z.spotShadowMap[E]=n.shadow.map,Z.spotShadowMatrix[E]=n.shadow.matrix,Z.spot[E++]=m):n instanceof THREE.PointLight?((m=st.get(n)).position.setFromMatrixPosition(n.matrixWorld),m.position.applyMatrix4(u),m.color.copy(n.color).multiplyScalar(n.intensity),m.distance=n.distance,m.decay=0===n.distance?0:n.decay,m.shadow=n.castShadow,n.castShadow&&(m.shadowBias=n.shadow.bias,m.shadowRadius=n.shadow.radius,m.shadowMapSize=n.shadow.mapSize),Z.pointShadowMap[d]=n.shadow.map,void 0===Z.pointShadowMatrix[d]&&(Z.pointShadowMatrix[d]=new THREE.Matrix4),Y.setFromMatrixPosition(n.matrixWorld).negate(),Z.pointShadowMatrix[d].identity().setPosition(Y),Z.point[d++]=m):n instanceof THREE.HemisphereLight&&((m=st.get(n)).direction.setFromMatrixPosition(n.matrixWorld),m.direction.transformDirection(u),m.direction.normalize(),m.skyColor.copy(n.color).multiplyScalar(a),m.groundColor.copy(n.groundColor).multiplyScalar(a),Z.hemi[f++]=m)}Z.ambient[0]=c,Z.ambient[1]=h,Z.ambient[2]=l,Z.directional.length=p,Z.spot.length=E,Z.point.length=d,Z.hemi.length=f,Z.hash=p+","+d+","+E+","+f+","+Z.shadows.length}(p,e),F&&(V=!1,Dt()),Q.calls=0,Q.vertices=0,Q.faces=0,Q.points=0,this.setRenderTarget(r=void 0===r?null:r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),t.overrideMaterial?(i=t.overrideMaterial,St(c,e,n,i),St(l,e,n,i)):(it.setBlending(THREE.NoBlending),St(c,e,n),St(l,e,n)),mt.render(t,e),gt.render(t,e,M),!r||(e=r.texture).generateMipmaps&&Vt(r)&&e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter&&(r=(e=r)instanceof THREE.WebGLRenderTargetCube?J.TEXTURE_CUBE_MAP:J.TEXTURE_2D,e=nt.get(e.texture).__webglTexture,it.bindTexture(r,e),J.generateMipmap(r),it.bindTexture(r,null)),it.setDepthTest(!0),it.setDepthWrite(!0),it.setColorWrite(!0)):console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")};var Gt=!(this.setFaceCulling=function(t,e){t===THREE.CullFaceNone?it.disable(J.CULL_FACE):(e===THREE.FrontFaceDirectionCW?J.frontFace(J.CW):J.frontFace(J.CCW),t===THREE.CullFaceBack?J.cullFace(J.BACK):t===THREE.CullFaceFront?J.cullFace(J.FRONT):J.cullFace(J.FRONT_AND_BACK),it.enable(J.CULL_FACE))});function Ot(t,e,r,i){var n=jt(e.texture.format),o=jt(e.texture.type);it.texImage2D(i,0,n,e.width,e.height,0,n,o,null),J.bindFramebuffer(J.FRAMEBUFFER,t),J.framebufferTexture2D(J.FRAMEBUFFER,r,i,nt.get(e.texture).__webglTexture,0),J.bindFramebuffer(J.FRAMEBUFFER,null)}function zt(t,e){J.bindRenderbuffer(J.RENDERBUFFER,t),e.depthBuffer&&!e.stencilBuffer?(J.renderbufferStorage(J.RENDERBUFFER,J.DEPTH_COMPONENT16,e.width,e.height),J.framebufferRenderbuffer(J.FRAMEBUFFER,J.DEPTH_ATTACHMENT,J.RENDERBUFFER,t)):e.depthBuffer&&e.stencilBuffer?(J.renderbufferStorage(J.RENDERBUFFER,J.DEPTH_STENCIL,e.width,e.height),J.framebufferRenderbuffer(J.FRAMEBUFFER,J.DEPTH_STENCIL_ATTACHMENT,J.RENDERBUFFER,t)):J.renderbufferStorage(J.RENDERBUFFER,J.RGBA4,e.width,e.height),J.bindRenderbuffer(J.RENDERBUFFER,null)}function kt(t){var e=nt.get(t),r=t instanceof THREE.WebGLRenderTargetCube;if(t.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,e){if(e instanceof THREE.WebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported!");if(J.bindFramebuffer(J.FRAMEBUFFER,t),!(e.depthTexture instanceof THREE.DepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");nt.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),m.setTexture(e.depthTexture,0),e=nt.get(e.depthTexture).__webglTexture,J.framebufferTexture2D(J.FRAMEBUFFER,J.DEPTH_ATTACHMENT,J.TEXTURE_2D,e,0)}(e.__webglFramebuffer,t)}else if(r){e.__webglDepthbuffer=[];for(var i=0;i<6;i++)J.bindFramebuffer(J.FRAMEBUFFER,e.__webglFramebuffer[i]),e.__webglDepthbuffer[i]=J.createRenderbuffer(),zt(e.__webglDepthbuffer[i],t)}else J.bindFramebuffer(J.FRAMEBUFFER,e.__webglFramebuffer),e.__webglDepthbuffer=J.createRenderbuffer(),zt(e.__webglDepthbuffer,t);J.bindFramebuffer(J.FRAMEBUFFER,null)}function Wt(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?J.NEAREST:J.LINEAR}function jt(t){var e;if(t===THREE.RepeatWrapping)return J.REPEAT;if(t===THREE.ClampToEdgeWrapping)return J.CLAMP_TO_EDGE;if(t===THREE.MirroredRepeatWrapping)return J.MIRRORED_REPEAT;if(t===THREE.NearestFilter)return J.NEAREST;if(t===THREE.NearestMipMapNearestFilter)return J.NEAREST_MIPMAP_NEAREST;if(t===THREE.NearestMipMapLinearFilter)return J.NEAREST_MIPMAP_LINEAR;if(t===THREE.LinearFilter)return J.LINEAR;if(t===THREE.LinearMipMapNearestFilter)return J.LINEAR_MIPMAP_NEAREST;if(t===THREE.LinearMipMapLinearFilter)return J.LINEAR_MIPMAP_LINEAR;if(t===THREE.UnsignedByteType)return J.UNSIGNED_BYTE;if(t===THREE.UnsignedShort4444Type)return J.UNSIGNED_SHORT_4_4_4_4;if(t===THREE.UnsignedShort5551Type)return J.UNSIGNED_SHORT_5_5_5_1;if(t===THREE.UnsignedShort565Type)return J.UNSIGNED_SHORT_5_6_5;if(t===THREE.ByteType)return J.BYTE;if(t===THREE.ShortType)return J.SHORT;if(t===THREE.UnsignedShortType)return J.UNSIGNED_SHORT;if(t===THREE.IntType)return J.INT;if(t===THREE.UnsignedIntType)return J.UNSIGNED_INT;if(t===THREE.FloatType)return J.FLOAT;if(null!==(e=et.get("OES_texture_half_float"))&&t===THREE.HalfFloatType)return e.HALF_FLOAT_OES;if(t===THREE.AlphaFormat)return J.ALPHA;if(t===THREE.RGBFormat)return J.RGB;if(t===THREE.RGBAFormat)return J.RGBA;if(t===THREE.LuminanceFormat)return J.LUMINANCE;if(t===THREE.LuminanceAlphaFormat)return J.LUMINANCE_ALPHA;if(t===THREE.DepthFormat)return J.DEPTH_COMPONENT;if(t===THREE.AddEquation)return J.FUNC_ADD;if(t===THREE.SubtractEquation)return J.FUNC_SUBTRACT;if(t===THREE.ReverseSubtractEquation)return J.FUNC_REVERSE_SUBTRACT;if(t===THREE.ZeroFactor)return J.ZERO;if(t===THREE.OneFactor)return J.ONE;if(t===THREE.SrcColorFactor)return J.SRC_COLOR;if(t===THREE.OneMinusSrcColorFactor)return J.ONE_MINUS_SRC_COLOR;if(t===THREE.SrcAlphaFactor)return J.SRC_ALPHA;if(t===THREE.OneMinusSrcAlphaFactor)return J.ONE_MINUS_SRC_ALPHA;if(t===THREE.DstAlphaFactor)return J.DST_ALPHA;if(t===THREE.OneMinusDstAlphaFactor)return J.ONE_MINUS_DST_ALPHA;if(t===THREE.DstColorFactor)return J.DST_COLOR;if(t===THREE.OneMinusDstColorFactor)return J.ONE_MINUS_DST_COLOR;if(t===THREE.SrcAlphaSaturateFactor)return J.SRC_ALPHA_SATURATE;if(null!==(e=et.get("WEBGL_compressed_texture_s3tc"))){if(t===THREE.RGB_S3TC_DXT1_Format)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT1_Format)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT3_Format)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===THREE.RGBA_S3TC_DXT5_Format)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(null!==(e=et.get("WEBGL_compressed_texture_pvrtc"))){if(t===THREE.RGB_PVRTC_4BPPV1_Format)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===THREE.RGB_PVRTC_2BPPV1_Format)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===THREE.RGBA_PVRTC_4BPPV1_Format)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===THREE.RGBA_PVRTC_2BPPV1_Format)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(null!==(e=et.get("WEBGL_compressed_texture_etc1"))&&t===THREE.RGB_ETC1_Format)return e.COMPRESSED_RGB_ETC1_WEBGL;if(null!==(e=et.get("EXT_blend_minmax"))){if(t===THREE.MinEquation)return e.MIN_EXT;if(t===THREE.MaxEquation)return e.MAX_EXT}return 0}this.setTexture=function(t,e){Gt||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),Gt=!0),Ft(t,e)},this.allocTextureUnit=function(){var t=w;return t>=rt.maxTextures&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+rt.maxTextures),w+=1,t},this.setTexture2D=Ft,this.setTextureCube=function(t,e){t instanceof THREE.CubeTexture||Array.isArray(t.image)&&6===t.image.length?function(t,e){var r=nt.get(t);if(6===t.image.length)if(0<t.version&&r.__version!==t.version){r.__image__webglTextureCube||(t.addEventListener("dispose",vt),r.__image__webglTextureCube=J.createTexture(),K.textures++),it.activeTexture(J.TEXTURE0+e),it.bindTexture(J.TEXTURE_CUBE_MAP,r.__image__webglTextureCube),J.pixelStorei(J.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var i=t instanceof THREE.CompressedTexture,n=t.image[0]instanceof THREE.DataTexture,o=[],a=0;a<6;a++)!m.autoScaleCubemaps||i||n?o[a]=n?t.image[a].image:t.image[a]:o[a]=Nt(t.image[a],rt.maxCubemapSize);var s=Vt(o[0]),c=jt(t.format),h=jt(t.type);It(J.TEXTURE_CUBE_MAP,t,s);for(a=0;a<6;a++)if(i)for(var l,u=o[a].mipmaps,p=0,d=u.length;p<d;p++)l=u[p],t.format!==THREE.RGBAFormat&&t.format!==THREE.RGBFormat?-1<it.getCompressedTextureFormats().indexOf(c)?it.compressedTexImage2D(J.TEXTURE_CUBE_MAP_POSITIVE_X+a,p,c,l.width,l.height,0,l.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):it.texImage2D(J.TEXTURE_CUBE_MAP_POSITIVE_X+a,p,c,l.width,l.height,0,c,h,l.data);else n?it.texImage2D(J.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,c,o[a].width,o[a].height,0,c,h,o[a].data):it.texImage2D(J.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,c,c,h,o[a]);t.generateMipmaps&&s&&J.generateMipmap(J.TEXTURE_CUBE_MAP),r.__version=t.version,t.onUpdate&&t.onUpdate(t)}else it.activeTexture(J.TEXTURE0+e),it.bindTexture(J.TEXTURE_CUBE_MAP,r.__image__webglTextureCube)}(t,e):(t=t.texture,it.activeTexture(J.TEXTURE0+e),it.bindTexture(J.TEXTURE_CUBE_MAP,nt.get(t).__webglTexture))},this.getCurrentRenderTarget=function(){return v},this.setRenderTarget=function(t){(v=t)&&void 0===nt.get(t).__webglFramebuffer&&function(t){var e=nt.get(t),r=nt.get(t.texture);t.addEventListener("dispose",yt),r.__webglTexture=J.createTexture(),K.textures++;var i=t instanceof THREE.WebGLRenderTargetCube,n=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height);if(i){e.__webglFramebuffer=[];for(var o=0;o<6;o++)e.__webglFramebuffer[o]=J.createFramebuffer()}else e.__webglFramebuffer=J.createFramebuffer();if(i){it.bindTexture(J.TEXTURE_CUBE_MAP,r.__webglTexture),It(J.TEXTURE_CUBE_MAP,t.texture,n);for(o=0;o<6;o++)Ot(e.__webglFramebuffer[o],t,J.COLOR_ATTACHMENT0,J.TEXTURE_CUBE_MAP_POSITIVE_X+o);t.texture.generateMipmaps&&n&&J.generateMipmap(J.TEXTURE_CUBE_MAP),it.bindTexture(J.TEXTURE_CUBE_MAP,null)}else it.bindTexture(J.TEXTURE_2D,r.__webglTexture),It(J.TEXTURE_2D,t.texture,n),Ot(e.__webglFramebuffer,t,J.COLOR_ATTACHMENT0,J.TEXTURE_2D),t.texture.generateMipmaps&&n&&J.generateMipmap(J.TEXTURE_2D),it.bindTexture(J.TEXTURE_2D,null);t.depthBuffer&&kt(t)}(t);var e,r=t instanceof THREE.WebGLRenderTargetCube;t?(e=nt.get(t),e=r?e.__webglFramebuffer[t.activeCubeFace]:e.__webglFramebuffer,_.copy(t.scissor),b=t.scissorTest,M.copy(t.viewport)):(e=null,_.copy(B).multiplyScalar(P),b=D,M.copy(I).multiplyScalar(P)),y!==e&&(J.bindFramebuffer(J.FRAMEBUFFER,e),y=e),it.scissor(_),it.setScissorTest(b),it.viewport(M),r&&(r=nt.get(t.texture),J.framebufferTexture2D(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,r.__webglTexture,t.activeMipMapLevel))},this.readRenderTargetPixels=function(t,e,r,i,n,o){if(t instanceof THREE.WebGLRenderTarget!=!1){var a=nt.get(t).__webglFramebuffer;if(a){var s=!1;a!==y&&(J.bindFramebuffer(J.FRAMEBUFFER,a),s=!0);try{var c=t.texture;if(c.format!==THREE.RGBAFormat&&jt(c.format)!==J.getParameter(J.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(c.type===THREE.UnsignedByteType||jt(c.type)===J.getParameter(J.IMPLEMENTATION_COLOR_READ_TYPE)||c.type===THREE.FloatType&&et.get("WEBGL_color_buffer_float")||c.type===THREE.HalfFloatType&&et.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");J.checkFramebufferStatus(J.FRAMEBUFFER)===J.FRAMEBUFFER_COMPLETE?0<e&&e<=t.width-i&&0<r&&r<=t.height-n&&J.readPixels(e,r,i,n,jt(c.format),jt(c.type),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&J.bindFramebuffer(J.FRAMEBUFFER,y)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")}},THREE.WebGLRenderTarget=function(t,e,r){this.uuid=THREE.Math.generateUUID(),this.width=t,this.height=e,this.scissor=new THREE.Vector4(0,0,t,e),this.scissorTest=!1,this.viewport=new THREE.Vector4(0,0,t,e),void 0===(r=r||{}).minFilter&&(r.minFilter=THREE.LinearFilter),this.texture=new THREE.Texture(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(t,e,r){THREE.WebGLRenderTarget.call(this,t,e,r),this.activeCubeFace=0,this.activeMipMapLevel=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLBufferRenderer=function(n,o,a){var s;this.setMode=function(t){s=t},this.render=function(t,e){n.drawArrays(s,t,e),a.calls++,a.vertices+=e,s===n.TRIANGLES&&(a.faces+=e/3)},this.renderInstances=function(t){var e,r,i=o.get("ANGLE_instanced_arrays");null!==i?(r=0,r=((e=t.attributes.position)instanceof THREE.InterleavedBufferAttribute?e.data:e).count,i.drawArraysInstancedANGLE(s,0,r,t.maxInstancedCount),a.calls++,a.vertices+=r*t.maxInstancedCount,s===n.TRIANGLES&&(a.faces+=t.maxInstancedCount*r/3)):console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}},THREE.WebGLIndexedBufferRenderer=function(n,o,a){var s,c,h;this.setMode=function(t){s=t},this.setIndex=function(t){h=t.array instanceof Uint32Array&&o.get("OES_element_index_uint")?(c=n.UNSIGNED_INT,4):(c=n.UNSIGNED_SHORT,2)},this.render=function(t,e){n.drawElements(s,e,c,t*h),a.calls++,a.vertices+=e,s===n.TRIANGLES&&(a.faces+=e/3)},this.renderInstances=function(t,e,r){var i=o.get("ANGLE_instanced_arrays");null!==i?(i.drawElementsInstancedANGLE(s,r,c,e*h,t.maxInstancedCount),a.calls++,a.vertices+=r*t.maxInstancedCount,s===n.TRIANGLES&&(a.faces+=t.maxInstancedCount*r/3)):console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}},THREE.WebGLExtensions=function(r){var i={};this.get=function(t){if(void 0!==i[t])return i[t];var e;switch(t){case"WEBGL_depth_texture":e=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");case"EXT_texture_filter_anisotropic":e=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":e=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":e=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":e=r.getExtension("WEBGL_compressed_texture_etc1");break;default:e=r.getExtension(t)}return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),i[t]=e}},THREE.WebGLCapabilities=function(e,t,r){function i(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}this.getMaxPrecision=i,this.precision=void 0!==r.precision?r.precision:"highp",this.logarithmicDepthBuffer=void 0!==r.logarithmicDepthBuffer&&r.logarithmicDepthBuffer,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=0<this.maxVertexTextures,this.floatFragmentTextures=!!t.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;r=i(this.precision);r!==this.precision&&(console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",r,"instead."),this.precision=r),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!t.get("EXT_frag_depth"))},THREE.WebGLGeometries=function(r,i,n){var o={};function a(t){var e=t.target,r=o[e.id];null!==r.index&&s(r.index),function(t){for(var e in t)s(t[e])}(r.attributes),e.removeEventListener("dispose",a),delete o[e.id];t=i.get(e);t.wireframe&&s(t.wireframe),i.delete(e);e=i.get(r);e.wireframe&&s(e.wireframe),i.delete(r),n.memory.geometries--}function s(t){var e=((e=t)instanceof THREE.InterleavedBufferAttribute?i.get(e.data):i.get(e)).__webglBuffer;void 0!==e&&(r.deleteBuffer(e),(t=t)instanceof THREE.InterleavedBufferAttribute?i.delete(t.data):i.delete(t))}this.get=function(t){var e,r=t.geometry;return void 0!==o[r.id]?o[r.id]:(r.addEventListener("dispose",a),r instanceof THREE.BufferGeometry?e=r:r instanceof THREE.Geometry&&(void 0===r._bufferGeometry&&(r._bufferGeometry=(new THREE.BufferGeometry).setFromObject(t)),e=r._bufferGeometry),o[r.id]=e,n.memory.geometries++,e)}},THREE.WebGLLights=function(){var r={};this.get=function(t){if(void 0!==r[t.id])return r[t.id];var e;switch(t.type){case"DirectionalLight":e={direction:new THREE.Vector3,color:new THREE.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"SpotLight":e={position:new THREE.Vector3,direction:new THREE.Vector3,color:new THREE.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"PointLight":e={position:new THREE.Vector3,color:new THREE.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"HemisphereLight":e={direction:new THREE.Vector3,skyColor:new THREE.Color,groundColor:new THREE.Color}}return r[t.id]=e}},THREE.WebGLObjects=function(p,d,t){var c=new THREE.WebGLGeometries(p,d,t);function E(t,e){var r=t instanceof THREE.InterleavedBufferAttribute?t.data:t,t=d.get(r);void 0===t.__webglBuffer?function(t,e,r){t.__webglBuffer=p.createBuffer(),p.bindBuffer(r,t.__webglBuffer);var i=e.dynamic?p.DYNAMIC_DRAW:p.STATIC_DRAW;p.bufferData(r,e.array,i),t.version=e.version}(t,r,e):t.version!==r.version&&function(t,e,r){p.bindBuffer(r,t.__webglBuffer),!1===e.dynamic||-1===e.updateRange.count?p.bufferSubData(r,0,e.array):0===e.updateRange.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(p.bufferSubData(r,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count)),e.updateRange.count=0);t.version=e.version}(t,r,e)}function f(t,e,r){r<e&&(i=e,e=r,r=i);var i=t[e];return void 0===i?t[e]=[r]:-1===i.indexOf(r)&&(i.push(r),1)}this.getAttributeBuffer=function(t){return(t instanceof THREE.InterleavedBufferAttribute?d.get(t.data):d.get(t)).__webglBuffer},this.getWireframeAttribute=function(t){var e=d.get(t);if(void 0!==e.wireframe)return e.wireframe;var r=[],i=t.index,n=t.attributes,t=n.position;if(null!==i)for(var o={},a=0,s=(u=i.array).length;a<s;a+=3){var c=u[a+0],h=u[a+1],l=u[a+2];f(o,c,h)&&r.push(c,h),f(o,h,l)&&r.push(h,l),f(o,l,c)&&r.push(l,c)}else for(var u,a=0,s=(u=n.position.array).length/3-1;a<s;a+=3){c=a+0,h=a+1,l=a+2;r.push(c,h,h,l,l,c)}return t=65535<t.count?Uint32Array:Uint16Array,E(t=new THREE.BufferAttribute(new t(r),1),p.ELEMENT_ARRAY_BUFFER),e.wireframe=t},this.update=function(t){var e=c.get(t);t.geometry instanceof THREE.Geometry&&e.updateFromObject(t);var t=e.index,r=e.attributes;for(i in null!==t&&E(t,p.ELEMENT_ARRAY_BUFFER),r)E(r[i],p.ARRAY_BUFFER);var i,n=e.morphAttributes;for(i in n)for(var o=n[i],a=0,s=o.length;a<s;a++)E(o[a],p.ARRAY_BUFFER);return e}},THREE.WebGLProgram=function(){var H=0;function x(t){switch(t){case THREE.LinearEncoding:return["Linear","( value )"];case THREE.sRGBEncoding:return["sRGB","( value )"];case THREE.RGBEEncoding:return["RGBE","( value )"];case THREE.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case THREE.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case THREE.RGBDEncoding:return["RGBD","( value, 256.0 )"];case THREE.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function _(t,e){e=x(e);return"vec4 "+t+"( vec4 value ) { return "+e[0]+"ToLinear"+e[1]+"; }"}function b(t){return""!==t}function M(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function w(t){return t.replace(/#include +<([\w\d.]+)>/g,function(t,e){var r=THREE.ShaderChunk[e];if(void 0===r)throw new Error("Can not resolve #include <"+e+">");return w(r)})}function S(t){return t.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,r,i){for(var n="",o=parseInt(e);o<parseInt(r);o++)n+=i.replace(/\[ i \]/g,"[ "+o+" ]");return n})}return function(t,e,r,i){var n=t.context,o=r.extensions,a=r.defines,s=r.__webglShader.vertexShader,c=r.__webglShader.fragmentShader,h="SHADOWMAP_TYPE_BASIC";i.shadowMapType===THREE.PCFShadowMap?h="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(h="SHADOWMAP_TYPE_PCF_SOFT");var l="ENVMAP_TYPE_CUBE",u="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(i.envMap){switch(r.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:l="ENVMAP_TYPE_CUBE";break;case THREE.CubeUVReflectionMapping:case THREE.CubeUVRefractionMapping:l="ENVMAP_TYPE_CUBE_UV";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:l="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:l="ENVMAP_TYPE_SPHERE"}switch(r.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:u="ENVMAP_MODE_REFRACTION"}switch(r.combine){case THREE.MultiplyOperation:p="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:p="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:p="ENVMAP_BLENDING_ADD"}}var d,E,f,m=0<t.gammaFactor?t.gammaFactor:1,o=(d=o,E=i,o=t.extensions,[(d=d||{}).derivatives||E.envMapCubeUV||E.bumpMap||E.normalMap||E.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(d.fragDepth||E.logarithmicDepthBuffer)&&o.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",d.drawBuffers&&o.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(d.shaderTextureLOD||E.envMap)&&o.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(b).join("\n")),a=function(t){var e,r=[];for(e in t){var i=t[e];!1!==i&&r.push("#define "+e+" "+i)}return r.join("\n")}(a),g=n.createProgram(),a=r instanceof THREE.RawShaderMaterial?f="":(f=["precision "+i.precision+" float;","precision "+i.precision+" int;","#define SHADER_NAME "+r.__webglShader.name,a,i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+u:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+i.numClippingPlanes,i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+h:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&t.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(b).join("\n"),[o,"precision "+i.precision+" float;","precision "+i.precision+" int;","#define SHADER_NAME "+r.__webglShader.name,a,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"","#define GAMMA_FACTOR "+m,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+l:"",i.envMap?"#define "+u:"",i.envMap?"#define "+p:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+i.numClippingPlanes,i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+h:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&t.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",i.envMap&&t.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",i.toneMapping!==THREE.NoToneMapping?"#define TONE_MAPPING":"",i.toneMapping!==THREE.NoToneMapping?THREE.ShaderChunk.tonemapping_pars_fragment:"",i.toneMapping!==THREE.NoToneMapping?function(t,e){var r;switch(e){case THREE.LinearToneMapping:r="Linear";break;case THREE.ReinhardToneMapping:r="Reinhard";break;case THREE.Uncharted2ToneMapping:r="Uncharted2";break;case THREE.CineonToneMapping:r="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.outputEncoding||i.mapEncoding||i.envMapEncoding||i.emissiveMapEncoding?THREE.ShaderChunk.encodings_pars_fragment:"",i.mapEncoding?_("mapTexelToLinear",i.mapEncoding):"",i.envMapEncoding?_("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMapEncoding?_("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.outputEncoding?(T="linearToOutputTexel",R=x(R=i.outputEncoding),"vec4 "+T+"( vec4 value ) { return LinearTo"+R[0]+R[1]+"; }"):"",i.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(b).join("\n"));s=M(s=w(s),i),c=M(c=w(c),i),r instanceof THREE.ShaderMaterial==!1&&(s=S(s),c=S(c));var m=a+c,h=THREE.WebGLShader(n,n.VERTEX_SHADER,f+s),T=THREE.WebGLShader(n,n.FRAGMENT_SHADER,m);n.attachShader(g,h),n.attachShader(g,T),void 0!==r.index0AttributeName?n.bindAttribLocation(g,0,r.index0AttributeName):!0===i.morphTargets&&n.bindAttribLocation(g,0,"position"),n.linkProgram(g);var v,y,R=n.getProgramInfoLog(g),c=n.getShaderInfoLog(h),s=n.getShaderInfoLog(T),m=!0,i=!0;return!1===n.getProgramParameter(g,n.LINK_STATUS)?(m=!1,console.error("THREE.WebGLProgram: shader error: ",n.getError(),"gl.VALIDATE_STATUS",n.getProgramParameter(g,n.VALIDATE_STATUS),"gl.getProgramInfoLog",R,c,s)):""!==R?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",R):""!==c&&""!==s||(i=!1),i&&(this.diagnostics={runnable:m,material:r,programLog:R,vertexShader:{log:c,prefix:f},fragmentShader:{log:s,prefix:a}}),n.deleteShader(h),n.deleteShader(T),this.getUniforms=function(){return v=void 0===v?new THREE.WebGLUniforms(n,g,t):v},this.getAttributes=function(){return y=void 0===y?function(t,e){for(var r={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),n=0;n<i;n++){var o=t.getActiveAttrib(e,n).name;r[o]=t.getAttribLocation(e,o)}return r}(n,g):y},this.destroy=function(){n.deleteProgram(g),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=H++,this.code=e,this.usedTimes=1,this.program=g,this.vertexShader=h,this.fragmentShader=T,this}}(),THREE.WebGLPrograms=function(c,h){var s=[],l={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},o=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","depthPacking"];function u(t,e){var r;return t?t instanceof THREE.Texture?r=t.encoding:t instanceof THREE.WebGLRenderTarget&&(r=t.texture.encoding):r=THREE.LinearEncoding,r=r===THREE.LinearEncoding&&e?THREE.GammaEncoding:r}this.getParameters=function(t,e,r,i,n){var o=l[t.type],a=function(t){if(h.floatVertexTextures&&t&&t.skeleton&&t.skeleton.useVertexTexture)return 1024;var e=h.maxVertexUniforms,e=Math.floor((e-20)/4);return void 0!==t&&t instanceof THREE.SkinnedMesh&&(e=Math.min(t.skeleton.bones.length,e))<t.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+t.skeleton.bones.length+", this GPU supports just "+e+" (try OpenGL instead of ANGLE)"),e}(n),s=c.getPrecision();return null!==t.precision&&(s=h.getMaxPrecision(t.precision))!==t.precision&&console.warn("THREE.WebGLProgram.getParameters:",t.precision,"not supported, using",s,"instead."),{shaderID:o,precision:s,supportsVertexTextures:h.vertexTextures,outputEncoding:u(c.getCurrentRenderTarget(),c.gammaOutput),map:!!t.map,mapEncoding:u(t.map,c.gammaInput),envMap:!!t.envMap,envMapMode:t.envMap&&t.envMap.mapping,envMapEncoding:u(t.envMap,c.gammaInput),envMapCubeUV:!!t.envMap&&(t.envMap.mapping===THREE.CubeUVReflectionMapping||t.envMap.mapping===THREE.CubeUVRefractionMapping),lightMap:!!t.lightMap,aoMap:!!t.aoMap,emissiveMap:!!t.emissiveMap,emissiveMapEncoding:u(t.emissiveMap,c.gammaInput),bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,displacementMap:!!t.displacementMap,roughnessMap:!!t.roughnessMap,metalnessMap:!!t.metalnessMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,combine:t.combine,vertexColors:t.vertexColors,fog:r,useFog:t.fog,fogExp:r instanceof THREE.FogExp2,flatShading:t.shading===THREE.FlatShading,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:h.logarithmicDepthBuffer,skinning:t.skinning,maxBones:a,useVertexTexture:h.floatVertexTextures&&n&&n.skeleton&&n.skeleton.useVertexTexture,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:c.maxMorphTargets,maxMorphNormals:c.maxMorphNormals,numDirLights:e.directional.length,numPointLights:e.point.length,numSpotLights:e.spot.length,numHemiLights:e.hemi.length,numClippingPlanes:i,shadowMapEnabled:c.shadowMap.enabled&&n.receiveShadow&&0<e.shadows.length,shadowMapType:c.shadowMap.type,toneMapping:c.toneMapping,physicallyCorrectLights:c.physicallyCorrectLights,premultipliedAlpha:t.premultipliedAlpha,alphaTest:t.alphaTest,doubleSided:t.side===THREE.DoubleSide,flipSided:t.side===THREE.BackSide,depthPacking:void 0!==t.depthPacking&&t.depthPacking}},this.getProgramCode=function(t,e){var r=[];if(e.shaderID?r.push(e.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var i in t.defines)r.push(i),r.push(t.defines[i]);for(var n=0;n<o.length;n++)r.push(e[o[n]]);return r.join()},this.acquireProgram=function(t,e,r){for(var i,n=0,o=s.length;n<o;n++){var a=s[n];if(a.code===r){++(i=a).usedTimes;break}}return void 0===i&&(i=new THREE.WebGLProgram(c,r,t,e),s.push(i)),i},this.releaseProgram=function(t){var e;0==--t.usedTimes&&(e=s.indexOf(t),s[e]=s[s.length-1],s.pop(),t.destroy())},this.programs=s},THREE.WebGLProperties=function(){var r={};this.get=function(t){var e=t.uuid,t=r[e];return void 0===t&&(r[e]=t={}),t},this.delete=function(t){delete r[t.uuid]},this.clear=function(){r={}}},THREE.WebGLShader=function(t,e,r){var i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),!1===t.getShaderParameter(i,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(i)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(i),function(t){for(var e=t.split("\n"),r=0;r<e.length;r++)e[r]=r+1+": "+e[r];return e.join("\n")}(r)),i},THREE.WebGLShadowMap=function(L,t,A){var C=L.context,P=L.state,B=new THREE.Frustum,D=new THREE.Matrix4,I=t.shadows,U=new THREE.Vector2,F=new THREE.Vector3,N=new THREE.Vector3,V=[],l=1,u=2,e=1+(l|u),p=new Array(e),d=new Array(e),E={},G=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],O=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],z=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],r=new THREE.MeshDepthMaterial;r.depthPacking=THREE.RGBADepthPacking,r.clipping=!0;for(var i=THREE.ShaderLib.distanceRGBA,n=THREE.UniformsUtils.clone(i.uniforms),o=0;o!==e;++o){var a=0!=(o&l),s=0!=(o&u),c=r.clone();c.morphTargets=a,c.skinning=s,p[o]=c;s=new THREE.ShaderMaterial({defines:{USE_SHADOWMAP:""},uniforms:n,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,morphTargets:a,skinning:s,clipping:!0});d[o]=s}var k=this;function W(t,e,r,i){var n,o,a=t.geometry,s=null,c=p,h=t.customDepthMaterial;return r&&(c=d,h=t.customDistanceMaterial),s=h||(a=void 0!==a.morphTargets&&0<a.morphTargets.length&&e.morphTargets,o=t instanceof THREE.SkinnedMesh&&e.skinning,n=0,a&&(n|=l),o&&(n|=u),c[n]),L.localClippingEnabled&&!0===e.clipShadows&&0!==e.clippingPlanes.length&&(o=s.uuid,c=e.uuid,void 0===(n=E[o])&&(E[o]=n={}),void 0===(o=n[c])&&(o=s.clone(),n[c]=o),s=o),s.visible=e.visible,s.wireframe=e.wireframe,s.side=e.side,s.clipShadows=e.clipShadows,s.clippingPlanes=e.clippingPlanes,s.wireframeLinewidth=e.wireframeLinewidth,s.linewidth=e.linewidth,r&&void 0!==s.uniforms.lightPos&&s.uniforms.lightPos.value.copy(i),s}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=THREE.PCFShadowMap,this.cullFace=THREE.CullFaceFront,this.render=function(t,e){if(!1!==k.enabled&&(!1!==k.autoUpdate||!1!==k.needsUpdate)&&0!==I.length){P.clearColor(1,1,1,1),P.disable(C.BLEND),P.enable(C.CULL_FACE),C.frontFace(C.CCW),C.cullFace(k.cullFace===THREE.CullFaceFront?C.FRONT:C.BACK),P.setDepthTest(!0),P.setScissorTest(!1);for(var r=0,i=I.length;r<i;r++){var n,o,a,s,c=I[r],h=c.shadow,l=h.camera;U.copy(h.mapSize),c instanceof THREE.PointLight?(n=6,o=!0,a=U.x,s=U.y,z[0].set(2*a,s,a,s),z[1].set(0,s,a,s),z[2].set(3*a,s,a,s),z[3].set(a,s,a,s),z[4].set(3*a,0,a,s),z[5].set(a,0,a,s),U.x*=4,U.y*=2):o=!(n=1),null===h.map&&(u={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},h.map=new THREE.WebGLRenderTarget(U.x,U.y,u),l.updateProjectionMatrix()),h instanceof THREE.SpotLightShadow&&h.update(c);var u=h.map,p=h.matrix;N.setFromMatrixPosition(c.matrixWorld),l.position.copy(N),L.setRenderTarget(u),L.clear();for(var d,E=0;E<n;E++){o?(F.copy(l.position),F.add(G[E]),l.up.copy(O[E]),l.lookAt(F),d=z[E],P.viewport(d)):(F.setFromMatrixPosition(c.target.matrixWorld),l.lookAt(F)),l.updateMatrixWorld(),l.matrixWorldInverse.getInverse(l.matrixWorld),p.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),p.multiply(l.projectionMatrix),p.multiply(l.matrixWorldInverse),D.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),B.setFromMatrix(D),V.length=0,function t(e,r,i){if(!1===e.visible)return;e.layers.test(r.layers)&&(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points)&&(!e.castShadow||!1!==e.frustumCulled&&!0!==B.intersectsObject(e)||!0===e.material.visible&&(e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),V.push(e)));var n=e.children;for(var o=0,a=n.length;o<a;o++)t(n[o],r,i)}(t,e,l);for(var f=0,m=V.length;f<m;f++){var g=V[f],T=A.update(g),v=g.material;if(v instanceof THREE.MultiMaterial)for(var y=T.groups,R=v.materials,H=0,x=y.length;H<x;H++){var _=y[H],b=R[_.materialIndex];!0===b.visible&&(M=W(g,b,o,N),L.renderBufferDirect(l,null,T,M,g,_))}else{var M=W(g,v,o,N);L.renderBufferDirect(l,null,T,M,g,null)}}}}var w=L.getClearColor(),S=L.getClearAlpha();L.setClearColor(w,S),P.enable(C.BLEND),k.cullFace===THREE.CullFaceFront&&C.cullFace(C.BACK),k.needsUpdate=!1}}},THREE.WebGLState=function(c,r,h){var i=this,n=new THREE.Vector4,t=c.getParameter(c.MAX_VERTEX_ATTRIBS),o=new Uint8Array(t),a=new Uint8Array(t),s=new Uint8Array(t),e={},l=null,u=null,p=null,d=null,E=null,f=null,m=null,g=null,T=!1,v=null,y=null,R=null,H=null,x=null,_=null,b=null,M=null,w=null,S=null,L=null,A=null,C=null,P=null,B=null,D=c.getParameter(c.MAX_TEXTURE_IMAGE_UNITS),I=void 0,U={},F=new THREE.Vector4,N=null,V=null,G=new THREE.Vector4,O=new THREE.Vector4;this.init=function(){this.clearColor(0,0,0,1),this.clearDepth(1),this.clearStencil(0),this.enable(c.DEPTH_TEST),c.depthFunc(c.LEQUAL),c.frontFace(c.CCW),c.cullFace(c.BACK),this.enable(c.CULL_FACE),this.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA)},this.initAttributes=function(){for(var t=0,e=o.length;t<e;t++)o[t]=0},this.enableAttribute=function(t){o[t]=1,0===a[t]&&(c.enableVertexAttribArray(t),a[t]=1),0!==s[t]&&(r.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(t,0),s[t]=0)},this.enableAttributeAndDivisor=function(t,e,r){o[t]=1,0===a[t]&&(c.enableVertexAttribArray(t),a[t]=1),s[t]!==e&&(r.vertexAttribDivisorANGLE(t,e),s[t]=e)},this.disableUnusedAttributes=function(){for(var t=0,e=a.length;t<e;t++)a[t]!==o[t]&&(c.disableVertexAttribArray(t),a[t]=0)},this.enable=function(t){!0!==e[t]&&(c.enable(t),e[t]=!0)},this.disable=function(t){!1!==e[t]&&(c.disable(t),e[t]=!1)},this.getCompressedTextureFormats=function(){if(null===l&&(l=[],r.get("WEBGL_compressed_texture_pvrtc")||r.get("WEBGL_compressed_texture_s3tc")||r.get("WEBGL_compressed_texture_etc1")))for(var t=c.getParameter(c.COMPRESSED_TEXTURE_FORMATS),e=0;e<t.length;e++)l.push(t[e]);return l},this.setBlending=function(t,e,r,i,n,o,a,s){t===THREE.NoBlending?this.disable(c.BLEND):this.enable(c.BLEND),t===u&&s===T||(t===THREE.AdditiveBlending?s?(c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.ONE,c.ONE,c.ONE,c.ONE)):(c.blendEquation(c.FUNC_ADD),c.blendFunc(c.SRC_ALPHA,c.ONE)):t===THREE.SubtractiveBlending?s?(c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.ZERO,c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ONE_MINUS_SRC_ALPHA)):(c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ZERO,c.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?s?(c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.ZERO,c.ZERO,c.SRC_COLOR,c.SRC_ALPHA)):(c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ZERO,c.SRC_COLOR)):s?(c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA)):(c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA)),u=t,T=s),t===THREE.CustomBlending?(n=n||e,o=o||r,a=a||i,e===p&&n===f||(c.blendEquationSeparate(h(e),h(n)),p=e,f=n),r===d&&i===E&&o===m&&a===g||(c.blendFuncSeparate(h(r),h(i),h(o),h(a)),d=r,E=i,m=o,g=a)):g=m=f=E=d=p=null},this.setDepthFunc=function(t){if(v!==t){if(t)switch(t){case THREE.NeverDepth:c.depthFunc(c.NEVER);break;case THREE.AlwaysDepth:c.depthFunc(c.ALWAYS);break;case THREE.LessDepth:c.depthFunc(c.LESS);break;case THREE.LessEqualDepth:c.depthFunc(c.LEQUAL);break;case THREE.EqualDepth:c.depthFunc(c.EQUAL);break;case THREE.GreaterEqualDepth:c.depthFunc(c.GEQUAL);break;case THREE.GreaterDepth:c.depthFunc(c.GREATER);break;case THREE.NotEqualDepth:c.depthFunc(c.NOTEQUAL);break;default:c.depthFunc(c.LEQUAL)}else c.depthFunc(c.LEQUAL);v=t}},this.setDepthTest=function(t){t?this.enable(c.DEPTH_TEST):this.disable(c.DEPTH_TEST)},this.setDepthWrite=function(t){y!==t&&(c.depthMask(t),y=t)},this.setColorWrite=function(t){R!==t&&(c.colorMask(t,t,t,t),R=t)},this.setStencilFunc=function(t,e,r){x===t&&_===e&&b===r||(c.stencilFunc(t,e,r),x=t,_=e,b=r)},this.setStencilOp=function(t,e,r){M===t&&w===e&&S===r||(c.stencilOp(t,e,r),M=t,w=e,S=r)},this.setStencilTest=function(t){t?this.enable(c.STENCIL_TEST):this.disable(c.STENCIL_TEST)},this.setStencilWrite=function(t){H!==t&&(c.stencilMask(t),H=t)},this.setFlipSided=function(t){L!==t&&(t?c.frontFace(c.CW):c.frontFace(c.CCW),L=t)},this.setLineWidth=function(t){t!==A&&(c.lineWidth(t),A=t)},this.setPolygonOffset=function(t,e,r){t?this.enable(c.POLYGON_OFFSET_FILL):this.disable(c.POLYGON_OFFSET_FILL),!t||C===e&&P===r||(c.polygonOffset(e,r),C=e,P=r)},this.getScissorTest=function(){return B},this.setScissorTest=function(t){(B=t)?this.enable(c.SCISSOR_TEST):this.disable(c.SCISSOR_TEST)},this.activeTexture=function(t){void 0===t&&(t=c.TEXTURE0+D-1),I!==t&&(c.activeTexture(t),I=t)},this.bindTexture=function(t,e){void 0===I&&i.activeTexture();var r=U[I];void 0===r&&(U[I]=r={type:void 0,texture:void 0}),r.type===t&&r.texture===e||(c.bindTexture(t,e),r.type=t,r.texture=e)},this.compressedTexImage2D=function(){try{c.compressedTexImage2D.apply(c,arguments)}catch(t){console.error(t)}},this.texImage2D=function(){try{c.texImage2D.apply(c,arguments)}catch(t){console.error(t)}},this.clearColor=function(t,e,r,i){n.set(t,e,r,i),!1===F.equals(n)&&(c.clearColor(t,e,r,i),F.copy(n))},this.clearDepth=function(t){N!==t&&(c.clearDepth(t),N=t)},this.clearStencil=function(t){V!==t&&(c.clearStencil(t),V=t)},this.scissor=function(t){!1===G.equals(t)&&(c.scissor(t.x,t.y,t.z,t.w),G.copy(t))},this.viewport=function(t){!1===O.equals(t)&&(c.viewport(t.x,t.y,t.z,t.w),O.copy(t))},this.reset=function(){for(var t=0;t<a.length;t++)1===a[t]&&(c.disableVertexAttribArray(t),a[t]=0);e={},I=void 0,U={},L=H=y=R=u=l=null}},THREE.WebGLUniforms=function(){function s(){this.seq=[],this.map={}}function r(t,e,r){var i=t[0];if(i<=0||0<i)return t;var n=e*r,o=S[n];if(void 0===o&&(o=new Float32Array(n),S[n]=o),0!==e){i.toArray(o,0);for(var a=1,s=0;a!==e;++a)t[a].toArray(o,s+=r)}return o}function c(t,e){var r=L[e];void 0===r&&(r=new Int32Array(e),L[e]=r);for(var i=0;i!==e;++i)r[i]=t.allocTextureUnit();return r}function i(t,e){t.uniform1f(this.addr,e)}function n(t,e){t.uniform1i(this.addr,e)}function o(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function a(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function h(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}function l(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function u(t,e){t.uniformMatrix3fv(this.addr,!1,e.elements||e)}function p(t,e){t.uniformMatrix4fv(this.addr,!1,e.elements||e)}function d(t,e,r){var i=r.allocTextureUnit();t.uniform1i(this.addr,i),e&&r.setTexture2D(e,i)}function E(t,e,r){var i=r.allocTextureUnit();t.uniform1i(this.addr,i),e&&r.setTextureCube(e,i)}function f(t,e){t.uniform2iv(this.addr,e)}function m(t,e){t.uniform3iv(this.addr,e)}function g(t,e){t.uniform4iv(this.addr,e)}function T(t,e){t.uniform1fv(this.addr,e)}function v(t,e){t.uniform1iv(this.addr,e)}function y(t,e){t.uniform2fv(this.addr,r(e,this.size,2))}function R(t,e){t.uniform3fv(this.addr,r(e,this.size,3))}function H(t,e){t.uniform4fv(this.addr,r(e,this.size,4))}function x(t,e){t.uniformMatrix2fv(this.addr,!1,r(e,this.size,4))}function _(t,e){t.uniformMatrix3fv(this.addr,!1,r(e,this.size,9))}function b(t,e){t.uniformMatrix4fv(this.addr,!1,r(e,this.size,16))}function M(t,e,r){var i=e.length,n=c(r,i);t.uniform1iv(this.addr,n);for(var o=0;o!==i;++o){var a=e[o];a&&r.setTexture2D(a,n[o])}}function w(t,e,r){var i=e.length,n=c(r,i);t.uniform1iv(this.addr,n);for(var o=0;o!==i;++o){var a=e[o];a&&r.setTextureCube(a,n[o])}}var S=[],L=[],A=function(t,e,r){this.id=t,this.addr=r,this.setValue=function(t){switch(t){case 5126:return i;case 35664:return o;case 35665:return a;case 35666:return h;case 35674:return l;case 35675:return u;case 35676:return p;case 35678:return d;case 35680:return E;case 5124:case 35670:return n;case 35667:case 35671:return f;case 35668:case 35672:return m;case 35669:case 35673:return g}}(e.type)},C=function(t,e,r){this.id=t,this.addr=r,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return T;case 35664:return y;case 35665:return R;case 35666:return H;case 35674:return x;case 35675:return _;case 35676:return b;case 35678:return M;case 35680:return w;case 5124:case 35670:return v;case 35667:case 35671:return f;case 35668:case 35672:return m;case 35669:case 35673:return g}}(e.type)},P=function(t){this.id=t,s.call(this)};P.prototype.setValue=function(t,e){for(var r=this.seq,i=0,n=r.length;i!==n;++i){var o=r[i];o.setValue(t,e[o.id])}};function t(t,e,r){s.call(this),this.renderer=r;for(var i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),n=0;n!==i;++n){var o=t.getActiveUniform(e,n),a=o.name;!function(t,e,r){var i=t.name,n=i.length;for(B.lastIndex=0;;){var o=B.exec(i),a=B.lastIndex,s=o[1],c="]"===o[2],o=o[3];if(c&&(s|=0),void 0===o||"["===o&&a+2===n){D(r,new(void 0===o?A:C)(s,t,e));break}o=r.map[s];void 0===o&&(o=new P(s),D(r,o)),r=o}}(o,t.getUniformLocation(e,a),this)}}var B=/([\w\d_]+)(\])?(\[|\.)?/g,D=function(t,e){t.seq.push(e),t.map[e.id]=e};return t.prototype.setValue=function(t,e,r){e=this.map[e];void 0!==e&&e.setValue(t,r,this.renderer)},t.prototype.set=function(t,e,r){var i=this.map[r];void 0!==i&&i.setValue(t,e[r],this.renderer)},t.prototype.setOptional=function(t,e,r){e=e[r];void 0!==e&&this.setValue(t,r,e)},t.upload=function(t,e,r,i){for(var n=0,o=e.length;n!==o;++n){var a=e[n],s=r[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}},t.seqWithValue=function(t,e){for(var r=[],i=0,n=t.length;i!==n;++i){var o=t[i];o.id in e&&r.push(o)}return r},t.splitDynamic=function(t,e){for(var r=null,i=t.length,n=0,o=0;o!==i;++o){var a=t[o],s=e[a.id];s&&!0===s.dynamic?(r=null===r?[]:r).push(a):(n<o&&(t[n]=a),++n)}return n<i&&(t.length=n),r},t.evalDynamic=function(t,e,r,i){for(var n=0,o=t.length;n!==o;++n){var a=e[t[n].id],s=a.onUpdateCallback;void 0!==s&&s.call(a,r,i)}},t}(),THREE.LensFlarePlugin=function(T,v){var y,R,o,H,x,_,b,M,w=T.context,S=T.state;function L(){var t,e,r,i=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),n=new Uint16Array([0,1,2,0,2,3]);y=w.createBuffer(),R=w.createBuffer(),w.bindBuffer(w.ARRAY_BUFFER,y),w.bufferData(w.ARRAY_BUFFER,i,w.STATIC_DRAW),w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,R),w.bufferData(w.ELEMENT_ARRAY_BUFFER,n,w.STATIC_DRAW),b=w.createTexture(),M=w.createTexture(),S.bindTexture(w.TEXTURE_2D,b),w.texImage2D(w.TEXTURE_2D,0,w.RGB,16,16,0,w.RGB,w.UNSIGNED_BYTE,null),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_WRAP_S,w.CLAMP_TO_EDGE),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_WRAP_T,w.CLAMP_TO_EDGE),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_MAG_FILTER,w.NEAREST),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_MIN_FILTER,w.NEAREST),S.bindTexture(w.TEXTURE_2D,M),w.texImage2D(w.TEXTURE_2D,0,w.RGBA,16,16,0,w.RGBA,w.UNSIGNED_BYTE,null),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_WRAP_S,w.CLAMP_TO_EDGE),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_WRAP_T,w.CLAMP_TO_EDGE),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_MAG_FILTER,w.NEAREST),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_MIN_FILTER,w.NEAREST),o={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},t=o,e=w.createProgram(),r=w.createShader(w.FRAGMENT_SHADER),i=w.createShader(w.VERTEX_SHADER),n="precision "+T.getPrecision()+" float;\n",w.shaderSource(r,n+t.fragmentShader),w.shaderSource(i,n+t.vertexShader),w.compileShader(r),w.compileShader(i),w.attachShader(e,r),w.attachShader(e,i),w.linkProgram(e),H=e,x={vertex:w.getAttribLocation(H,"position"),uv:w.getAttribLocation(H,"uv")},_={renderType:w.getUniformLocation(H,"renderType"),map:w.getUniformLocation(H,"map"),occlusionMap:w.getUniformLocation(H,"occlusionMap"),opacity:w.getUniformLocation(H,"opacity"),color:w.getUniformLocation(H,"color"),scale:w.getUniformLocation(H,"scale"),rotation:w.getUniformLocation(H,"rotation"),screenPosition:w.getUniformLocation(H,"screenPosition")}}this.render=function(t,e,r){if(0!==v.length){var i=new THREE.Vector3,n=r.w/r.z,o=.5*r.z,a=.5*r.w,s=16/r.w,c=new THREE.Vector2(s*n,s),h=new THREE.Vector3(1,1,0),l=new THREE.Vector2(1,1),u=new THREE.Box2;u.min.set(0,0),u.max.set(r.z-16,r.w-16),void 0===H&&L(),w.useProgram(H),S.initAttributes(),S.enableAttribute(x.vertex),S.enableAttribute(x.uv),S.disableUnusedAttributes(),w.uniform1i(_.occlusionMap,0),w.uniform1i(_.map,1),w.bindBuffer(w.ARRAY_BUFFER,y),w.vertexAttribPointer(x.vertex,2,w.FLOAT,!1,16,0),w.vertexAttribPointer(x.uv,2,w.FLOAT,!1,16,8),w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,R),S.disable(w.CULL_FACE),S.setDepthWrite(!1);for(var p=0,d=v.length;p<d;p++){s=16/r.w,c.set(s*n,s);var E=v[p];if(i.set(E.matrixWorld.elements[12],E.matrixWorld.elements[13],E.matrixWorld.elements[14]),i.applyMatrix4(e.matrixWorldInverse),i.applyProjection(e.projectionMatrix),h.copy(i),l.x=r.x+h.x*o+o-8,l.y=r.y+h.y*a+a-8,!0===u.containsPoint(l)){S.activeTexture(w.TEXTURE0),S.bindTexture(w.TEXTURE_2D,null),S.activeTexture(w.TEXTURE1),S.bindTexture(w.TEXTURE_2D,b),w.copyTexImage2D(w.TEXTURE_2D,0,w.RGB,l.x,l.y,16,16,0),w.uniform1i(_.renderType,0),w.uniform2f(_.scale,c.x,c.y),w.uniform3f(_.screenPosition,h.x,h.y,h.z),S.disable(w.BLEND),S.enable(w.DEPTH_TEST),w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0),S.activeTexture(w.TEXTURE0),S.bindTexture(w.TEXTURE_2D,M),w.copyTexImage2D(w.TEXTURE_2D,0,w.RGBA,l.x,l.y,16,16,0),w.uniform1i(_.renderType,1),S.disable(w.DEPTH_TEST),S.activeTexture(w.TEXTURE1),S.bindTexture(w.TEXTURE_2D,b),w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0),E.positionScreen.copy(h),E.customUpdateCallback?E.customUpdateCallback(E):E.updateLensFlares(),w.uniform1i(_.renderType,2),S.enable(w.BLEND);for(var f=0,m=E.lensFlares.length;f<m;f++){var g=E.lensFlares[f];.001<g.opacity&&.001<g.scale&&(h.x=g.x,h.y=g.y,h.z=g.z,s=g.size*g.scale/r.w,c.x=s*n,c.y=s,w.uniform3f(_.screenPosition,h.x,h.y,h.z),w.uniform2f(_.scale,c.x,c.y),w.uniform1f(_.rotation,g.rotation),w.uniform1f(_.opacity,g.opacity),w.uniform3f(_.color,g.color.r,g.color.g,g.color.b),S.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst),T.setTexture2D(g.texture,1),w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0))}}}S.enable(w.CULL_FACE),S.enable(w.DEPTH_TEST),S.setDepthWrite(!0),T.resetGLState()}}},THREE.SpritePlugin=function(u,p){var d,E,f,m,g,T,v=u.context,y=u.state,R=new THREE.Vector3,H=new THREE.Quaternion,x=new THREE.Vector3;function _(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),e=new Uint16Array([0,1,2,0,2,3]);d=v.createBuffer(),E=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,d),v.bufferData(v.ARRAY_BUFFER,t,v.STATIC_DRAW),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,E),v.bufferData(v.ELEMENT_ARRAY_BUFFER,e,v.STATIC_DRAW),r=v.createProgram(),t=v.createShader(v.VERTEX_SHADER),e=v.createShader(v.FRAGMENT_SHADER),v.shaderSource(t,["precision "+u.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),v.shaderSource(e,["precision "+u.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),v.compileShader(t),v.compileShader(e),v.attachShader(r,t),v.attachShader(r,e),v.linkProgram(r),f=r,m={position:v.getAttribLocation(f,"position"),uv:v.getAttribLocation(f,"uv")},g={uvOffset:v.getUniformLocation(f,"uvOffset"),uvScale:v.getUniformLocation(f,"uvScale"),rotation:v.getUniformLocation(f,"rotation"),scale:v.getUniformLocation(f,"scale"),color:v.getUniformLocation(f,"color"),map:v.getUniformLocation(f,"map"),opacity:v.getUniformLocation(f,"opacity"),modelViewMatrix:v.getUniformLocation(f,"modelViewMatrix"),projectionMatrix:v.getUniformLocation(f,"projectionMatrix"),fogType:v.getUniformLocation(f,"fogType"),fogDensity:v.getUniformLocation(f,"fogDensity"),fogNear:v.getUniformLocation(f,"fogNear"),fogFar:v.getUniformLocation(f,"fogFar"),fogColor:v.getUniformLocation(f,"fogColor"),alphaTest:v.getUniformLocation(f,"alphaTest")};e=document.createElement("canvas");e.width=8,e.height=8;var r=e.getContext("2d");r.fillStyle="white",r.fillRect(0,0,8,8),(T=new THREE.Texture(e)).needsUpdate=!0}function b(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}this.render=function(t,e){if(0!==p.length){void 0===f&&_(),v.useProgram(f),y.initAttributes(),y.enableAttribute(m.position),y.enableAttribute(m.uv),y.disableUnusedAttributes(),y.disable(v.CULL_FACE),y.enable(v.BLEND),v.bindBuffer(v.ARRAY_BUFFER,d),v.vertexAttribPointer(m.position,2,v.FLOAT,!1,16,0),v.vertexAttribPointer(m.uv,2,v.FLOAT,!1,16,8),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,E),v.uniformMatrix4fv(g.projectionMatrix,!1,e.projectionMatrix.elements),y.activeTexture(v.TEXTURE0),v.uniform1i(g.map,0);var r=0,i=0,n=t.fog;n?(v.uniform3f(g.fogColor,n.color.r,n.color.g,n.color.b),n instanceof THREE.Fog?(v.uniform1f(g.fogNear,n.near),v.uniform1f(g.fogFar,n.far),v.uniform1i(g.fogType,1),i=r=1):n instanceof THREE.FogExp2&&(v.uniform1f(g.fogDensity,n.density),v.uniform1i(g.fogType,2),i=r=2)):(v.uniform1i(g.fogType,0),i=r=0);for(var o=0,a=p.length;o<a;o++)(c=p[o]).modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,c.matrixWorld),c.z=-c.modelViewMatrix.elements[14];p.sort(b);for(var s=[],o=0,a=p.length;o<a;o++){var c,h=(c=p[o]).material;v.uniform1f(g.alphaTest,h.alphaTest),v.uniformMatrix4fv(g.modelViewMatrix,!1,c.modelViewMatrix.elements),c.matrixWorld.decompose(R,H,x),s[0]=x.x,s[1]=x.y;var l=0;r!==(l=t.fog&&h.fog?i:l)&&(v.uniform1i(g.fogType,l),r=l),null!==h.map?(v.uniform2f(g.uvOffset,h.map.offset.x,h.map.offset.y),v.uniform2f(g.uvScale,h.map.repeat.x,h.map.repeat.y)):(v.uniform2f(g.uvOffset,0,0),v.uniform2f(g.uvScale,1,1)),v.uniform1f(g.opacity,h.opacity),v.uniform3f(g.color,h.color.r,h.color.g,h.color.b),v.uniform1f(g.rotation,h.rotation),v.uniform2fv(g.scale,s),y.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),y.setDepthTest(h.depthTest),y.setDepthWrite(h.depthWrite),h.map?u.setTexture2D(h.map,0):u.setTexture2D(T,0),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0)}y.enable(v.CULL_FACE),u.resetGLState()}}},Object.defineProperties(THREE.Box2.prototype,{empty:{value:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()}},isIntersectionBox:{value:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)}}}),Object.defineProperties(THREE.Box3.prototype,{empty:{value:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()}},isIntersectionBox:{value:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)}},isIntersectionSphere:{value:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}}),Object.defineProperties(THREE.Matrix3.prototype,{multiplyVector3:{value:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)}},multiplyVector3Array:{value:function(t){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)}}}),Object.defineProperties(THREE.Matrix4.prototype,{extractPosition:{value:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)}},setRotationFromQuaternion:{value:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)}},multiplyVector3:{value:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),t.applyProjection(this)}},multiplyVector4:{value:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)}},multiplyVector3Array:{value:function(t){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)}},rotateAxis:{value:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)}},crossVector:{value:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)}},translate:{value:function(t){console.error("THREE.Matrix4: .translate() has been removed.")}},rotateX:{value:function(t){console.error("THREE.Matrix4: .rotateX() has been removed.")}},rotateY:{value:function(t){console.error("THREE.Matrix4: .rotateY() has been removed.")}},rotateZ:{value:function(t){console.error("THREE.Matrix4: .rotateZ() has been removed.")}},rotateByAxis:{value:function(t,e){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")}}}),Object.defineProperties(THREE.Plane.prototype,{isIntersectionLine:{value:function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)}}}),Object.defineProperties(THREE.Quaternion.prototype,{multiplyVector3:{value:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)}}}),Object.defineProperties(THREE.Ray.prototype,{isIntersectionBox:{value:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)}},isIntersectionPlane:{value:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)}},isIntersectionSphere:{value:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}}),Object.defineProperties(THREE.Vector3.prototype,{setEulerFromRotationMatrix:{value:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")}},setEulerFromQuaternion:{value:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")}},getPositionFromMatrix:{value:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)}},getScaleFromMatrix:{value:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)}},getColumnFromMatrix:{value:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)}}}),THREE.Face4=function(t,e,r,i,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(t,e,r,n,o,a)},THREE.Vertex=function(t,e,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new THREE.Vector3(t,e,r)},Object.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},getChildByName:{value:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)}},renderDepth:{set:function(t){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")}},translate:{value:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(t){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(THREE,{PointCloud:{value:function(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new THREE.Points(t,e)}},ParticleSystem:{value:function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new THREE.Points(t,e)}}}),Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(t){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(t){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(t){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length}}}),Object.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}},addIndex:{value:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)}},addDrawCall:{value:function(t,e,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)}},clearDrawCalls:{value:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()}},computeTangents:{value:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")}},computeOffsets:{value:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}}),Object.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(t){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new THREE.Color}}}),Object.defineProperties(THREE,{PointCloudMaterial:{value:function(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(t)}},ParticleBasicMaterial:{value:function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(t)}},ParticleSystemMaterial:{value:function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(t)}}}),Object.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(t){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.defineProperties(THREE.WebGLRenderer.prototype,{supportsFloatTextures:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")}},supportsHalfFloatTextures:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")}},supportsStandardDerivatives:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")}},supportsCompressedTextureS3TC:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")}},supportsCompressedTexturePVRTC:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")}},supportsBlendMinMax:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")}},supportsVertexTextures:{value:function(){return this.capabilities.vertexTextures}},supportsInstancedArrays:{value:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")}},enableScissorTest:{value:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)}},initMaterial:{value:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")}},addPrePlugin:{value:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")}},addPostPlugin:{value:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")}},updateShadowMap:{value:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=t}}}),Object.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(THREE.Audio.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");var e=this;return(new THREE.AudioLoader).load(t,function(t){e.setBuffer(t)}),this}}}),THREE.GeometryUtils={merge:function(t,e,r){var i;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(t,e,r,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var n=new THREE.TextureLoader;n.setCrossOrigin(this.crossOrigin);i=n.load(t,r,void 0,i);return e&&(i.mapping=e),i},loadTextureCube:function(t,e,r,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var n=new THREE.CubeTextureLoader;n.setCrossOrigin(this.crossOrigin);i=n.load(t,r,void 0,i);return e&&(i.mapping=e),i},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}},THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(t,e){console.warn("THREE.Projector: .projectVector() is now vector.project()."),t.project(e)},this.unprojectVector=function(t,e){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),t.unproject(e)},this.pickingRay=function(t,e){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.MeshFaceMaterial=THREE.MultiMaterial,Object.defineProperties(THREE.LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),THREE.CurveUtils={tangentQuadraticBezier:function(t,e,r,i){return 2*(1-t)*(r-e)+2*t*(i-r)},tangentCubicBezier:function(t,e,r,i,n){return-3*e*(1-t)*(1-t)+3*r*(1-t)*(1-t)-6*t*r*(1-t)+6*t*i*(1-t)-3*t*t*i+3*t*t*n},tangentSpline:function(t,e,r,i,n){return 6*t*t-6*t+(3*t*t-4*t+1)+(-6*t*t+6*t)+(3*t*t-2*t)},interpolate:function(t,e,r,i,n){var o=.5*(r-t),t=.5*(i-e),i=n*n;return(2*e-2*r+o+t)*(n*i)+(-3*e+3*r-2*o-t)*i+o*n+e}},THREE.SceneUtils={createMultiMaterialObject:function(t,e){for(var r=new THREE.Group,i=0,n=e.length;i<n;i++)r.add(new THREE.Mesh(t,e[i]));return r},detach:function(t,e,r){t.applyMatrix(e.matrixWorld),e.remove(t),r.add(t)},attach:function(t,e,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),t.applyMatrix(i),e.remove(t),r.add(t)}},THREE.ShapeUtils={area:function(t){for(var e=t.length,r=0,i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y;return.5*r},triangulate:function(t,e){var r=t.length;if(r<3)return null;var i,n,o=[],a=[],s=[];if(0<THREE.ShapeUtils.area(t))for(l=0;l<r;l++)a[l]=l;else for(l=0;l<r;l++)a[l]=r-1-l;for(var c=r,h=2*c,l=c-1;2<c;){if(h--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),e?s:o;if(function(t,e,r,i,n,o){var a,s,c=t[o[e]].x,h=t[o[e]].y,l=t[o[r]].x,u=t[o[r]].y,p=t[o[i]].x,d=t[o[i]].y;if(!(Number.EPSILON>(l-c)*(d-h)-(u-h)*(p-c))){for(var E=p-l,f=d-u,m=c-p,g=h-d,T=l-c,v=u-h,y=0;y<n;y++)if(a=t[o[y]].x,s=t[o[y]].y,!(a===c&&s===h||a===l&&s===u||a===p&&s===d)&&E*(s-u)-f*(a-l)>=-Number.EPSILON&&m*(s-d)-g*(a-p)>=-Number.EPSILON&&T*(s-h)-v*(a-c)>=-Number.EPSILON)return;return 1}}(t,i=c<=(i=l)?0:i,l=c<=(l=i+1)?0:l,n=c<=(n=l+1)?0:n,c,a)){var u,p,d=a[i],E=a[l],f=a[n];for(o.push([t[d],t[E],t[f]]),s.push([a[i],a[l],a[n]]),p=(u=l)+1;p<c;u++,p++)a[u]=a[p];h=2*--c}}return e?s:o},triangulateShape:function(t,e){function R(t,e,r){return t.x!==e.x?t.x<e.x?t.x<=r.x&&r.x<=e.x:e.x<=r.x&&r.x<=t.x:t.y<e.y?t.y<=r.y&&r.y<=e.y:e.y<=r.y&&r.y<=t.y}function y(t,e,r,i,n){var o,a=e.x-t.x,s=e.y-t.y,c=i.x-r.x,h=i.y-r.y,l=t.x-r.x,u=t.y-r.y,p=s*c-a*h,d=s*l-a*u;if(Math.abs(p)>Number.EPSILON){if(0<p){if(d<0||p<d)return[];if((o=h*l-c*u)<0||p<o)return[]}else{if(0<d||d<p)return[];if(0<(o=h*l-c*u)||o<p)return[]}if(0===o)return!n||0!=d&&d!=p?[t]:[];if(o===p)return!n||0!=d&&d!=p?[e]:[];if(0==d)return[r];if(d==p)return[i];p=o/p;return[{x:t.x+p*a,y:t.y+p*s}]}if(0!=d||h*l!=c*u)return[];var E,f,m,g,T,v,y,s=0==a&&0==s,h=0==c&&0==h;return s&&h?t.x!==r.x||t.y!==r.y?[]:[t]:s?R(r,i,t)?[t]:[]:h?R(t,e,r)?[r]:[]:(r=0!=a?(g=t.x<e.x?(m=(E=t).x,(f=e).x):(m=(E=e).x,(f=t).x),r.x<i.x?(y=(T=r).x,(v=i).x):(y=(T=i).x,(v=r).x)):(g=t.y<e.y?(m=(E=t).y,(f=e).y):(m=(E=e).y,(f=t).y),r.y<i.y?(y=(T=r).y,(v=i).y):(y=(T=i).y,(v=r).y)),m<=y?g<y?[]:g===y?n?[]:[T]:g<=r?[T,f]:[T,v]:r<m?[]:m===r?n?[]:[E]:g<=r?[E,f]:[E,v])}function H(t,e,r,i){var n=e.x-t.x,o=e.y-t.y,a=r.x-t.x,e=r.y-t.y,r=i.x-t.x,i=i.y-t.y,t=n*e-o*a,o=n*i-o*r;if(Math.abs(t)>Number.EPSILON){a=r*e-i*a;return 0<t?0<=o&&0<=a:0<=o||0<=a}return 0<o}for(var r,i,n,o,a={},s=t.concat(),c=0,h=e.length;c<h;c++)Array.prototype.push.apply(s,e[c]);for(u=0,p=s.length;u<p;u++)void 0!==a[n=s[u].x+":"+s[u].y]&&console.warn("THREE.Shape: Duplicate point",n),a[n]=u;for(var t=function(t,a){for(var e,r,i,n,o,s,c,h=t.concat(),l=[],u=[],p=0,d=a.length;p<d;p++)l.push(p);for(var E=0,f=2*l.length;0<l.length;){if(--f<0){console.log("Infinite Loop! Holes left:"+l.length+", Probably Hole outside Shape!");break}for(e=E;e<h.length;e++){for(var m=h[e],g=-1,p=0;p<l.length;p++)if(r=l[p],void 0===u[i=m.x+":"+m.y+":"+r]){for(var T=a[r],v=0;v<T.length;v++)if(c=T[v],function(t,e){var r=h.length-1,i=t-1,n=t+1;if(H(h[t],h[i=i<0?r:i],h[n=r<n?0:n],T[e])){i=T.length-1,r=e-1,n=e+1;return H(T[e],T[r=r<0?i:r],T[n=i<n?0:n],h[t])?1:void 0}}(e,v)&&!function(t,e){for(var r,i=0;i<h.length;i++)if(r=i+1,r%=h.length,0<y(t,e,h[i],h[r],!0).length)return 1}(m,c)&&!function(t,e){for(var r,i,n,o=0;o<l.length;o++)for(r=a[l[o]],i=0;i<r.length;i++)if(n=i+1,n%=r.length,0<y(t,e,r[i],r[n],!0).length)return 1}(m,c)){g=v,l.splice(p,1),n=h.slice(0,e+1),o=h.slice(e),s=T.slice(g),c=T.slice(0,g+1),h=n.concat(s).concat(c).concat(o),E=e;break}if(0<=g)break;u[i]=!0}if(0<=g)break}}return h}(t,e),l=THREE.ShapeUtils.triangulate(t,!1),u=0,p=l.length;u<p;u++)for(i=l[u],r=0;r<3;r++)void 0!==(o=a[n=i[r].x+":"+i[r].y])&&(i[r]=o);return l.concat()},isClockWise:function(t){return THREE.ShapeUtils.area(t)<0},b2:function(t,e,r,i){return(n=1-(n=t))*n*e+2*(1-t)*t*r+t*t*i;var n},b3:function(t,e,r,i,n){return(o=1-(o=t))*o*o*e+3*(e=1-t)*e*t*r+3*(1-t)*t*t*i+t*t*t*n;var o}},THREE.Curve=function(){},THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(t){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(t){t=this.getUtoTmapping(t);return this.getPoint(t)},getPoints:function(t){t=t||5;for(var e=[],r=0;r<=t;r++)e.push(this.getPoint(r/t));return e},getSpacedPoints:function(t){t=t||5;for(var e=[],r=0;r<=t;r++)e.push(this.getPointAt(r/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t=t||(this.__arcLengthDivisions||200),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;r<=t;r++)o+=(e=this.getPoint(r/t)).distanceTo(n),i.push(o),n=e;return this.cacheArcLengths=i},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){for(var r,i=this.getLengths(),n=0,o=i.length,a=e||t*i[o-1],s=0,c=o-1;s<=c;)if((r=i[n=Math.floor(s+(c-s)/2)]-a)<0)s=n+1;else{if(!(0<r)){c=n;break}c=n-1}if(i[n=c]===a)return n/(o-1);t=i[n];return(n+(a-t)/(i[n+1]-t))/(o-1)},getTangent:function(t){var e=t-1e-4,t=t+1e-4;1<t&&(t=1);e=this.getPoint(e=e<0?0:e);return this.getPoint(t).clone().sub(e).normalize()},getTangentAt:function(t){t=this.getUtoTmapping(t);return this.getTangent(t)}},THREE.Curve.create=function(t,e){return t.prototype=Object.create(THREE.Curve.prototype),(t.prototype.constructor=t).prototype.getPoint=e,t},THREE.CurvePath=function(){this.curves=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(t){this.curves.push(t)},THREE.CurvePath.prototype.closePath=function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new THREE.LineCurve(e,t))},THREE.CurvePath.prototype.getPoint=function(t){for(var e=t*this.getLength(),r=this.getCurveLengths(),i=0;i<r.length;){if(r[i]>=e){var n=r[i]-e,o=this.curves[i],n=1-n/o.getLength();return o.getPointAt(n)}i++}return null},THREE.CurvePath.prototype.getLength=function(){var t=this.getCurveLengths();return t[t.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,r=0,i=this.curves.length;r<i;r++)e+=this.curves[r].getLength(),t.push(e);return this.cacheLengths=t},THREE.CurvePath.prototype.createPointsGeometry=function(t){t=this.getPoints(t);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(t){t=this.getSpacedPoints(t);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(t){for(var e=new THREE.Geometry,r=0,i=t.length;r<i;r++){var n=t[r];e.vertices.push(new THREE.Vector3(n.x,n.y,n.z||0))}return e},THREE.Font=function(t){this.data=t},THREE.Font.prototype={constructor:THREE.Font,generateShapes:function(t,s,x){void 0===s&&(s=100),void 0===x&&(x=4);for(var _=this.data,e=function(t){for(var e=String(t).split(""),r=s/_.resolution,i=0,n=[],o=0;o<e.length;o++){var a=function(t,e,r){t=_.glyphs[t]||_.glyphs["?"];if(t){var i,n,o,a,s,c,h,l,u,p,d,E=new THREE.Path,f=[],m=THREE.ShapeUtils.b2,g=THREE.ShapeUtils.b3;if(t.o)for(var T=t._cachedOutline||(t._cachedOutline=t.o.split(" ")),v=0,y=T.length;v<y;)switch(T[v++]){case"m":i=T[v++]*e+r,n=T[v++]*e,E.moveTo(i,n);break;case"l":i=T[v++]*e+r,n=T[v++]*e,E.lineTo(i,n);break;case"q":if(o=T[v++]*e+r,a=T[v++]*e,h=T[v++]*e+r,l=T[v++]*e,E.quadraticCurveTo(h,l,o,a),d=f[f.length-1]){s=d.x,c=d.y;for(var R=1;R<=x;R++)m(H=R/x,s,h,o),m(H,c,l,a)}break;case"b":if(o=T[v++]*e+r,a=T[v++]*e,h=T[v++]*e+r,l=T[v++]*e,u=T[v++]*e+r,p=T[v++]*e,E.bezierCurveTo(h,l,u,p,o,a),d=f[f.length-1]){s=d.x,c=d.y;for(var H,R=1;R<=x;R++)g(H=R/x,s,h,u,o),g(H,c,l,p,a)}}return{offset:t.ha*e,path:E}}}(e[o],r,i);i+=a.offset,n.push(a.path)}return n}(t),r=[],i=0,n=e.length;i<n;i++)Array.prototype.push.apply(r,e[i].toShapes());return r}},THREE.Path=function(t){THREE.CurvePath.call(this),this.actions=[],t&&this.fromPoints(t)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.Path.prototype.constructor=THREE.Path,THREE.Path.prototype.fromPoints=function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},THREE.Path.prototype.moveTo=function(t,e){this.actions.push({action:"moveTo",args:[t,e]})},THREE.Path.prototype.lineTo=function(t,e){var r=this.actions[this.actions.length-1].args,i=r[r.length-2],r=r[r.length-1],r=new THREE.LineCurve(new THREE.Vector2(i,r),new THREE.Vector2(t,e));this.curves.push(r),this.actions.push({action:"lineTo",args:[t,e]})},THREE.Path.prototype.quadraticCurveTo=function(t,e,r,i){var n=this.actions[this.actions.length-1].args,o=n[n.length-2],n=n[n.length-1],n=new THREE.QuadraticBezierCurve(new THREE.Vector2(o,n),new THREE.Vector2(t,e),new THREE.Vector2(r,i));this.curves.push(n),this.actions.push({action:"quadraticCurveTo",args:[t,e,r,i]})},THREE.Path.prototype.bezierCurveTo=function(t,e,r,i,n,o){var a=this.actions[this.actions.length-1].args,s=a[a.length-2],a=a[a.length-1],a=new THREE.CubicBezierCurve(new THREE.Vector2(s,a),new THREE.Vector2(t,e),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(a),this.actions.push({action:"bezierCurveTo",args:[t,e,r,i,n,o]})},THREE.Path.prototype.splineThru=function(t){var e=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],r=r[r.length-1],r=[new THREE.Vector2(i,r)];Array.prototype.push.apply(r,t);r=new THREE.SplineCurve(r);this.curves.push(r),this.actions.push({action:"splineThru",args:e})},THREE.Path.prototype.arc=function(t,e,r,i,n,o){var a=this.actions[this.actions.length-1].args,s=a[a.length-2],a=a[a.length-1];this.absarc(t+s,e+a,r,i,n,o)},THREE.Path.prototype.absarc=function(t,e,r,i,n,o){this.absellipse(t,e,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(t,e,r,i,n,o,a,s){var c=this.actions[this.actions.length-1].args,h=c[c.length-2],c=c[c.length-1];this.absellipse(t+h,e+c,r,i,n,o,a,s)},THREE.Path.prototype.absellipse=function(t,e,r,i,n,o,a,s){var c=[t,e,r,i,n,o,a,s||0],s=new THREE.EllipseCurve(t,e,r,i,n,o,a,s);this.curves.push(s);s=s.getPoint(1);c.push(s.x),c.push(s.y),this.actions.push({action:"ellipse",args:c})},THREE.Path.prototype.getSpacedPoints=function(t){t=t||40;for(var e=[],r=0;r<t;r++)e.push(this.getPoint(r/t));return this.autoClose&&e.push(e[0]),e},THREE.Path.prototype.getPoints=function(t){t=t||12;for(var e,r,i,n=THREE.ShapeUtils.b2,o=THREE.ShapeUtils.b3,a=[],s=0,c=this.actions.length;s<c;s++){var h=this.actions[s],l=h.action,u=h.args;switch(l){case"moveTo":case"lineTo":a.push(new THREE.Vector2(u[0],u[1]));break;case"quadraticCurveTo":for(var p=u[2],d=u[3],E=u[0],f=u[1],m=0<a.length?(i=(y=a[a.length-1]).x,y.y):(i=(y=this.actions[s-1].args)[y.length-2],y[y.length-1]),g=1;g<=t;g++){var T=n(P=g/t,i,E,p),v=n(P,m,f,d);a.push(new THREE.Vector2(T,v))}break;case"bezierCurveTo":p=u[4],d=u[5],E=u[0],f=u[1],e=u[2],r=u[3],m=0<a.length?(i=(y=a[a.length-1]).x,y.y):(i=(y=this.actions[s-1].args)[y.length-2],y[y.length-1]);for(g=1;g<=t;g++)T=o(P=g/t,i,E,e,p),v=o(P,m,f,r,d),a.push(new THREE.Vector2(T,v));break;case"splineThru":for(var y=this.actions[s-1].args,R=[new THREE.Vector2(y[y.length-2],y[y.length-1])],H=t*u[0].length,R=R.concat(u[0]),x=new THREE.SplineCurve(R),g=1;g<=H;g++)a.push(x.getPointAt(g/H));break;case"arc":for(var _=u[0],b=u[1],M=u[2],w=u[3],S=u[4],L=!!u[5],A=S-w,C=2*t,g=1;g<=C;g++){var P=g/C;B=w+(P=!L?1-P:P)*A,T=_+M*Math.cos(B),v=b+M*Math.sin(B),a.push(new THREE.Vector2(T,v))}break;case"ellipse":var B,D,I,_=u[0],b=u[1],U=u[2],F=u[3],w=u[4],S=u[5],L=!!u[6],N=u[7],A=S-w,C=2*t;0!==N&&(D=Math.cos(N),I=Math.sin(N));for(g=1;g<=C;g++){var V,P=g/C;B=w+(P=!L?1-P:P)*A,T=_+U*Math.cos(B),v=b+F*Math.sin(B),0!==N&&(T=((V=T)-_)*D-(v-b)*I+_,v=(V-_)*I+(v-b)*D+b),a.push(new THREE.Vector2(T,v))}}}var G=a[a.length-1];return Math.abs(G.x-a[0].x)<Number.EPSILON&&Math.abs(G.y-a[0].y)<Number.EPSILON&&a.splice(a.length-1,1),this.autoClose&&a.push(a[0]),a},THREE.Path.prototype.toShapes=function(t,e){function r(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,e.push(o)}return e}var i=THREE.ShapeUtils.isClockWise,n=function(t){for(var e=[],r=new THREE.Path,i=0,n=t.length;i<n;i++){var o=t[i],a=o.args,o=o.action;"moveTo"===o&&0!==r.actions.length&&(e.push(r),r=new THREE.Path),r[o].apply(r,a)}return 0!==r.actions.length&&e.push(r),e}(this.actions);if(0===n.length)return[];if(!0===e)return r(n);var o,a,s,c=[];if(1===n.length)return a=n[0],(s=new THREE.Shape).actions=a.actions,s.curves=a.curves,c.push(s),c;var h,l=!i(n[0].getPoints()),l=t?!l:l,u=[],p=[],d=[],E=0;p[E]=void 0,d[E]=[];for(var f=0,m=n.length;f<m;f++)o=i(h=(a=n[f]).getPoints()),(o=t?!o:o)?(!l&&p[E]&&E++,p[E]={s:new THREE.Shape,p:h},p[E].s.actions=a.actions,p[E].s.curves=a.curves,l&&E++,d[E]=[]):d[E].push({h:a,p:h[0]});if(!p[0])return r(n);if(1<p.length){for(var g=!1,T=[],v=0,y=p.length;v<y;v++)u[v]=[];for(v=0,y=p.length;v<y;v++)for(var R=d[v],H=0;H<R.length;H++){for(var x=R[H],_=!0,b=0;b<p.length;b++)!function(t,e){for(var r=e.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=e[n],s=e[o],c=s.x-a.x,h=s.y-a.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(a=e[o],c=-c,s=e[n],h=-h),!(t.y<a.y||t.y>s.y))if(t.y===a.y){if(t.x===a.x)return 1}else{c=h*(t.x-a.x)-c*(t.y-a.y);if(0==c)return 1;c<0||(i=!i)}}else if(t.y===a.y&&(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x))return 1}return i}(x.p,p[b].p)||(v!==b&&T.push({froms:v,tos:b,hole:H}),_?(_=!1,u[b].push(x)):g=!0);_&&u[v].push(x)}0<T.length&&(g||(d=u))}for(var f=0,M=p.length;f<M;f++){s=p[f].s,c.push(s);for(var w,S=0,L=(w=d[f]).length;S<L;S++)s.holes.push(w[S].h)}return c},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.constructor=THREE.Shape,THREE.Shape.prototype.extrude=function(t){return new THREE.ExtrudeGeometry(this,t)},THREE.Shape.prototype.makeGeometry=function(t){return new THREE.ShapeGeometry(this,t)},THREE.Shape.prototype.getPointsHoles=function(t){for(var e=[],r=0,i=this.holes.length;r<i;r++)e[r]=this.holes[r].getPoints(t);return e},THREE.Shape.prototype.extractAllPoints=function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},THREE.Shape.prototype.extractPoints=function(t){return this.extractAllPoints(t)},THREE.LineCurve=function(t,e){this.v1=t,this.v2=e},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(t){var e=this.v2.clone().sub(this.v1);return e.multiplyScalar(t).add(this.v1),e},THREE.LineCurve.prototype.getPointAt=function(t){return this.getPoint(t)},THREE.LineCurve.prototype.getTangent=function(t){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(t,e,r){this.v0=t,this.v1=e,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var e=THREE.ShapeUtils.b2;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x),e(t,this.v0.y,this.v1.y,this.v2.y))},THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var e=THREE.CurveUtils.tangentQuadraticBezier;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x),e(t,this.v0.y,this.v1.y,this.v2.y)).normalize()},THREE.CubicBezierCurve=function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(t){var e=THREE.ShapeUtils.b3;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},THREE.CubicBezierCurve.prototype.getTangent=function(t){var e=THREE.CurveUtils.tangentCubicBezier;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()},THREE.SplineCurve=function(t){this.points=null==t?[]:t},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(t){var e=this.points,r=(e.length-1)*t,i=Math.floor(r),n=r-i,o=e[0===i?i:i-1],t=e[i],r=e[i>e.length-2?e.length-1:i+1],e=e[i>e.length-3?e.length-1:i+2],i=THREE.CurveUtils.interpolate;return new THREE.Vector2(i(o.x,t.x,r.x,e.x,n),i(o.y,t.y,r.y,e.y,n))},THREE.EllipseCurve=function(t,e,r,i,n,o,a,s){this.aX=t,this.aY=e,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a,this.aRotation=s||0},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(t){var e=this.aEndAngle-this.aStartAngle;e<0&&(e+=2*Math.PI),e>2*Math.PI&&(e-=2*Math.PI);var r,i=!0===this.aClockwise?this.aEndAngle+(1-t)*(2*Math.PI-e):this.aStartAngle+t*e,n=this.aX+this.xRadius*Math.cos(i),o=this.aY+this.yRadius*Math.sin(i);return 0!==this.aRotation&&(r=Math.cos(this.aRotation),t=Math.sin(this.aRotation),e=o,n=((i=n)-this.aX)*r-(e-this.aY)*t+this.aX,o=(i-this.aX)*t+(e-this.aY)*r+this.aY),new THREE.Vector2(n,o)},THREE.ArcCurve=function(t,e,r,i,n,o){THREE.EllipseCurve.call(this,t,e,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create(function(t,e){this.v1=t,this.v2=e},function(t){var e=new THREE.Vector3;return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(t,e,r){this.v0=t,this.v1=e,this.v2=r},function(t){var e=THREE.ShapeUtils.b2;return new THREE.Vector3(e(t,this.v0.x,this.v1.x,this.v2.x),e(t,this.v0.y,this.v1.y,this.v2.y),e(t,this.v0.z,this.v1.z,this.v2.z))}),THREE.CubicBezierCurve3=THREE.Curve.create(function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},function(t){var e=THREE.ShapeUtils.b3;return new THREE.Vector3(e(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z))}),THREE.SplineCurve3=THREE.Curve.create(function(t){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=null==t?[]:t},function(t){var e=this.points,r=(e.length-1)*t,i=Math.floor(r),n=r-i,o=e[0==i?i:i-1],t=e[i],r=e[i>e.length-2?e.length-1:i+1],e=e[i>e.length-3?e.length-1:i+2],i=THREE.CurveUtils.interpolate;return new THREE.Vector3(i(o.x,t.x,r.x,e.x,n),i(o.y,t.y,r.y,e.y,n),i(o.z,t.z,r.z,e.z,n))}),THREE.CatmullRomCurve3=function(){var c=new THREE.Vector3,h=new t,l=new t,u=new t;function t(){}return t.prototype.init=function(t,e,r,i){this.c0=t,this.c1=r,this.c2=-3*t+3*e-2*r-i,this.c3=2*t-2*e+r+i},t.prototype.initNonuniformCatmullRom=function(t,e,r,i,n,o,a){n=(e-t)/n-(r-t)/(n+o)+(r-e)/o,a=(r-e)/o-(i-e)/(o+a)+(i-r)/a;this.init(e,r,n*=o,a*=o)},t.prototype.initCatmullRom=function(t,e,r,i,n){this.init(e,r,n*(r-t),n*(i-e))},t.prototype.calc=function(t){var e=t*t;return this.c0+this.c1*t+this.c2*e+this.c3*(e*t)},THREE.Curve.create(function(t){this.points=t||[],this.closed=!1},function(t){var e,r,i,n,o,a=this.points,s=a.length;return s<2&&console.log("duh, you need at least 2 points"),e=(i=(s-(this.closed?0:1))*t)-(n=Math.floor(i)),this.closed?n+=0<n?0:(Math.floor(Math.abs(n)/a.length)+1)*a.length:0===e&&n===s-1&&(n=s-2,e=1),r=this.closed||0<n?a[(n-1)%s]:(c.subVectors(a[0],a[1]).add(a[0]),c),t=a[n%s],i=a[(n+1)%s],n=this.closed||n+2<s?a[(n+2)%s]:(c.subVectors(a[s-1],a[s-2]).add(a[s-1]),c),void 0===this.type||"centripetal"===this.type||"chordal"===this.type?(o="chordal"===this.type?.5:.25,a=Math.pow(r.distanceToSquared(t),o),(s=Math.pow(t.distanceToSquared(i),o))<1e-4&&(s=1),a<1e-4&&(a=s),(o=Math.pow(i.distanceToSquared(n),o))<1e-4&&(o=s),h.initNonuniformCatmullRom(r.x,t.x,i.x,n.x,a,s,o),l.initNonuniformCatmullRom(r.y,t.y,i.y,n.y,a,s,o),u.initNonuniformCatmullRom(r.z,t.z,i.z,n.z,a,s,o)):"catmullrom"===this.type&&(o=void 0!==this.tension?this.tension:.5,h.initCatmullRom(r.x,t.x,i.x,n.x,o),l.initCatmullRom(r.y,t.y,i.y,n.y,o),u.initCatmullRom(r.z,t.z,i.z,n.z,o)),new THREE.Vector3(h.calc(e),l.calc(e),u.calc(e))})}(),THREE.ClosedSplineCurve3=function(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."),THREE.CatmullRomCurve3.call(this,t),this.type="catmullrom",this.closed=!0},THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype),THREE.BoxGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.fromBufferGeometry(new THREE.BoxBufferGeometry(t,e,r,i,n,o)),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.CubeGeometry=THREE.BoxGeometry,THREE.BoxBufferGeometry=function(t,e,r,i,n,o){THREE.BufferGeometry.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o};var S=this;i=Math.floor(i)||1,n=Math.floor(n)||1,o=Math.floor(o)||1;var a=(s=0,s+=i*n*2,s+=i*o*2,4*(s+=o*n*2)),s=a/4*6,L=new(65535<s?Uint32Array:Uint16Array)(s),A=new Float32Array(3*a),C=new Float32Array(3*a),P=new Float32Array(2*a),B=0,D=0,I=0,U=0,F=0;function c(t,e,r,i,n,o,a,s,c,h,l){for(var u=o/c,p=a/h,d=o/2,E=a/2,f=s/2,m=c+1,g=h+1,T=0,v=0,y=new THREE.Vector3,R=0;R<g;R++)for(var H=R*p-E,x=0;x<m;x++)y[t]=(x*u-d)*i,y[e]=H*n,y[r]=f,A[B]=y.x,A[B+1]=y.y,A[B+2]=y.z,y[t]=0,y[e]=0,y[r]=0<s?1:-1,C[B]=y.x,C[B+1]=y.y,C[B+2]=y.z,P[D]=x/c,P[D+1]=1-R/h,B+=3,D+=2,T+=1;for(R=0;R<h;R++)for(x=0;x<c;x++){var _=U+x+m*R,b=U+x+m*(R+1),M=U+(x+1)+m*(R+1),w=U+(x+1)+m*R;L[I]=_,L[I+1]=b,L[I+2]=w,L[I+3]=b,L[I+4]=M,L[I+5]=w,I+=6,v+=6}S.addGroup(F,v,l),F+=v,U+=T}c("z","y","x",-1,-1,r,e,t,o,n,0),c("z","y","x",1,-1,r,e,-t,o,n,1),c("x","z","y",1,1,t,r,e,i,o,2),c("x","z","y",1,-1,t,r,-e,i,o,3),c("x","y","z",1,-1,t,e,r,i,n,4),c("x","y","z",-1,-1,t,e,-r,i,n,5),this.setIndex(new THREE.BufferAttribute(L,1)),this.addAttribute("position",new THREE.BufferAttribute(A,3)),this.addAttribute("normal",new THREE.BufferAttribute(C,3)),this.addAttribute("uv",new THREE.BufferAttribute(P,2))},THREE.BoxBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.BoxBufferGeometry.prototype.constructor=THREE.BoxBufferGeometry,THREE.CircleGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},this.fromBufferGeometry(new THREE.CircleBufferGeometry(t,e,r,i))},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CircleBufferGeometry=function(t,e,r,i){THREE.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},t=t||50,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n=e+2,o=new Float32Array(3*n),a=new Float32Array(3*n),s=new Float32Array(2*n);a[2]=1,s[0]=.5,s[1]=.5;for(var c=0,h=3,l=2;c<=e;c++,h+=3,l+=2){var u=r+c/e*i;o[h]=t*Math.cos(u),o[h+1]=t*Math.sin(u),a[h+2]=1,s[l]=(o[h]/t+1)/2,s[l+1]=(o[h+1]/t+1)/2}for(var p=[],h=1;h<=e;h++)p.push(h,h+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(p),1)),this.addAttribute("position",new THREE.BufferAttribute(o,3)),this.addAttribute("normal",new THREE.BufferAttribute(a,3)),this.addAttribute("uv",new THREE.BufferAttribute(s,2)),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry,THREE.CylinderBufferGeometry=function(E,f,m,g,T,e,v,y){THREE.BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:E,radiusBottom:f,height:m,radialSegments:g,heightSegments:T,openEnded:e,thetaStart:v,thetaLength:y};var R=this;E=void 0!==E?E:20,f=void 0!==f?f:20,m=void 0!==m?m:100,g=Math.floor(g)||8,T=Math.floor(T)||1,e=void 0!==e&&e,v=void 0!==v?v:0,y=void 0!==y?y:2*Math.PI;var t=function(){var t=(g+1)*(T+1);!1===e&&(t+=2*(g+1)+2*g);return t}(),r=function(){var t=g*T*2*3;!1===e&&(t+=2*g*3);return t}(),H=new THREE.BufferAttribute(new(65535<r?Uint32Array:Uint16Array)(r),1),x=new THREE.BufferAttribute(new Float32Array(3*t),3),_=new THREE.BufferAttribute(new Float32Array(3*t),3),b=new THREE.BufferAttribute(new Float32Array(2*t),2),M=0,w=0,S=[],L=m/2,A=0;function i(t){for(var e,r=new THREE.Vector2,i=new THREE.Vector3,n=0,o=!0===t?E:f,a=!0===t?1:-1,s=M,c=1;c<=g;c++)x.setXYZ(M,0,L*a,0),_.setXYZ(M,0,a,0),!0===t?(r.x=c/g,r.y=0):(r.x=(c-1)/g,r.y=1),b.setXY(M,r.x,r.y),M++;for(e=M,c=0;c<=g;c++){var h=c/g;i.x=o*Math.sin(h*y+v),i.y=L*a,i.z=o*Math.cos(h*y+v),x.setXYZ(M,i.x,i.y,i.z),_.setXYZ(M,0,a,0),b.setXY(M,h,!0===t?1:0),M++}for(c=0;c<g;c++){var l=s+c,u=e+c;!0===t?(H.setX(w,u),w++,H.setX(w,u+1)):(H.setX(w,u+1),w++,H.setX(w,u)),w++,H.setX(w,l),w++,n+=3}R.addGroup(A,n,!0===t?1:2),A+=n}!function(){var t,e,r=new THREE.Vector3,i=new THREE.Vector3,n=0,o=(f-E)/m;for(e=0;e<=T;e++){var a=[],s=e/T,c=s*(f-E)+E;for(t=0;t<=g;t++){var h=t/g;i.x=c*Math.sin(h*y+v),i.y=-s*m+L,i.z=c*Math.cos(h*y+v),x.setXYZ(M,i.x,i.y,i.z),r.copy(i),(0===E&&0===e||0===f&&e===T)&&(r.x=Math.sin(h*y+v),r.z=Math.cos(h*y+v)),r.setY(Math.sqrt(r.x*r.x+r.z*r.z)*o).normalize(),_.setXYZ(M,r.x,r.y,r.z),b.setXY(M,h,1-s),a.push(M),M++}S.push(a)}for(t=0;t<g;t++)for(e=0;e<T;e++){var l=S[e][t],u=S[e+1][t],p=S[e+1][t+1],d=S[e][t+1];H.setX(w,l),w++,H.setX(w,u),w++,H.setX(w,d),w++,H.setX(w,u),w++,H.setX(w,p),w++,H.setX(w,d),w++,n+=6}R.addGroup(A,n,0),A+=n}(),!1===e&&(0<E&&i(!0),0<f&&i(!1)),this.setIndex(H),this.addAttribute("position",x),this.addAttribute("normal",_),this.addAttribute("uv",b)},THREE.CylinderBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CylinderBufferGeometry.prototype.constructor=THREE.CylinderBufferGeometry,THREE.CylinderGeometry=function(t,e,r,i,n,o,a,s){THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new THREE.CylinderBufferGeometry(t,e,r,i,n,o,a,s)),this.mergeVertices()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.EdgesGeometry=function(t,e){THREE.BufferGeometry.call(this),e=void 0!==e?e:1;var r=Math.cos(THREE.Math.DEG2RAD*e),i=[0,0],n={};function o(t,e){return t-e}var a,s=["a","b","c"];t instanceof THREE.BufferGeometry?(a=new THREE.Geometry).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();for(var c=a.vertices,h=a.faces,l=0,u=h.length;l<u;l++)for(var p=h[l],d=0;d<3;d++)i[0]=p[s[d]],i[1]=p[s[(d+1)%3]],i.sort(o),void 0===n[E=i.toString()]?n[E]={vert1:i[0],vert2:i[1],face1:l,face2:void 0}:n[E].face2=l;var E,f=[];for(E in n){var m,g=n[E];(void 0===g.face2||h[g.face1].normal.dot(h[g.face2].normal)<=r)&&(m=c[g.vert1],f.push(m.x),f.push(m.y),f.push(m.z),m=c[g.vert2],f.push(m.x),f.push(m.y),f.push(m.z))}this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(f),3))},THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry,THREE.ExtrudeGeometry=function(t,e){void 0!==t?(THREE.Geometry.call(this),this.type="ExtrudeGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeFaceNormals()):t=[]},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(t,e){for(var r=t.length,i=0;i<r;i++){var n=t[i];this.addShape(n,e)}},THREE.ExtrudeGeometry.prototype.addShape=function(t,e){var r,i,n,o,a,s,c=void 0!==e.amount?e.amount:100,h=void 0!==e.bevelThickness?e.bevelThickness:6,l=void 0!==e.bevelSize?e.bevelSize:h-2,u=void 0!==e.bevelSegments?e.bevelSegments:3,p=void 0===e.bevelEnabled||e.bevelEnabled,d=void 0!==e.curveSegments?e.curveSegments:12,E=void 0!==e.steps?e.steps:1,f=e.extrudePath,m=!1,g=void 0!==e.UVGenerator?e.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;f&&(r=f.getSpacedPoints(E),p=!(m=!0),i=void 0!==e.frames?e.frames:new THREE.TubeGeometry.FrenetFrames(f,E,!1),n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3),p||(l=h=u=0);var T=this,v=this.vertices.length,d=t.extractPoints(d),y=d.shape,R=d.holes;if(!THREE.ShapeUtils.isClockWise(y))for(y=y.reverse(),_=0,b=R.length;_<b;_++)s=R[_],THREE.ShapeUtils.isClockWise(s)&&(R[_]=s.reverse());for(var H=THREE.ShapeUtils.triangulateShape(y,R),x=y,_=0,b=R.length;_<b;_++)s=R[_],y=y.concat(s);function M(t,e,r){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(r).add(t)}var w,S,L,A,C,P,B=y.length,D=H.length;function I(t,e,r){var i=1,n=t.x-e.x,o=t.y-e.y,a=r.x-t.x,s=r.y-t.y,c=n*n+o*o;if(Math.abs(n*s-o*a)>Number.EPSILON){var h=Math.sqrt(c),l=Math.sqrt(a*a+s*s),u=e.x-o/h,h=e.y+n/h,l=((r.x-s/l-u)*s-(r.y+a/l-h)*a)/(n*s-o*a),l=(u=u+n*l-t.x)*u+(h=h+o*l-t.y)*h;if(l<=2)return new THREE.Vector2(u,h);i=Math.sqrt(l/2)}else{l=!1;n>Number.EPSILON?a>Number.EPSILON&&(l=!0):n<-Number.EPSILON?a<-Number.EPSILON&&(l=!0):Math.sign(o)===Math.sign(s)&&(l=!0),i=l?(u=-o,h=n,Math.sqrt(c)):(u=n,h=o,Math.sqrt(c/2))}return new THREE.Vector2(u/i,h/i)}for(var U=[],F=0,N=x.length,V=N-1,G=F+1;F<N;F++,V++,G++)U[F]=I(x[F],x[V=V===N?0:V],x[G=G===N?0:G]);var O,z,k=[],W=U.concat();for(_=0,b=R.length;_<b;_++){for(s=R[_],O=[],F=0,V=(N=s.length)-1,G=F+1;F<N;F++,V++,G++)V===N&&(V=0),G===N&&(G=0),O[F]=I(s[F],s[V],s[G]);k.push(O),W=W.concat(O)}for(w=0;w<u;w++){for(A=h*(1-(L=w/u)),S=l*Math.sin(L*Math.PI/2),F=0,N=x.length;F<N;F++)X((C=M(x[F],U[F],S)).x,C.y,-A);for(_=0,b=R.length;_<b;_++)for(s=R[_],O=k[_],F=0,N=s.length;F<N;F++)X((C=M(s[F],O[F],S)).x,C.y,-A)}for(S=l,F=0;F<B;F++)C=p?M(y[F],W[F],S):y[F],m?(o.copy(i.normals[0]).multiplyScalar(C.x),n.copy(i.binormals[0]).multiplyScalar(C.y),a.copy(r[0]).add(o).add(n),X(a.x,a.y,a.z)):X(C.x,C.y,0);for(z=1;z<=E;z++)for(F=0;F<B;F++)C=p?M(y[F],W[F],S):y[F],m?(o.copy(i.normals[z]).multiplyScalar(C.x),n.copy(i.binormals[z]).multiplyScalar(C.y),a.copy(r[z]).add(o).add(n),X(a.x,a.y,a.z)):X(C.x,C.y,c/E*z);for(w=u-1;0<=w;w--){for(A=h*(1-(L=w/u)),S=l*Math.sin(L*Math.PI/2),F=0,N=x.length;F<N;F++)X((C=M(x[F],U[F],S)).x,C.y,c+A);for(_=0,b=R.length;_<b;_++)for(s=R[_],O=k[_],F=0,N=s.length;F<N;F++)C=M(s[F],O[F],S),m?X(C.x,C.y+r[E-1].y,r[E-1].x+A):X(C.x,C.y,c+A)}function j(t,e){var r,i;for(F=t.length;0<=--F;){(i=(r=F)-1)<0&&(i=t.length-1);for(var n=0,o=E+2*u,n=0;n<o;n++){var a=B*n,s=B*(n+1);!function(t,e,r,i){t+=v,e+=v,r+=v,i+=v,T.faces.push(new THREE.Face3(t,e,i,null,null,1)),T.faces.push(new THREE.Face3(e,r,i,null,null,1));i=g.generateSideWallUV(T,t,e,r,i);T.faceVertexUvs[0].push([i[0],i[1],i[3]]),T.faceVertexUvs[0].push([i[1],i[2],i[3]])}(e+r+a,e+i+a,e+i+s,e+r+s)}}}function X(t,e,r){T.vertices.push(new THREE.Vector3(t,e,r))}function q(t,e,r){T.faces.push(new THREE.Face3(t+=v,e+=v,r+=v,null,null,0));r=g.generateTopUV(T,t,e,r);T.faceVertexUvs[0].push(r)}!function(){if(p){var t=0*B;for(F=0;F<D;F++)q((P=H[F])[2]+t,P[1]+t,P[0]+t);for(t=B*(E+2*u),F=0;F<D;F++)q((P=H[F])[0]+t,P[1]+t,P[2]+t)}else{for(F=0;F<D;F++)q((P=H[F])[2],P[1],P[0]);for(F=0;F<D;F++)q((P=H[F])[0]+B*E,P[1]+B*E,P[2]+B*E)}}(),function(){var t=0;for(j(x,t),t+=x.length,_=0,b=R.length;_<b;_++)j(s=R[_],t),t+=s.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(t,e,r,i){t=t.vertices,e=t[e],r=t[r],i=t[i];return[new THREE.Vector2(e.x,e.y),new THREE.Vector2(r.x,r.y),new THREE.Vector2(i.x,i.y)]},generateSideWallUV:function(t,e,r,i,n){t=t.vertices,e=t[e],r=t[r],i=t[i],n=t[n];return Math.abs(e.y-r.y)<.01?[new THREE.Vector2(e.x,1-e.z),new THREE.Vector2(r.x,1-r.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(n.x,1-n.z)]:[new THREE.Vector2(e.y,1-e.z),new THREE.Vector2(r.y,1-r.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(n.y,1-n.z)]}},THREE.ShapeGeometry=function(t,e){THREE.Geometry.call(this),!(this.type="ShapeGeometry")===Array.isArray(t)&&(t=[t]),this.addShapeList(t,e),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(t,e){for(var r=0,i=t.length;r<i;r++)this.addShape(t[r],e);return this},THREE.ShapeGeometry.prototype.addShape=function(t,e){var r,i=void 0!==(e=void 0===e?{}:e).curveSegments?e.curveSegments:12,n=e.material,o=void 0===e.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:e.UVGenerator,a=this.vertices.length,i=t.extractPoints(i),s=i.shape,c=i.holes;if(!THREE.ShapeUtils.isClockWise(s))for(s=s.reverse(),l=0,u=c.length;l<u;l++)r=c[l],THREE.ShapeUtils.isClockWise(r)&&(c[l]=r.reverse());for(var h=THREE.ShapeUtils.triangulateShape(s,c),l=0,u=c.length;l<u;l++)r=c[l],s=s.concat(r);var p,d=s.length,E=h.length;for(l=0;l<d;l++)p=s[l],this.vertices.push(new THREE.Vector3(p.x,p.y,0));for(l=0;l<E;l++){var f=(g=h[l])[0]+a,m=g[1]+a,g=g[2]+a;this.faces.push(new THREE.Face3(f,m,g,null,null,n)),this.faceVertexUvs[0].push(o.generateTopUV(this,f,m,g))}},THREE.LatheBufferGeometry=function(t,e,r,i){THREE.BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:i},e=Math.floor(e)||12,r=r||0,i=i||2*Math.PI,i=THREE.Math.clamp(i,0,2*Math.PI);for(var n=(e+1)*t.length,o=e*t.length*2*3,a=new THREE.BufferAttribute(new(65535<o?Uint32Array:Uint16Array)(o),1),s=new THREE.BufferAttribute(new Float32Array(3*n),3),c=new THREE.BufferAttribute(new Float32Array(2*n),2),h=0,l=0,u=(t.length,1/e),p=new THREE.Vector3,d=new THREE.Vector2,E=0;E<=e;E++)for(var f=r+E*u*i,m=Math.sin(f),g=Math.cos(f),T=0;T<=t.length-1;T++)p.x=t[T].x*m,p.y=t[T].y,p.z=t[T].x*g,s.setXYZ(h,p.x,p.y,p.z),d.x=E/e,d.y=T/(t.length-1),c.setXY(h,d.x,d.y),h++;for(E=0;E<e;E++)for(T=0;T<t.length-1;T++){var v,y=v=T+E*t.length,R=v+t.length,H=v+t.length+1,x=v+1;a.setX(l,y),l++,a.setX(l,R),l++,a.setX(l,x),l++,a.setX(l,R),l++,a.setX(l,H),l++,a.setX(l,x),l++}if(this.setIndex(a),this.addAttribute("position",s),this.addAttribute("uv",c),this.computeVertexNormals(),i===2*Math.PI){var _=this.attributes.normal.array,b=new THREE.Vector3,M=new THREE.Vector3,w=new THREE.Vector3;for(v=e*t.length*3,T=E=0;E<t.length;E++,T+=3)b.x=_[T+0],b.y=_[T+1],b.z=_[T+2],M.x=_[v+T+0],M.y=_[v+T+1],M.z=_[v+T+2],w.addVectors(b,M).normalize(),_[T+0]=_[v+T+0]=w.x,_[T+1]=_[v+T+1]=w.y,_[T+2]=_[v+T+2]=w.z}},THREE.LatheBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.LatheBufferGeometry.prototype.constructor=THREE.LatheBufferGeometry,THREE.LatheGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:i},this.fromBufferGeometry(new THREE.LatheBufferGeometry(t,e,r,i)),this.mergeVertices()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:i},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(t,e,r,i))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneBufferGeometry=function(t,e,r,i){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:i};for(var n=t/2,o=e/2,a=Math.floor(r)||1,s=Math.floor(i)||1,c=a+1,h=s+1,l=t/a,u=e/s,p=new Float32Array(c*h*3),d=new Float32Array(c*h*3),E=new Float32Array(c*h*2),f=0,m=0,g=0;g<h;g++)for(var T=g*u-o,v=0;v<c;v++)p[f]=v*l-n,p[f+1]=-T,d[f+2]=1,E[m]=v/a,E[m+1]=1-g/s,f+=3,m+=2;for(var f=0,y=new(65535<p.length/3?Uint32Array:Uint16Array)(a*s*6),g=0;g<s;g++)for(v=0;v<a;v++){var R=v+c*(g+1),H=v+1+c*(g+1),x=v+1+c*g;y[f]=v+c*g,y[f+1]=R,y[f+2]=x,y[f+3]=R,y[f+4]=H,y[f+5]=x,f+=6}this.setIndex(new THREE.BufferAttribute(y,1)),this.addAttribute("position",new THREE.BufferAttribute(p,3)),this.addAttribute("normal",new THREE.BufferAttribute(d,3)),this.addAttribute("uv",new THREE.BufferAttribute(E,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.RingBufferGeometry=function(t,e,r,i,n,o){THREE.BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:o},t=t||20,e=e||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI;for(var a=((r=void 0!==r?Math.max(3,r):8)+1)*((i=void 0!==i?Math.max(1,i):1)+1),s=r*i*2*3,c=new THREE.BufferAttribute(new(65535<s?Uint32Array:Uint16Array)(s),1),h=new THREE.BufferAttribute(new Float32Array(3*a),3),l=new THREE.BufferAttribute(new Float32Array(3*a),3),u=new THREE.BufferAttribute(new Float32Array(2*a),2),p=0,d=0,E=t,f=(e-t)/i,m=new THREE.Vector3,g=new THREE.Vector2,T=0;T<=i;T++){for(y=0;y<=r;y++)R=n+y/r*o,m.x=E*Math.cos(R),m.y=E*Math.sin(R),h.setXYZ(p,m.x,m.y,m.z),l.setXYZ(p,0,0,1),g.x=(m.x/e+1)/2,g.y=(m.y/e+1)/2,u.setXY(p,g.x,g.y),p++;E+=f}for(T=0;T<i;T++)for(var v=T*(r+1),y=0;y<r;y++){var R,H=R=y+v,x=R+r+1,_=R+r+2,b=R+1;c.setX(d,H),d++,c.setX(d,x),d++,c.setX(d,_),d++,c.setX(d,H),d++,c.setX(d,_),d++,c.setX(d,b),d++}this.setIndex(c),this.addAttribute("position",h),this.addAttribute("normal",l),this.addAttribute("uv",u)},THREE.RingBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.RingBufferGeometry.prototype.constructor=THREE.RingBufferGeometry,THREE.RingGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new THREE.RingBufferGeometry(t,e,r,i,n,o))},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.SphereGeometry=function(t,e,r,i,n,o,a){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new THREE.SphereBufferGeometry(t,e,r,i,n,o,a))},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.SphereBufferGeometry=function(t,e,r,i,n,o,a){THREE.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},t=t||50,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;for(var s=(o=void 0!==o?o:0)+(a=void 0!==a?a:Math.PI),c=(e+1)*(r+1),h=new THREE.BufferAttribute(new Float32Array(3*c),3),l=new THREE.BufferAttribute(new Float32Array(3*c),3),u=new THREE.BufferAttribute(new Float32Array(2*c),2),p=0,d=[],E=new THREE.Vector3,f=0;f<=r;f++){for(var m=[],g=f/r,T=0;T<=e;T++){var v=T/e,y=-t*Math.cos(i+v*n)*Math.sin(o+g*a),R=t*Math.cos(o+g*a),H=t*Math.sin(i+v*n)*Math.sin(o+g*a);E.set(y,R,H).normalize(),h.setXYZ(p,y,R,H),l.setXYZ(p,E.x,E.y,E.z),u.setXY(p,v,1-g),m.push(p),p++}d.push(m)}for(var x=[],f=0;f<r;f++)for(T=0;T<e;T++){var _=d[f][T+1],b=d[f][T],M=d[f+1][T],w=d[f+1][T+1];(0!==f||0<o)&&x.push(_,b,w),(f!==r-1||s<Math.PI)&&x.push(b,M,w)}this.setIndex(new(65535<h.count?THREE.Uint32Attribute:THREE.Uint16Attribute)(x,1)),this.addAttribute("position",h),this.addAttribute("normal",l),this.addAttribute("uv",u),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry,THREE.TextGeometry=function(t,e){var r=(e=e||{}).font;if(r instanceof THREE.Font==!1)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new THREE.Geometry;t=r.generateShapes(t,e.size,e.curveSegments);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,t,e),this.type="TextGeometry"},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.TorusBufferGeometry=function(t,e,r,i,n){THREE.BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},t=t||100,e=e||40,r=Math.floor(r)||8,i=Math.floor(i)||6,n=n||2*Math.PI;for(var o,a=(r+1)*(i+1),s=r*i*2*3,c=new(65535<s?Uint32Array:Uint16Array)(s),h=new Float32Array(3*a),l=new Float32Array(3*a),u=new Float32Array(2*a),p=0,d=0,E=0,f=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3,T=0;T<=r;T++)for(o=0;o<=i;o++){var v=o/i*n,y=T/r*Math.PI*2;m.x=(t+e*Math.cos(y))*Math.cos(v),m.y=(t+e*Math.cos(y))*Math.sin(v),m.z=e*Math.sin(y),h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,f.x=t*Math.cos(v),f.y=t*Math.sin(v),g.subVectors(m,f).normalize(),l[p]=g.x,l[p+1]=g.y,l[p+2]=g.z,u[d]=o/i,u[d+1]=T/r,p+=3,d+=2}for(T=1;T<=r;T++)for(o=1;o<=i;o++){var R=(i+1)*(T-1)+o-1,H=(i+1)*(T-1)+o,x=(i+1)*T+o;c[E]=(i+1)*T+o-1,c[E+1]=R,c[E+2]=x,c[E+3]=R,c[E+4]=H,c[E+5]=x,E+=6}this.setIndex(new THREE.BufferAttribute(c,1)),this.addAttribute("position",new THREE.BufferAttribute(h,3)),this.addAttribute("normal",new THREE.BufferAttribute(l,3)),this.addAttribute("uv",new THREE.BufferAttribute(u,2))},THREE.TorusBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TorusBufferGeometry.prototype.constructor=THREE.TorusBufferGeometry,THREE.TorusGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},this.fromBufferGeometry(new THREE.TorusBufferGeometry(t,e,r,i,n))},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotBufferGeometry=function(t,e,r,i,n,o){THREE.BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:r,radialSegments:i,p:n,q:o},t=t||100,e=e||40,r=Math.floor(r)||64,n=n||2,o=o||3;for(var a,s=((i=Math.floor(i)||8)+1)*(r+1),c=i*r*2*3,h=new THREE.BufferAttribute(new(65535<c?Uint32Array:Uint16Array)(c),1),l=new THREE.BufferAttribute(new Float32Array(3*s),3),u=new THREE.BufferAttribute(new Float32Array(3*s),3),p=new THREE.BufferAttribute(new Float32Array(2*s),2),d=0,E=0,f=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector2,T=new THREE.Vector3,v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,H=new THREE.Vector3,x=0;x<=r;++x){var _=x/r*n*Math.PI*2;for(A(_,n,o,t,T),A(.01+_,n,o,t,v),R.subVectors(v,T),H.addVectors(v,T),y.crossVectors(R,H),H.crossVectors(y,R),y.normalize(),H.normalize(),a=0;a<=i;++a){var b=a/i*Math.PI*2,M=-e*Math.cos(b),b=e*Math.sin(b);f.x=T.x+(M*H.x+b*y.x),f.y=T.y+(M*H.y+b*y.y),f.z=T.z+(M*H.z+b*y.z),l.setXYZ(d,f.x,f.y,f.z),m.subVectors(f,T).normalize(),u.setXYZ(d,m.x,m.y,m.z),g.x=x/r,g.y=a/i,p.setXY(d,g.x,g.y),d++}}for(a=1;a<=r;a++)for(x=1;x<=i;x++){var w=(i+1)*a+(x-1),S=(i+1)*a+x,L=(i+1)*(a-1)+x;h.setX(E,(i+1)*(a-1)+(x-1)),E++,h.setX(E,w),E++,h.setX(E,L),E++,h.setX(E,w),E++,h.setX(E,S),E++,h.setX(E,L),E++}function A(t,e,r,i,n){var o=Math.cos(t),a=Math.sin(t),e=r/e*t,t=Math.cos(e);n.x=i*(2+t)*.5*o,n.y=i*(2+t)*a*.5,n.z=i*Math.sin(e)*.5}this.setIndex(h),this.addAttribute("position",l),this.addAttribute("normal",u),this.addAttribute("uv",p)},THREE.TorusKnotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TorusKnotBufferGeometry.prototype.constructor=THREE.TorusKnotBufferGeometry,THREE.TorusKnotGeometry=function(t,e,r,i,n,o,a){THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:r,radialSegments:i,p:n,q:o},void 0!==a&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(t,e,r,i,n,o)),this.mergeVertices()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:t,segments:e,radius:r,radialSegments:i,closed:n,taper:o},r=r||1,i=i||8,n=n||!1,o=o||THREE.TubeGeometry.NoTaper;var a,s,c,h,l,u,p,d,E,f,m,g,T,v,y,R,H,x,_=[],b=this,M=(e=e||64)+1,w=new THREE.Vector3,S=new THREE.TubeGeometry.FrenetFrames(t,e,n),L=S.tangents,A=S.normals,C=S.binormals;for(this.tangents=L,this.normals=A,this.binormals=C,u=0;u<M;u++)for(_[u]=[],l=t.getPointAt(c=u/(M-1)),L[u],a=A[u],s=C[u],h=r*o(c),p=0;p<i;p++)R=p/i*2*Math.PI,H=-h*Math.cos(R),x=h*Math.sin(R),w.copy(l),w.x+=H*a.x+x*s.x,w.y+=H*a.y+x*s.y,w.z+=H*a.z+x*s.z,_[u][p]=(R=w.x,H=w.y,x=w.z,b.vertices.push(new THREE.Vector3(R,H,x))-1);for(u=0;u<e;u++)for(p=0;p<i;p++)d=_[u][p],E=_[v=n?(u+1)%e:u+1][p],f=_[v][y=(p+1)%i],m=_[u][y],g=new THREE.Vector2(u/e,p/i),T=new THREE.Vector2((u+1)/e,p/i),v=new THREE.Vector2((u+1)/e,(p+1)/i),y=new THREE.Vector2(u/e,(p+1)/i),this.faces.push(new THREE.Face3(d,E,m)),this.faceVertexUvs[0].push([g,T,y]),this.faces.push(new THREE.Face3(E,f,m)),this.faceVertexUvs[0].push([T.clone(),v,y.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.NoTaper=function(t){return 1},THREE.TubeGeometry.SinusoidalTaper=function(t){return Math.sin(Math.PI*t)},THREE.TubeGeometry.FrenetFrames=function(t,e,r){var i,n,o,a,s,c,h=new THREE.Vector3,l=[],u=[],p=[],d=new THREE.Vector3,E=new THREE.Matrix4,f=e+1;for(this.tangents=l,this.normals=u,this.binormals=p,c=0;c<f;c++)l[c]=t.getTangentAt(c/(f-1)),l[c].normalize();for(!function(){u[0]=new THREE.Vector3,p[0]=new THREE.Vector3,n=Number.MAX_VALUE,o=Math.abs(l[0].x),a=Math.abs(l[0].y),s=Math.abs(l[0].z),o<=n&&(n=o,h.set(1,0,0));a<=n&&(n=a,h.set(0,1,0));s<=n&&h.set(0,0,1);d.crossVectors(l[0],h).normalize(),u[0].crossVectors(l[0],d),p[0].crossVectors(l[0],u[0])}(),c=1;c<f;c++)u[c]=u[c-1].clone(),p[c]=p[c-1].clone(),d.crossVectors(l[c-1],l[c]),d.length()>Number.EPSILON&&(d.normalize(),i=Math.acos(THREE.Math.clamp(l[c-1].dot(l[c]),-1,1)),u[c].applyMatrix4(E.makeRotationAxis(d,i))),p[c].crossVectors(l[c],u[c]);if(r)for(i=Math.acos(THREE.Math.clamp(u[0].dot(u[f-1]),-1,1)),i/=f-1,0<l[0].dot(d.crossVectors(u[0],u[f-1]))&&(i=-i),c=1;c<f;c++)u[c].applyMatrix4(E.makeRotationAxis(l[c],i*c)),p[c].crossVectors(l[c],u[c])},THREE.PolyhedronGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:i},r=r||1,i=i||0;for(var E=this,n=0,o=t.length;n<o;n+=3)y(new THREE.Vector3(t[n],t[n+1],t[n+2]));for(var a=this.vertices,s=[],n=0,c=0,o=e.length;n<o;n+=3,c++){var h=a[e[n]],l=a[e[n+1]],u=a[e[n+2]];s[c]=new THREE.Face3(h.index,l.index,u.index,[h.clone(),l.clone(),u.clone()],void 0,c)}for(var p=new THREE.Vector3,n=0,o=s.length;n<o;n++)!function(t,e){for(var r=Math.pow(2,e),i=y(E.vertices[t.a]),n=y(E.vertices[t.b]),o=y(E.vertices[t.c]),a=[],s=t.materialIndex,c=0;c<=r;c++){a[c]=[];for(var h=y(i.clone().lerp(o,c/r)),l=y(n.clone().lerp(o,c/r)),u=r-c,p=0;p<=u;p++)a[c][p]=0===p&&c===r?h:y(h.clone().lerp(l,p/u))}for(c=0;c<r;c++)for(p=0;p<2*(r-c)-1;p++){var d=Math.floor(p/2);p%2==0?R(a[c][d+1],a[c+1][d],a[c][d],s):R(a[c][d+1],a[c+1][d+1],a[c+1][d],s)}}(s[n],i);for(n=0,o=this.faceVertexUvs[0].length;n<o;n++){var d=this.faceVertexUvs[0][n],f=d[0].x,m=d[1].x,g=d[2].x,T=Math.max(f,m,g),v=Math.min(f,m,g);.9<T&&v<.1&&(f<.2&&(d[0].x+=1),m<.2&&(d[1].x+=1),g<.2&&(d[2].x+=1))}for(n=0,o=this.vertices.length;n<o;n++)this.vertices[n].multiplyScalar(r);function y(t){var e=t.normalize().clone();e.index=E.vertices.push(e)-1;var r=H(t)/2/Math.PI+.5,t=Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5;return e.uv=new THREE.Vector2(r,1-t),e}function R(t,e,r,i){i=new THREE.Face3(t.index,e.index,r.index,[t.clone(),e.clone(),r.clone()],void 0,i);E.faces.push(i),p.copy(t).add(e).add(r).divideScalar(3);i=H(p);E.faceVertexUvs[0].push([x(t.uv,t,i),x(e.uv,e,i),x(r.uv,r,i)])}function H(t){return Math.atan2(t.z,-t.x)}function x(t,e,r){return r<0&&1===t.x&&(t=new THREE.Vector2(t.x-1,t.y)),(t=0===e.x&&0===e.z?new THREE.Vector2(r/2/Math.PI+.5,t.y):t).clone()}this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.DodecahedronGeometry=function(t,e){var r=(1+Math.sqrt(5))/2,i=1/r;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}},THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.IcosahedronGeometry=function(t,e){var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(t,e){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}},THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(t,e){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(t,e,r){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:r};for(var i,n,o,a,s,c,h,l,u,p,d,E=this.vertices,f=this.faces,m=this.faceVertexUvs[0],g=e+1,T=0;T<=r;T++)for(o=T/r,i=0;i<=e;i++)n=t(i/e,o),E.push(n);for(T=0;T<r;T++)for(i=0;i<e;i++)s=(a=T*g+i)+1,c=(T+1)*g+i+1,h=(T+1)*g+i,l=new THREE.Vector2(i/e,T/r),u=new THREE.Vector2((i+1)/e,T/r),p=new THREE.Vector2((i+1)/e,(T+1)/r),d=new THREE.Vector2(i/e,(T+1)/r),f.push(new THREE.Face3(a,s,h)),m.push([l,u,d]),f.push(new THREE.Face3(s,c,h)),m.push([u.clone(),p,d.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.WireframeGeometry=function(t){THREE.BufferGeometry.call(this);var e=[0,0],r={};function i(t,e){return t-e}var n=["a","b","c"];if(t instanceof THREE.Geometry){for(var o=t.vertices,a=t.faces,s=0,c=new Uint32Array(6*a.length),h=0,l=a.length;h<l;h++)for(var u=a[h],p=0;p<3;p++)e[0]=u[n[p]],e[1]=u[n[(p+1)%3]],e.sort(i),void 0===r[H=e.toString()]&&(c[2*s]=e[0],c[2*s+1]=e[1],r[H]=!0,s++);for(var d=new Float32Array(2*s*3),h=0,l=s;h<l;h++)for(p=0;p<2;p++){var E=o[c[2*h+p]];d[(x=6*h+3*p)+0]=E.x,d[x+1]=E.y,d[x+2]=E.z}this.addAttribute("position",new THREE.BufferAttribute(d,3))}else if(t instanceof THREE.BufferGeometry)if(null!==t.index){var f=t.index.array,o=t.attributes.position,m=t.groups,s=0;0===m.length&&t.addGroup(0,f.length);for(var c=new Uint32Array(2*f.length),g=0,T=m.length;g<T;++g)for(var v=m[g],y=v.start,h=y,R=y+v.count;h<R;h+=3)for(var H,p=0;p<3;p++)e[0]=f[h+p],e[1]=f[h+(p+1)%3],e.sort(i),void 0===r[H=e.toString()]&&(c[2*s]=e[0],c[2*s+1]=e[1],r[H]=!0,s++);for(d=new Float32Array(2*s*3),h=0,l=s;h<l;h++)for(p=0;p<2;p++){var x=6*h+3*p,_=c[2*h+p];d[x+0]=o.getX(_),d[x+1]=o.getY(_),d[x+2]=o.getZ(_)}this.addAttribute("position",new THREE.BufferAttribute(d,3))}else{for(t=(s=(o=t.attributes.position.array).length/3)/3,d=new Float32Array(2*s*3),h=0,l=t;h<l;h++)for(p=0;p<3;p++){var b=9*h+3*p;d[(x=18*h+6*p)+0]=o[b],d[x+1]=o[1+b],d[x+2]=o[2+b];_=9*h+(p+1)%3*3;d[x+3]=o[_],d[x+4]=o[_+1],d[x+5]=o[_+2]}this.addAttribute("position",new THREE.BufferAttribute(d,3))}},THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry,THREE.AxisHelper=function(t){t=t||1;var e=new Float32Array([0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(e,3)),t.addAttribute("color",new THREE.BufferAttribute(r,3));r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,t,r)},THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var s=new THREE.CylinderGeometry(0,.5,1,5,1);return s.translate(0,-.5,0),function(t,e,r,i,n,o){THREE.Object3D.call(this),void 0===i&&(i=16776960),void 0===r&&(r=1),void 0===n&&(n=.2*r),void 0===o&&(o=.2*n),this.position.copy(e),this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(s,new THREE.MeshBasicMaterial({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(r,n,o)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var e,r=new THREE.Vector3;return function(t){.99999<t.y?this.quaternion.set(0,0,0,1):t.y<-.99999?this.quaternion.set(1,0,0,0):(r.set(t.z,0,-t.x).normalize(),e=Math.acos(t.y),this.quaternion.setFromAxisAngle(r,e))}}(),THREE.ArrowHelper.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},THREE.BoxHelper=function(t){var e=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new THREE.BufferGeometry;i.setIndex(new THREE.BufferAttribute(e,1)),i.addAttribute("position",new THREE.BufferAttribute(r,3)),THREE.LineSegments.call(this,i,new THREE.LineBasicMaterial({color:16776960})),void 0!==t&&this.update(t)},THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(){var n=new THREE.Box3;return function(t){var e,r,i;t instanceof THREE.Box3?n.copy(t):n.setFromObject(t),n.isEmpty()||(e=n.min,r=n.max,(t=(i=this.geometry.attributes.position).array)[0]=r.x,t[1]=r.y,t[2]=r.z,t[3]=e.x,t[4]=r.y,t[5]=r.z,t[6]=e.x,t[7]=e.y,t[8]=r.z,t[9]=r.x,t[10]=e.y,t[11]=r.z,t[12]=r.x,t[13]=r.y,t[14]=e.z,t[15]=e.x,t[16]=r.y,t[17]=e.z,t[18]=e.x,t[19]=e.y,t[20]=e.z,t[21]=r.x,t[22]=e.y,t[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere())}}(),THREE.BoundingBoxHelper=function(t,e){e=void 0!==e?e:8947848;this.object=t,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:e,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(t){var r=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={},n=16755200,o=16711680,a=3355443;function s(t,e,r){c(t,r),c(e,r)}function c(t,e){r.vertices.push(new THREE.Vector3),r.colors.push(new THREE.Color(e)),void 0===i[t]&&(i[t]=[]),i[t].push(r.vertices.length-1)}s("n1","n2",n),s("n2","n4",n),s("n4","n3",n),s("n3","n1",n),s("f1","f2",n),s("f2","f4",n),s("f4","f3",n),s("f3","f1",n),s("n1","f1",n),s("n2","f2",n),s("n3","f3",n),s("n4","f4",n),s("p","n1",o),s("p","n2",o),s("p","n3",o),s("p","n4",o),s("u1","u2",43775),s("u2","u3",43775),s("u3","u1",43775),s("c","t",16777215),s("p","c",a),s("cn1","cn2",a),s("cn3","cn4",a),s("cf1","cf2",a),s("cf3","cf4",a),THREE.LineSegments.call(this,r,e),this.camera=t,this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){var s,c,h=new THREE.Vector3,l=new THREE.Camera;function t(t,e,r,i){h.set(e,r,i).unproject(l);var n=c[t];if(void 0!==n)for(var o=0,a=n.length;o<a;o++)s.vertices[n[o]].copy(h)}return function(){s=this.geometry,c=this.pointMap;l.projectionMatrix.copy(this.camera.projectionMatrix),t("c",0,0,-1),t("t",0,0,1),t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),s.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,e=e||1;t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(-e,e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,-e,0),new THREE.Vector3(-e,-e,0),new THREE.Vector3(-e,e,0));e=new THREE.LineBasicMaterial({fog:!1});e.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(t,e),this.add(this.lightPlane),(t=new THREE.Geometry).vertices.push(new THREE.Vector3,new THREE.Vector3),(e=new THREE.LineBasicMaterial({fog:!1})).color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(t,e),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(e,t),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(t,e,r){e=void 0!==e?e:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(t.geometry,r),new THREE.LineBasicMaterial({color:e})),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;t=void 0!==r?r:16776960,e=void 0!==i?i:1,r=0,i=this.object.geometry;i instanceof THREE.Geometry?r=i.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");i=new THREE.BufferGeometry,r=new THREE.Float32Attribute(2*r*3,3);i.addAttribute("position",r),THREE.LineSegments.call(this,i,new THREE.LineBasicMaterial({color:t,linewidth:e})),this.matrixAutoUpdate=!1,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var l=new THREE.Vector3,u=new THREE.Vector3,p=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0),p.getNormalMatrix(this.object.matrixWorld);for(var t=this.object.matrixWorld,e=this.geometry.attributes.position,r=this.object.geometry,i=r.vertices,n=r.faces,o=0,a=0,s=n.length;a<s;a++){var c=n[a],h=c.normal;l.copy(i[c.a]).add(i[c.b]).add(i[c.c]).divideScalar(3).applyMatrix4(t),u.copy(h).applyMatrix3(p).normalize().multiplyScalar(this.size).add(l),e.setXYZ(o,l.x,l.y,l.z),o+=1,e.setXYZ(o,u.x,u.y,u.z),o+=1}return e.needsUpdate=!0,this}}(),THREE.GridHelper=function(t,e){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-t;n<=t;n+=e){r.vertices.push(new THREE.Vector3(-t,0,n),new THREE.Vector3(t,0,n),new THREE.Vector3(n,0,-t),new THREE.Vector3(n,0,t));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.LineSegments.call(this,r,i)},THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(t,e){this.color1.set(t),this.color2.set(e),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var r=new THREE.SphereGeometry(e,4,2);r.rotateX(-Math.PI/2);for(var i=0;i<8;i++)r.faces[i].color=this.colors[i<4?0:1];e=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(r,e),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var t=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(t,e){this.light=t,this.light.updateMatrixWorld();t=new THREE.SphereGeometry(e,4,2),e=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});e.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,t,e),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(t){this.bones=this.getBoneList(t);for(var e=new THREE.Geometry,r=0;r<this.bones.length;r++)this.bones[r].parent instanceof THREE.Bone&&(e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3),e.colors.push(new THREE.Color(0,0,1)),e.colors.push(new THREE.Color(0,1,0)));e.dynamic=!0;var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.LineSegments.call(this,e,i),this.root=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(t){var e=[];t instanceof THREE.Bone&&e.push(t);for(var r=0;r<t.children.length;r++)e.push.apply(e,this.getBoneList(t.children[r]));return e},THREE.SkeletonHelper.prototype.update=function(){for(var t=this.geometry,e=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(e,o.matrixWorld),t.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(e,o.parent.matrixWorld),t.vertices[i+1].setFromMatrixPosition(r),i+=2)}t.verticesNeedUpdate=!0,t.computeBoundingSphere()},THREE.SpotLightHelper=function(t){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;for(var e=new THREE.BufferGeometry,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,n=1;i<32;i++,n++){var o=i/32*Math.PI*2,a=n/32*Math.PI*2;r.push(Math.cos(o),Math.sin(o),1,Math.cos(a),Math.sin(a),1)}e.addAttribute("position",new THREE.Float32Attribute(r,3));t=new THREE.LineBasicMaterial({fog:!1});this.cone=new THREE.LineSegments(e,t),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var r=new THREE.Vector3,i=new THREE.Vector3;return function(){var t=this.light.distance||1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),r.setFromMatrixPosition(this.light.matrixWorld),i.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(i.sub(r)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;t=void 0!==r?r:16711680,e=void 0!==i?i:1,r=0,i=this.object.geometry;i instanceof THREE.Geometry?r=3*i.faces.length:i instanceof THREE.BufferGeometry&&(r=i.attributes.normal.count);i=new THREE.BufferGeometry,r=new THREE.Float32Attribute(2*r*3,3);i.addAttribute("position",r),THREE.LineSegments.call(this,i,new THREE.LineBasicMaterial({color:t,linewidth:e})),this.matrixAutoUpdate=!1,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(){var m=new THREE.Vector3,g=new THREE.Vector3,T=new THREE.Matrix3;return function(){var t=["a","b","c"];this.object.updateMatrixWorld(!0),T.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld,r=this.geometry.attributes.position,i=this.object.geometry;if(i instanceof THREE.Geometry)for(var n=i.vertices,o=i.faces,a=0,s=0,c=o.length;s<c;s++)for(var h=o[s],l=0,u=h.vertexNormals.length;l<u;l++){var p=n[h[t[l]]],d=h.vertexNormals[l];m.copy(p).applyMatrix4(e),g.copy(d).applyMatrix3(T).normalize().multiplyScalar(this.size).add(m),r.setXYZ(a,m.x,m.y,m.z),a+=1,r.setXYZ(a,g.x,g.y,g.z),a+=1}else if(i instanceof THREE.BufferGeometry)for(var E=i.attributes.position,f=i.attributes.normal,a=0,l=0,u=E.count;l<u;l++)m.set(E.getX(l),E.getY(l),E.getZ(l)).applyMatrix4(e),g.set(f.getX(l),f.getY(l),f.getZ(l)),g.applyMatrix3(T).normalize().multiplyScalar(this.size).add(m),r.setXYZ(a,m.x,m.y,m.z),r.setXYZ(a+=1,g.x,g.y,g.z),a+=1;return r.needsUpdate=!0,this}}(),THREE.WireframeHelper=function(t,e){e=void 0!==e?e:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(t.geometry),new THREE.LineBasicMaterial({color:e})),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(t){THREE.Object3D.call(this),this.material=t,this.render=function(t){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(t,e){THREE.Mesh.call(this,t,e),this.animationsMap={},this.animationsList=[];e=this.geometry.morphTargets.length;this.createAnimation("__default",0,e-1,+e),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(t,e,r,i){i={start:e,end:r,length:r-e+1,fps:i,duration:(r-e)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[t]=i,this.animationsList.push(i)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(t){for(var e,r=/([a-z]+)_?(\d+)/i,i={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s,c=n.morphTargets[o].name.match(r);c&&1<c.length&&(i[s=c[1]]||(i[s]={start:1/0,end:-1/0}),o<(h=i[s]).start&&(h.start=o),o>h.end&&(h.end=o),e=e||s)}for(s in i){var h=i[s];this.createAnimation(s,h.start,h.end,t)}this.firstAnimation=e},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(t){t=this.animationsMap[t];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(t){t=this.animationsMap[t];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(t,e){t=this.animationsMap[t];t&&(t.fps=e,t.duration=(t.end-t.start)/t.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(t,e){t=this.animationsMap[t];t&&(t.duration=e,t.fps=(t.end-t.start)/t.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(t,e){t=this.animationsMap[t];t&&(t.weight=e)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(t,e){t=this.animationsMap[t];t&&(t.time=e)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(t){var e=0,t=this.animationsMap[t];return e=t?t.time:e},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(t){var e=-1,t=this.animationsMap[t];return e=t?t.duration:e},THREE.MorphBlendMesh.prototype.playAnimation=function(t){var e=this.animationsMap[t];e?(e.time=0,e.active=!0):console.warn("THREE.MorphBlendMesh: animation["+t+"] undefined in .playAnimation()")},THREE.MorphBlendMesh.prototype.stopAnimation=function(t){t=this.animationsMap[t];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(t){for(var e=0,r=this.animationsList.length;e<r;e++){var i,n,o,a=this.animationsList[e];a.active&&(o=a.duration/a.length,a.time+=a.direction*t,a.mirroredLoop?(a.time>a.duration||a.time<0)&&(a.direction*=-1,a.time>a.duration&&(a.time=a.duration,a.directionBackwards=!0),a.time<0&&(a.time=0,a.directionBackwards=!1)):(a.time=a.time%a.duration,a.time<0&&(a.time+=a.duration)),i=a.start+THREE.Math.clamp(Math.floor(a.time/o),0,a.length-1),n=a.weight,i!==a.currentFrame&&(this.morphTargetInfluences[a.lastFrame]=0,this.morphTargetInfluences[a.currentFrame]=+n,this.morphTargetInfluences[i]=0,a.lastFrame=a.currentFrame,a.currentFrame=i),o=a.time%o/o,a.directionBackwards&&(o=1-o),a.currentFrame!==a.lastFrame?(this.morphTargetInfluences[a.currentFrame]=o*n,this.morphTargetInfluences[a.lastFrame]=(1-o)*n):this.morphTargetInfluences[a.currentFrame]=n)}};